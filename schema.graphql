# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AcessHistoryUser {
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type AcessHistoryUserAvgAggregate {
  id: Float
}

input AcessHistoryUserAvgOrderByAggregateInput {
  id: SortOrder
}

type AcessHistoryUserCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
  userUuid: Int!
}

input AcessHistoryUserCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input AcessHistoryUserCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input AcessHistoryUserCreateManyUserInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input AcessHistoryUserCreateManyUserInputEnvelope {
  data: [AcessHistoryUserCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input AcessHistoryUserCreateOrConnectWithoutUserInput {
  create: AcessHistoryUserUncheckedCreateWithoutUserInput!
  where: AcessHistoryUserWhereUniqueInput!
}

input AcessHistoryUserCreateWithoutUserInput {
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type AcessHistoryUserGroupBy {
  _avg: AcessHistoryUserAvgAggregate
  _count: AcessHistoryUserCountAggregate
  _max: AcessHistoryUserMaxAggregate
  _min: AcessHistoryUserMinAggregate
  _sum: AcessHistoryUserSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input AcessHistoryUserListRelationFilter {
  every: AcessHistoryUserWhereInput
  none: AcessHistoryUserWhereInput
  some: AcessHistoryUserWhereInput
}

type AcessHistoryUserMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input AcessHistoryUserMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type AcessHistoryUserMinAggregate {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input AcessHistoryUserMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input AcessHistoryUserOrderByRelationAggregateInput {
  _count: SortOrder
}

input AcessHistoryUserOrderByWithAggregationInput {
  _avg: AcessHistoryUserAvgOrderByAggregateInput
  _count: AcessHistoryUserCountOrderByAggregateInput
  _max: AcessHistoryUserMaxOrderByAggregateInput
  _min: AcessHistoryUserMinOrderByAggregateInput
  _sum: AcessHistoryUserSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input AcessHistoryUserOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum AcessHistoryUserScalarFieldEnum {
  createdAt
  id
  updatedAt
  userUuid
}

input AcessHistoryUserScalarWhereInput {
  AND: [AcessHistoryUserScalarWhereInput!]
  NOT: [AcessHistoryUserScalarWhereInput!]
  OR: [AcessHistoryUserScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input AcessHistoryUserScalarWhereWithAggregatesInput {
  AND: [AcessHistoryUserScalarWhereWithAggregatesInput!]
  NOT: [AcessHistoryUserScalarWhereWithAggregatesInput!]
  OR: [AcessHistoryUserScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type AcessHistoryUserSumAggregate {
  id: Int
}

input AcessHistoryUserSumOrderByAggregateInput {
  id: SortOrder
}

input AcessHistoryUserUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput {
  connect: [AcessHistoryUserWhereUniqueInput!]
  connectOrCreate: [AcessHistoryUserCreateOrConnectWithoutUserInput!]
  create: [AcessHistoryUserCreateWithoutUserInput!]
  createMany: AcessHistoryUserCreateManyUserInputEnvelope
}

input AcessHistoryUserUncheckedCreateWithoutUserInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input AcessHistoryUserUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input AcessHistoryUserUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input AcessHistoryUserUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AcessHistoryUserUncheckedUpdateManyWithoutUserNestedInput {
  connect: [AcessHistoryUserWhereUniqueInput!]
  connectOrCreate: [AcessHistoryUserCreateOrConnectWithoutUserInput!]
  create: [AcessHistoryUserCreateWithoutUserInput!]
  createMany: AcessHistoryUserCreateManyUserInputEnvelope
  delete: [AcessHistoryUserWhereUniqueInput!]
  deleteMany: [AcessHistoryUserScalarWhereInput!]
  disconnect: [AcessHistoryUserWhereUniqueInput!]
  set: [AcessHistoryUserWhereUniqueInput!]
  update: [AcessHistoryUserUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AcessHistoryUserUpdateManyWithWhereWithoutUserInput!]
  upsert: [AcessHistoryUserUpsertWithWhereUniqueWithoutUserInput!]
}

input AcessHistoryUserUncheckedUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AcessHistoryUserUpdateManyWithWhereWithoutUserInput {
  data: AcessHistoryUserUncheckedUpdateManyWithoutUserInput!
  where: AcessHistoryUserScalarWhereInput!
}

input AcessHistoryUserUpdateWithWhereUniqueWithoutUserInput {
  data: AcessHistoryUserUncheckedUpdateWithoutUserInput!
  where: AcessHistoryUserWhereUniqueInput!
}

input AcessHistoryUserUpsertWithWhereUniqueWithoutUserInput {
  create: AcessHistoryUserUncheckedCreateWithoutUserInput!
  update: AcessHistoryUserUncheckedUpdateWithoutUserInput!
  where: AcessHistoryUserWhereUniqueInput!
}

input AcessHistoryUserWhereInput {
  AND: [AcessHistoryUserWhereInput!]
  NOT: [AcessHistoryUserWhereInput!]
  OR: [AcessHistoryUserWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input AcessHistoryUserWhereUniqueInput {
  AND: [AcessHistoryUserWhereInput!]
  NOT: [AcessHistoryUserWhereInput!]
  OR: [AcessHistoryUserWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

type AffectedRowsOutput {
  count: Int!
}

type AggregateAcessHistoryUser {
  _avg: AcessHistoryUserAvgAggregate
  _count: AcessHistoryUserCountAggregate
  _max: AcessHistoryUserMaxAggregate
  _min: AcessHistoryUserMinAggregate
  _sum: AcessHistoryUserSumAggregate
}

type AggregateArchives {
  _avg: ArchivesAvgAggregate
  _count: ArchivesCountAggregate
  _max: ArchivesMaxAggregate
  _min: ArchivesMinAggregate
  _sum: ArchivesSumAggregate
}

type AggregateBoard {
  _count: BoardCountAggregate
  _max: BoardMaxAggregate
  _min: BoardMinAggregate
}

type AggregateBoardMenbership {
  _avg: BoardMenbershipAvgAggregate
  _count: BoardMenbershipCountAggregate
  _max: BoardMenbershipMaxAggregate
  _min: BoardMenbershipMinAggregate
  _sum: BoardMenbershipSumAggregate
}

type AggregateCard {
  _avg: CardAvgAggregate
  _count: CardCountAggregate
  _max: CardMaxAggregate
  _min: CardMinAggregate
  _sum: CardSumAggregate
}

type AggregateCardAssignment {
  _avg: CardAssignmentAvgAggregate
  _count: CardAssignmentCountAggregate
  _max: CardAssignmentMaxAggregate
  _min: CardAssignmentMinAggregate
  _sum: CardAssignmentSumAggregate
}

type AggregateCardComment {
  _avg: CardCommentAvgAggregate
  _count: CardCommentCountAggregate
  _max: CardCommentMaxAggregate
  _min: CardCommentMinAggregate
  _sum: CardCommentSumAggregate
}

type AggregateCardMovement {
  _avg: CardMovementAvgAggregate
  _count: CardMovementCountAggregate
  _max: CardMovementMaxAggregate
  _min: CardMovementMinAggregate
  _sum: CardMovementSumAggregate
}

type AggregateCardTags {
  _avg: CardTagsAvgAggregate
  _count: CardTagsCountAggregate
  _max: CardTagsMaxAggregate
  _min: CardTagsMinAggregate
  _sum: CardTagsSumAggregate
}

type AggregateClient {
  _avg: ClientAvgAggregate
  _count: ClientCountAggregate
  _max: ClientMaxAggregate
  _min: ClientMinAggregate
  _sum: ClientSumAggregate
}

type AggregateColumn {
  _avg: ColumnAvgAggregate
  _count: ColumnCountAggregate
  _max: ColumnMaxAggregate
  _min: ColumnMinAggregate
  _sum: ColumnSumAggregate
}

type AggregateCommentProject {
  _avg: CommentProjectAvgAggregate
  _count: CommentProjectCountAggregate
  _max: CommentProjectMaxAggregate
  _min: CommentProjectMinAggregate
  _sum: CommentProjectSumAggregate
}

type AggregateCsat {
  _avg: CsatAvgAggregate
  _count: CsatCountAggregate
  _max: CsatMaxAggregate
  _min: CsatMinAggregate
  _sum: CsatSumAggregate
}

type AggregateField {
  _avg: FieldAvgAggregate
  _count: FieldCountAggregate
  _max: FieldMaxAggregate
  _min: FieldMinAggregate
  _sum: FieldSumAggregate
}

type AggregateFieldColumn {
  _avg: FieldColumnAvgAggregate
  _count: FieldColumnCountAggregate
  _max: FieldColumnMaxAggregate
  _min: FieldColumnMinAggregate
  _sum: FieldColumnSumAggregate
}

type AggregateFieldsValue {
  _avg: FieldsValueAvgAggregate
  _count: FieldsValueCountAggregate
  _max: FieldsValueMaxAggregate
  _min: FieldsValueMinAggregate
  _sum: FieldsValueSumAggregate
}

type AggregateGroup {
  _avg: GroupAvgAggregate
  _count: GroupCountAggregate
  _max: GroupMaxAggregate
  _min: GroupMinAggregate
  _sum: GroupSumAggregate
}

type AggregateGroupMenbership {
  _avg: GroupMenbershipAvgAggregate
  _count: GroupMenbershipCountAggregate
  _max: GroupMenbershipMaxAggregate
  _min: GroupMenbershipMinAggregate
  _sum: GroupMenbershipSumAggregate
}

type AggregateGroupUser {
  _avg: GroupUserAvgAggregate
  _count: GroupUserCountAggregate
  _max: GroupUserMaxAggregate
  _min: GroupUserMinAggregate
  _sum: GroupUserSumAggregate
}

type AggregateHistoryFlag {
  _avg: HistoryFlagAvgAggregate
  _count: HistoryFlagCountAggregate
  _max: HistoryFlagMaxAggregate
  _min: HistoryFlagMinAggregate
  _sum: HistoryFlagSumAggregate
}

type AggregateHistoryMonthlyRecurringRevenue {
  _avg: HistoryMonthlyRecurringRevenueAvgAggregate
  _count: HistoryMonthlyRecurringRevenueCountAggregate
  _max: HistoryMonthlyRecurringRevenueMaxAggregate
  _min: HistoryMonthlyRecurringRevenueMinAggregate
  _sum: HistoryMonthlyRecurringRevenueSumAggregate
}

type AggregateHistoryStep {
  _avg: HistoryStepAvgAggregate
  _count: HistoryStepCountAggregate
  _max: HistoryStepMaxAggregate
  _min: HistoryStepMinAggregate
  _sum: HistoryStepSumAggregate
}

type AggregateInvest {
  _avg: InvestAvgAggregate
  _count: InvestCountAggregate
  _max: InvestMaxAggregate
  _min: InvestMinAggregate
  _sum: InvestSumAggregate
}

type AggregateJobFunction {
  _avg: JobFunctionAvgAggregate
  _count: JobFunctionCountAggregate
  _max: JobFunctionMaxAggregate
  _min: JobFunctionMinAggregate
  _sum: JobFunctionSumAggregate
}

type AggregateKr {
  _avg: KrAvgAggregate
  _count: KrCountAggregate
  _max: KrMaxAggregate
  _min: KrMinAggregate
  _sum: KrSumAggregate
}

type AggregateKrCommentProject {
  _avg: KrCommentProjectAvgAggregate
  _count: KrCommentProjectCountAggregate
  _max: KrCommentProjectMaxAggregate
  _min: KrCommentProjectMinAggregate
  _sum: KrCommentProjectSumAggregate
}

type AggregateNotfy {
  _avg: NotfyAvgAggregate
  _count: NotfyCountAggregate
  _max: NotfyMaxAggregate
  _min: NotfyMinAggregate
  _sum: NotfySumAggregate
}

type AggregateObjective {
  _avg: ObjectiveAvgAggregate
  _count: ObjectiveCountAggregate
  _max: ObjectiveMaxAggregate
  _min: ObjectiveMinAggregate
  _sum: ObjectiveSumAggregate
}

type AggregateOkrObjectiveProject {
  _avg: OkrObjectiveProjectAvgAggregate
  _count: OkrObjectiveProjectCountAggregate
  _max: OkrObjectiveProjectMaxAggregate
  _min: OkrObjectiveProjectMinAggregate
  _sum: OkrObjectiveProjectSumAggregate
}

type AggregateOkrProject {
  _avg: OkrProjectAvgAggregate
  _count: OkrProjectCountAggregate
  _max: OkrProjectMaxAggregate
  _min: OkrProjectMinAggregate
  _sum: OkrProjectSumAggregate
}

type AggregateOkrProjectHistory {
  _avg: OkrProjectHistoryAvgAggregate
  _count: OkrProjectHistoryCountAggregate
  _max: OkrProjectHistoryMaxAggregate
  _min: OkrProjectHistoryMinAggregate
  _sum: OkrProjectHistorySumAggregate
}

type AggregateOrganization {
  _avg: OrganizationAvgAggregate
  _count: OrganizationCountAggregate
  _max: OrganizationMaxAggregate
  _min: OrganizationMinAggregate
  _sum: OrganizationSumAggregate
}

type AggregatePermission {
  _avg: PermissionAvgAggregate
  _count: PermissionCountAggregate
  _max: PermissionMaxAggregate
  _min: PermissionMinAggregate
  _sum: PermissionSumAggregate
}

type AggregatePipefyProject {
  _avg: PipefyProjectAvgAggregate
  _count: PipefyProjectCountAggregate
  _max: PipefyProjectMaxAggregate
  _min: PipefyProjectMinAggregate
  _sum: PipefyProjectSumAggregate
}

type AggregatePrimitiveFields {
  _avg: PrimitiveFieldsAvgAggregate
  _count: PrimitiveFieldsCountAggregate
  _max: PrimitiveFieldsMaxAggregate
  _min: PrimitiveFieldsMinAggregate
  _sum: PrimitiveFieldsSumAggregate
}

type AggregatePrimitiveStreenght {
  _avg: PrimitiveStreenghtAvgAggregate
  _count: PrimitiveStreenghtCountAggregate
  _max: PrimitiveStreenghtMaxAggregate
  _min: PrimitiveStreenghtMinAggregate
  _sum: PrimitiveStreenghtSumAggregate
}

type AggregateProject {
  _avg: ProjectAvgAggregate
  _count: ProjectCountAggregate
  _max: ProjectMaxAggregate
  _min: ProjectMinAggregate
  _sum: ProjectSumAggregate
}

type AggregateProjectManager {
  _avg: ProjectManagerAvgAggregate
  _count: ProjectManagerCountAggregate
  _max: ProjectManagerMaxAggregate
  _min: ProjectManagerMinAggregate
  _sum: ProjectManagerSumAggregate
}

type AggregateProjectsBoards {
  _avg: ProjectsBoardsAvgAggregate
  _count: ProjectsBoardsCountAggregate
  _max: ProjectsBoardsMaxAggregate
  _min: ProjectsBoardsMinAggregate
  _sum: ProjectsBoardsSumAggregate
}

type AggregateQnp {
  _avg: QnpAvgAggregate
  _count: QnpCountAggregate
  _max: QnpMaxAggregate
  _min: QnpMinAggregate
  _sum: QnpSumAggregate
}

type AggregateReceivedClient {
  _avg: ReceivedClientAvgAggregate
  _count: ReceivedClientCountAggregate
  _max: ReceivedClientMaxAggregate
  _min: ReceivedClientMinAggregate
  _sum: ReceivedClientSumAggregate
}

type AggregateSelfStructure {
  _avg: SelfStructureAvgAggregate
  _count: SelfStructureCountAggregate
  _max: SelfStructureMaxAggregate
  _min: SelfStructureMinAggregate
  _sum: SelfStructureSumAggregate
}

type AggregateServiceLevelAgreement {
  _avg: ServiceLevelAgreementAvgAggregate
  _count: ServiceLevelAgreementCountAggregate
  _max: ServiceLevelAgreementMaxAggregate
  _min: ServiceLevelAgreementMinAggregate
  _sum: ServiceLevelAgreementSumAggregate
}

type AggregateStep {
  _avg: StepAvgAggregate
  _count: StepCountAggregate
  _max: StepMaxAggregate
  _min: StepMinAggregate
  _sum: StepSumAggregate
}

type AggregateTag {
  _avg: TagAvgAggregate
  _count: TagCountAggregate
  _max: TagMaxAggregate
  _min: TagMinAggregate
  _sum: TagSumAggregate
}

type AggregateTask {
  _avg: TaskAvgAggregate
  _count: TaskCountAggregate
  _max: TaskMaxAggregate
  _min: TaskMinAggregate
  _sum: TaskSumAggregate
}

type AggregateTeam {
  _avg: TeamAvgAggregate
  _count: TeamCountAggregate
  _max: TeamMaxAggregate
  _min: TeamMinAggregate
  _sum: TeamSumAggregate
}

type AggregateThrowErrorFront {
  _avg: ThrowErrorFrontAvgAggregate
  _count: ThrowErrorFrontCountAggregate
  _max: ThrowErrorFrontMaxAggregate
  _min: ThrowErrorFrontMinAggregate
  _sum: ThrowErrorFrontSumAggregate
}

type AggregateTokenFirebase {
  _avg: TokenFirebaseAvgAggregate
  _count: TokenFirebaseCountAggregate
  _max: TokenFirebaseMaxAggregate
  _min: TokenFirebaseMinAggregate
  _sum: TokenFirebaseSumAggregate
}

type AggregateUser {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
}

type AggregateUserJobFunction {
  _avg: UserJobFunctionAvgAggregate
  _count: UserJobFunctionCountAggregate
  _max: UserJobFunctionMaxAggregate
  _min: UserJobFunctionMinAggregate
  _sum: UserJobFunctionSumAggregate
}

type AggregateUserNotfy {
  _avg: UserNotfyAvgAggregate
  _count: UserNotfyCountAggregate
  _max: UserNotfyMaxAggregate
  _min: UserNotfyMinAggregate
  _sum: UserNotfySumAggregate
}

type AggregateUserOrganization {
  _avg: UserOrganizationAvgAggregate
  _count: UserOrganizationCountAggregate
  _max: UserOrganizationMaxAggregate
  _min: UserOrganizationMinAggregate
  _sum: UserOrganizationSumAggregate
}

type AggregateUserStep {
  _avg: UserStepAvgAggregate
  _count: UserStepCountAggregate
  _max: UserStepMaxAggregate
  _min: UserStepMinAggregate
  _sum: UserStepSumAggregate
}

type AggregateUserTeam {
  _avg: UserTeamAvgAggregate
  _count: UserTeamCountAggregate
  _max: UserTeamMaxAggregate
  _min: UserTeamMinAggregate
  _sum: UserTeamSumAggregate
}

type AggregateViewedCommentProject {
  _avg: ViewedCommentProjectAvgAggregate
  _count: ViewedCommentProjectCountAggregate
  _max: ViewedCommentProjectMaxAggregate
  _min: ViewedCommentProjectMinAggregate
  _sum: ViewedCommentProjectSumAggregate
}

type Archives {
  cash: Float!
  createdAt: DateTimeISO!
  createdBy: String
  description: String!
  id: Int!
  mimeType: String!
  name: String!
  path: String!
  project: Project!
  projectId: Int!
  size: String!
  typeFile: typeFile!
  updatedAt: DateTimeISO!
  user(where: UserWhereInput): User
}

type ArchivesAvgAggregate {
  cash: Float
  id: Float
  projectId: Float
}

input ArchivesAvgOrderByAggregateInput {
  cash: SortOrder
  id: SortOrder
  projectId: SortOrder
}

type ArchivesCountAggregate {
  _all: Int!
  cash: Int!
  createdAt: Int!
  createdBy: Int!
  description: Int!
  id: Int!
  mimeType: Int!
  name: Int!
  path: Int!
  projectId: Int!
  size: Int!
  typeFile: Int!
  updatedAt: Int!
}

input ArchivesCountOrderByAggregateInput {
  cash: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  mimeType: SortOrder
  name: SortOrder
  path: SortOrder
  projectId: SortOrder
  size: SortOrder
  typeFile: SortOrder
  updatedAt: SortOrder
}

input ArchivesCreateManyInput {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  projectId: Int!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesCreateManyProjectInput {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesCreateManyProjectInputEnvelope {
  data: [ArchivesCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input ArchivesCreateManyUserInput {
  cash: Float
  createdAt: DateTimeISO
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  projectId: Int!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesCreateManyUserInputEnvelope {
  data: [ArchivesCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ArchivesCreateNestedManyWithoutProjectInput {
  connect: [ArchivesWhereUniqueInput!]
  connectOrCreate: [ArchivesCreateOrConnectWithoutProjectInput!]
  create: [ArchivesCreateWithoutProjectInput!]
  createMany: ArchivesCreateManyProjectInputEnvelope
}

input ArchivesCreateOrConnectWithoutProjectInput {
  create: ArchivesUncheckedCreateWithoutProjectInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesCreateOrConnectWithoutUserInput {
  create: ArchivesUncheckedCreateWithoutUserInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesCreateWithoutProjectInput {
  cash: Float
  createdAt: DateTimeISO
  description: String
  mimeType: String
  name: String!
  path: String!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutArchivesInput
}

input ArchivesCreateWithoutUserInput {
  cash: Float
  createdAt: DateTimeISO
  description: String
  mimeType: String
  name: String!
  path: String!
  project: ProjectCreateNestedOneWithoutArchivesInput!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

type ArchivesGroupBy {
  _avg: ArchivesAvgAggregate
  _count: ArchivesCountAggregate
  _max: ArchivesMaxAggregate
  _min: ArchivesMinAggregate
  _sum: ArchivesSumAggregate
  cash: Float!
  createdAt: DateTimeISO!
  createdBy: String
  description: String!
  id: Int!
  mimeType: String!
  name: String!
  path: String!
  projectId: Int!
  size: String!
  typeFile: typeFile!
  updatedAt: DateTimeISO!
}

input ArchivesListRelationFilter {
  every: ArchivesWhereInput
  none: ArchivesWhereInput
  some: ArchivesWhereInput
}

type ArchivesMaxAggregate {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String
  path: String
  projectId: Int
  size: String
  typeFile: typeFile
  updatedAt: DateTimeISO
}

input ArchivesMaxOrderByAggregateInput {
  cash: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  mimeType: SortOrder
  name: SortOrder
  path: SortOrder
  projectId: SortOrder
  size: SortOrder
  typeFile: SortOrder
  updatedAt: SortOrder
}

type ArchivesMinAggregate {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String
  path: String
  projectId: Int
  size: String
  typeFile: typeFile
  updatedAt: DateTimeISO
}

input ArchivesMinOrderByAggregateInput {
  cash: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  mimeType: SortOrder
  name: SortOrder
  path: SortOrder
  projectId: SortOrder
  size: SortOrder
  typeFile: SortOrder
  updatedAt: SortOrder
}

input ArchivesOrderByRelationAggregateInput {
  _count: SortOrder
}

input ArchivesOrderByWithAggregationInput {
  _avg: ArchivesAvgOrderByAggregateInput
  _count: ArchivesCountOrderByAggregateInput
  _max: ArchivesMaxOrderByAggregateInput
  _min: ArchivesMinOrderByAggregateInput
  _sum: ArchivesSumOrderByAggregateInput
  cash: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  description: SortOrder
  id: SortOrder
  mimeType: SortOrder
  name: SortOrder
  path: SortOrder
  projectId: SortOrder
  size: SortOrder
  typeFile: SortOrder
  updatedAt: SortOrder
}

input ArchivesOrderByWithRelationInput {
  cash: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  description: SortOrder
  id: SortOrder
  mimeType: SortOrder
  name: SortOrder
  path: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  size: SortOrder
  typeFile: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
}

enum ArchivesScalarFieldEnum {
  cash
  createdAt
  createdBy
  description
  id
  mimeType
  name
  path
  projectId
  size
  typeFile
  updatedAt
}

input ArchivesScalarWhereInput {
  AND: [ArchivesScalarWhereInput!]
  NOT: [ArchivesScalarWhereInput!]
  OR: [ArchivesScalarWhereInput!]
  cash: FloatFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  description: StringFilter
  id: IntFilter
  mimeType: StringFilter
  name: StringFilter
  path: StringFilter
  projectId: IntFilter
  size: StringFilter
  typeFile: EnumtypeFileFilter
  updatedAt: DateTimeFilter
}

input ArchivesScalarWhereWithAggregatesInput {
  AND: [ArchivesScalarWhereWithAggregatesInput!]
  NOT: [ArchivesScalarWhereWithAggregatesInput!]
  OR: [ArchivesScalarWhereWithAggregatesInput!]
  cash: FloatWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  mimeType: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  path: StringWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  size: StringWithAggregatesFilter
  typeFile: EnumtypeFileWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type ArchivesSumAggregate {
  cash: Float
  id: Int
  projectId: Int
}

input ArchivesSumOrderByAggregateInput {
  cash: SortOrder
  id: SortOrder
  projectId: SortOrder
}

input ArchivesUncheckedCreateInput {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  projectId: Int!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesUncheckedCreateNestedManyWithoutProjectInput {
  connect: [ArchivesWhereUniqueInput!]
  connectOrCreate: [ArchivesCreateOrConnectWithoutProjectInput!]
  create: [ArchivesCreateWithoutProjectInput!]
  createMany: ArchivesCreateManyProjectInputEnvelope
}

input ArchivesUncheckedCreateNestedManyWithoutUserInput {
  connect: [ArchivesWhereUniqueInput!]
  connectOrCreate: [ArchivesCreateOrConnectWithoutUserInput!]
  create: [ArchivesCreateWithoutUserInput!]
  createMany: ArchivesCreateManyUserInputEnvelope
}

input ArchivesUncheckedCreateWithoutProjectInput {
  cash: Float
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesUncheckedCreateWithoutUserInput {
  cash: Float
  createdAt: DateTimeISO
  description: String
  id: Int
  mimeType: String
  name: String!
  path: String!
  projectId: Int!
  size: String
  typeFile: typeFile!
  updatedAt: DateTimeISO
}

input ArchivesUncheckedUpdateInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUncheckedUpdateManyInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUncheckedUpdateManyWithoutProjectInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [ArchivesWhereUniqueInput!]
  connectOrCreate: [ArchivesCreateOrConnectWithoutProjectInput!]
  create: [ArchivesCreateWithoutProjectInput!]
  createMany: ArchivesCreateManyProjectInputEnvelope
  delete: [ArchivesWhereUniqueInput!]
  deleteMany: [ArchivesScalarWhereInput!]
  disconnect: [ArchivesWhereUniqueInput!]
  set: [ArchivesWhereUniqueInput!]
  update: [ArchivesUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ArchivesUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ArchivesUpsertWithWhereUniqueWithoutProjectInput!]
}

input ArchivesUncheckedUpdateManyWithoutUserInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUncheckedUpdateManyWithoutUserNestedInput {
  connect: [ArchivesWhereUniqueInput!]
  connectOrCreate: [ArchivesCreateOrConnectWithoutUserInput!]
  create: [ArchivesCreateWithoutUserInput!]
  createMany: ArchivesCreateManyUserInputEnvelope
  delete: [ArchivesWhereUniqueInput!]
  deleteMany: [ArchivesScalarWhereInput!]
  disconnect: [ArchivesWhereUniqueInput!]
  set: [ArchivesWhereUniqueInput!]
  update: [ArchivesUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ArchivesUpdateManyWithWhereWithoutUserInput!]
  upsert: [ArchivesUpsertWithWhereUniqueWithoutUserInput!]
}

input ArchivesUncheckedUpdateWithoutProjectInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUncheckedUpdateWithoutUserInput {
  cash: FloatFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  size: StringFieldUpdateOperationsInput
  typeFile: EnumtypeFileFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ArchivesUpdateManyWithWhereWithoutProjectInput {
  data: ArchivesUncheckedUpdateManyWithoutProjectInput!
  where: ArchivesScalarWhereInput!
}

input ArchivesUpdateManyWithWhereWithoutUserInput {
  data: ArchivesUncheckedUpdateManyWithoutUserInput!
  where: ArchivesScalarWhereInput!
}

input ArchivesUpdateWithWhereUniqueWithoutProjectInput {
  data: ArchivesUncheckedUpdateWithoutProjectInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesUpdateWithWhereUniqueWithoutUserInput {
  data: ArchivesUncheckedUpdateWithoutUserInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesUpsertWithWhereUniqueWithoutProjectInput {
  create: ArchivesUncheckedCreateWithoutProjectInput!
  update: ArchivesUncheckedUpdateWithoutProjectInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesUpsertWithWhereUniqueWithoutUserInput {
  create: ArchivesUncheckedCreateWithoutUserInput!
  update: ArchivesUncheckedUpdateWithoutUserInput!
  where: ArchivesWhereUniqueInput!
}

input ArchivesWhereInput {
  AND: [ArchivesWhereInput!]
  NOT: [ArchivesWhereInput!]
  OR: [ArchivesWhereInput!]
  cash: FloatFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  description: StringFilter
  id: IntFilter
  mimeType: StringFilter
  name: StringFilter
  path: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  size: StringFilter
  typeFile: EnumtypeFileFilter
  updatedAt: DateTimeFilter
  user: UserNullableRelationFilter
}

input ArchivesWhereUniqueInput {
  AND: [ArchivesWhereInput!]
  NOT: [ArchivesWhereInput!]
  OR: [ArchivesWhereInput!]
  cash: FloatFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  description: StringFilter
  id: Int
  mimeType: StringFilter
  name: StringFilter
  path: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  size: StringFilter
  typeFile: EnumtypeFileFilter
  updatedAt: DateTimeFilter
  user: UserNullableRelationFilter
}

type AuthorizedAccess {
  board: Board!
  isAuth: Boolean!
}

type Board {
  _count: BoardCount
  authorizedCustom: AuthorizedAccess!
  boardMenbership(cursor: BoardMenbershipWhereUniqueInput, distinct: [BoardMenbershipScalarFieldEnum!], orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): [BoardMenbership!]!
  category: [String!]!
  column(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  group(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  groupMenbership(cursor: GroupMenbershipWhereUniqueInput, distinct: [GroupMenbershipScalarFieldEnum!], orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): [GroupMenbership!]!
  id: String!
  isPublic: Boolean!
  projectsBoards(cursor: ProjectsBoardsWhereUniqueInput, distinct: [ProjectsBoardsScalarFieldEnum!], orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): [ProjectsBoards!]!
  tags(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): [Tag!]!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedByUser(where: UserWhereInput): User
}

type BoardCount {
  boardMenbership(where: BoardMenbershipWhereInput): Int!
  column(where: ColumnWhereInput): Int!
  group(where: GroupWhereInput): Int!
  groupMenbership(where: GroupMenbershipWhereInput): Int!
  projectsBoards(where: ProjectsBoardsWhereInput): Int!
  tags(where: TagWhereInput): Int!
}

type BoardCountAggregate {
  _all: Int!
  category: Int!
  content: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  isPublic: Int!
  title: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input BoardCountOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  isPublic: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input BoardCreateManyCreatedByUserInput {
  category: BoardCreatecategoryInput
  content: JSON
  createdAt: DateTimeISO
  id: String
  isPublic: Boolean
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardCreateManyCreatedByUserInputEnvelope {
  data: [BoardCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input BoardCreateManyInput {
  category: BoardCreatecategoryInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: String
  isPublic: Boolean
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardCreateManyUpdatedByUserInput {
  category: BoardCreatecategoryInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: String
  isPublic: Boolean
  title: String!
  updatedAt: DateTimeISO
}

input BoardCreateManyUpdatedByUserInputEnvelope {
  data: [BoardCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input BoardCreateNestedOneWithoutBoardMenbershipInput {
  connect: BoardWhereUniqueInput
  connectOrCreate: BoardCreateOrConnectWithoutBoardMenbershipInput
  create: BoardUncheckedCreateWithoutBoardMenbershipInput
}

input BoardCreateNestedOneWithoutColumnInput {
  connect: BoardWhereUniqueInput
  connectOrCreate: BoardCreateOrConnectWithoutColumnInput
  create: BoardUncheckedCreateWithoutColumnInput
}

input BoardCreateNestedOneWithoutGroupInput {
  connect: BoardWhereUniqueInput
  connectOrCreate: BoardCreateOrConnectWithoutGroupInput
  create: BoardUncheckedCreateWithoutGroupInput
}

input BoardCreateNestedOneWithoutGroupMenbershipInput {
  connect: BoardWhereUniqueInput
  connectOrCreate: BoardCreateOrConnectWithoutGroupMenbershipInput
  create: BoardUncheckedCreateWithoutGroupMenbershipInput
}

input BoardCreateNestedOneWithoutProjectsBoardsInput {
  connect: BoardWhereUniqueInput
  connectOrCreate: BoardCreateOrConnectWithoutProjectsBoardsInput
  create: BoardUncheckedCreateWithoutProjectsBoardsInput
}

input BoardCreateOrConnectWithoutBoardMenbershipInput {
  create: BoardUncheckedCreateWithoutBoardMenbershipInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutColumnInput {
  create: BoardUncheckedCreateWithoutColumnInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutCreatedByUserInput {
  create: BoardUncheckedCreateWithoutCreatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutGroupInput {
  create: BoardUncheckedCreateWithoutGroupInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutGroupMenbershipInput {
  create: BoardUncheckedCreateWithoutGroupMenbershipInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutProjectsBoardsInput {
  create: BoardUncheckedCreateWithoutProjectsBoardsInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateOrConnectWithoutUpdatedByUserInput {
  create: BoardUncheckedCreateWithoutUpdatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardCreateWithoutCreatedByUserInput {
  boardMenbership: BoardMenbershipCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  group: GroupCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsCreateNestedManyWithoutBoardInput
  tags: TagCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutBoardUpdatedByInput
}

input BoardCreateWithoutUpdatedByUserInput {
  boardMenbership: BoardMenbershipCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutBoardCreatedByInput
  group: GroupCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsCreateNestedManyWithoutBoardInput
  tags: TagCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
}

input BoardCreatecategoryInput {
  set: [String!]!
}

type BoardGroupBy {
  _count: BoardCountAggregate
  _max: BoardMaxAggregate
  _min: BoardMinAggregate
  category: [String!]
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  id: String!
  isPublic: Boolean!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input BoardListRelationFilter {
  every: BoardWhereInput
  none: BoardWhereInput
  some: BoardWhereInput
}

type BoardMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: String
  isPublic: Boolean
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  isPublic: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type BoardMenbership {
  board: Board!
  boardId: String!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type BoardMenbershipAvgAggregate {
  id: Float
}

input BoardMenbershipAvgOrderByAggregateInput {
  id: SortOrder
}

type BoardMenbershipCountAggregate {
  _all: Int!
  boardId: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
  userUuid: Int!
}

input BoardMenbershipCountOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input BoardMenbershipCreateManyBoardInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input BoardMenbershipCreateManyBoardInputEnvelope {
  data: [BoardMenbershipCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input BoardMenbershipCreateManyInput {
  boardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input BoardMenbershipCreateManyUserInput {
  boardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input BoardMenbershipCreateManyUserInputEnvelope {
  data: [BoardMenbershipCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input BoardMenbershipCreateNestedManyWithoutBoardInput {
  connect: [BoardMenbershipWhereUniqueInput!]
  connectOrCreate: [BoardMenbershipCreateOrConnectWithoutBoardInput!]
  create: [BoardMenbershipCreateWithoutBoardInput!]
  createMany: BoardMenbershipCreateManyBoardInputEnvelope
}

input BoardMenbershipCreateOrConnectWithoutBoardInput {
  create: BoardMenbershipUncheckedCreateWithoutBoardInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipCreateOrConnectWithoutUserInput {
  create: BoardMenbershipUncheckedCreateWithoutUserInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipCreateWithoutBoardInput {
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutCoardMenbershipInput!
}

input BoardMenbershipCreateWithoutUserInput {
  board: BoardCreateNestedOneWithoutBoardMenbershipInput!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type BoardMenbershipGroupBy {
  _avg: BoardMenbershipAvgAggregate
  _count: BoardMenbershipCountAggregate
  _max: BoardMenbershipMaxAggregate
  _min: BoardMenbershipMinAggregate
  _sum: BoardMenbershipSumAggregate
  boardId: String!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input BoardMenbershipListRelationFilter {
  every: BoardMenbershipWhereInput
  none: BoardMenbershipWhereInput
  some: BoardMenbershipWhereInput
}

type BoardMenbershipMaxAggregate {
  boardId: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input BoardMenbershipMaxOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type BoardMenbershipMinAggregate {
  boardId: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input BoardMenbershipMinOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input BoardMenbershipOrderByRelationAggregateInput {
  _count: SortOrder
}

input BoardMenbershipOrderByWithAggregationInput {
  _avg: BoardMenbershipAvgOrderByAggregateInput
  _count: BoardMenbershipCountOrderByAggregateInput
  _max: BoardMenbershipMaxOrderByAggregateInput
  _min: BoardMenbershipMinOrderByAggregateInput
  _sum: BoardMenbershipSumOrderByAggregateInput
  boardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input BoardMenbershipOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum BoardMenbershipScalarFieldEnum {
  boardId
  createdAt
  id
  updatedAt
  userUuid
}

input BoardMenbershipScalarWhereInput {
  AND: [BoardMenbershipScalarWhereInput!]
  NOT: [BoardMenbershipScalarWhereInput!]
  OR: [BoardMenbershipScalarWhereInput!]
  boardId: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input BoardMenbershipScalarWhereWithAggregatesInput {
  AND: [BoardMenbershipScalarWhereWithAggregatesInput!]
  NOT: [BoardMenbershipScalarWhereWithAggregatesInput!]
  OR: [BoardMenbershipScalarWhereWithAggregatesInput!]
  boardId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type BoardMenbershipSumAggregate {
  id: Int
}

input BoardMenbershipSumOrderByAggregateInput {
  id: SortOrder
}

input BoardMenbershipUncheckedCreateInput {
  boardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput {
  connect: [BoardMenbershipWhereUniqueInput!]
  connectOrCreate: [BoardMenbershipCreateOrConnectWithoutBoardInput!]
  create: [BoardMenbershipCreateWithoutBoardInput!]
  createMany: BoardMenbershipCreateManyBoardInputEnvelope
}

input BoardMenbershipUncheckedCreateNestedManyWithoutUserInput {
  connect: [BoardMenbershipWhereUniqueInput!]
  connectOrCreate: [BoardMenbershipCreateOrConnectWithoutUserInput!]
  create: [BoardMenbershipCreateWithoutUserInput!]
  createMany: BoardMenbershipCreateManyUserInputEnvelope
}

input BoardMenbershipUncheckedCreateWithoutBoardInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input BoardMenbershipUncheckedCreateWithoutUserInput {
  boardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input BoardMenbershipUncheckedUpdateInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input BoardMenbershipUncheckedUpdateManyInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input BoardMenbershipUncheckedUpdateManyWithoutBoardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input BoardMenbershipUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [BoardMenbershipWhereUniqueInput!]
  connectOrCreate: [BoardMenbershipCreateOrConnectWithoutBoardInput!]
  create: [BoardMenbershipCreateWithoutBoardInput!]
  createMany: BoardMenbershipCreateManyBoardInputEnvelope
  delete: [BoardMenbershipWhereUniqueInput!]
  deleteMany: [BoardMenbershipScalarWhereInput!]
  disconnect: [BoardMenbershipWhereUniqueInput!]
  set: [BoardMenbershipWhereUniqueInput!]
  update: [BoardMenbershipUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [BoardMenbershipUpdateManyWithWhereWithoutBoardInput!]
  upsert: [BoardMenbershipUpsertWithWhereUniqueWithoutBoardInput!]
}

input BoardMenbershipUncheckedUpdateManyWithoutUserInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BoardMenbershipUncheckedUpdateManyWithoutUserNestedInput {
  connect: [BoardMenbershipWhereUniqueInput!]
  connectOrCreate: [BoardMenbershipCreateOrConnectWithoutUserInput!]
  create: [BoardMenbershipCreateWithoutUserInput!]
  createMany: BoardMenbershipCreateManyUserInputEnvelope
  delete: [BoardMenbershipWhereUniqueInput!]
  deleteMany: [BoardMenbershipScalarWhereInput!]
  disconnect: [BoardMenbershipWhereUniqueInput!]
  set: [BoardMenbershipWhereUniqueInput!]
  update: [BoardMenbershipUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [BoardMenbershipUpdateManyWithWhereWithoutUserInput!]
  upsert: [BoardMenbershipUpsertWithWhereUniqueWithoutUserInput!]
}

input BoardMenbershipUncheckedUpdateWithoutBoardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input BoardMenbershipUncheckedUpdateWithoutUserInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BoardMenbershipUpdateManyWithWhereWithoutBoardInput {
  data: BoardMenbershipUncheckedUpdateManyWithoutBoardInput!
  where: BoardMenbershipScalarWhereInput!
}

input BoardMenbershipUpdateManyWithWhereWithoutUserInput {
  data: BoardMenbershipUncheckedUpdateManyWithoutUserInput!
  where: BoardMenbershipScalarWhereInput!
}

input BoardMenbershipUpdateWithWhereUniqueWithoutBoardInput {
  data: BoardMenbershipUncheckedUpdateWithoutBoardInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipUpdateWithWhereUniqueWithoutUserInput {
  data: BoardMenbershipUncheckedUpdateWithoutUserInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipUpsertWithWhereUniqueWithoutBoardInput {
  create: BoardMenbershipUncheckedCreateWithoutBoardInput!
  update: BoardMenbershipUncheckedUpdateWithoutBoardInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipUpsertWithWhereUniqueWithoutUserInput {
  create: BoardMenbershipUncheckedCreateWithoutUserInput!
  update: BoardMenbershipUncheckedUpdateWithoutUserInput!
  where: BoardMenbershipWhereUniqueInput!
}

input BoardMenbershipWhereInput {
  AND: [BoardMenbershipWhereInput!]
  NOT: [BoardMenbershipWhereInput!]
  OR: [BoardMenbershipWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input BoardMenbershipWhereUniqueInput {
  AND: [BoardMenbershipWhereInput!]
  NOT: [BoardMenbershipWhereInput!]
  OR: [BoardMenbershipWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

type BoardMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: String
  isPublic: Boolean
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  isPublic: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input BoardNullableRelationFilter {
  is: BoardWhereInput
  isNot: BoardWhereInput
}

input BoardOrderByRelationAggregateInput {
  _count: SortOrder
}

input BoardOrderByWithAggregationInput {
  _count: BoardCountOrderByAggregateInput
  _max: BoardMaxOrderByAggregateInput
  _min: BoardMinOrderByAggregateInput
  category: SortOrder
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  isPublic: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input BoardOrderByWithRelationInput {
  boardMenbership: BoardMenbershipOrderByRelationAggregateInput
  category: SortOrder
  column: ColumnOrderByRelationAggregateInput
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  group: GroupOrderByRelationAggregateInput
  groupMenbership: GroupMenbershipOrderByRelationAggregateInput
  id: SortOrder
  isPublic: SortOrder
  projectsBoards: ProjectsBoardsOrderByRelationAggregateInput
  tags: TagOrderByRelationAggregateInput
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedByUser: UserOrderByWithRelationInput
}

input BoardRelationFilter {
  is: BoardWhereInput
  isNot: BoardWhereInput
}

enum BoardScalarFieldEnum {
  category
  content
  createdAt
  createdBy
  id
  isPublic
  title
  updatedAt
  updatedBy
}

input BoardScalarWhereInput {
  AND: [BoardScalarWhereInput!]
  NOT: [BoardScalarWhereInput!]
  OR: [BoardScalarWhereInput!]
  category: StringNullableListFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: StringFilter
  isPublic: BoolFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input BoardScalarWhereWithAggregatesInput {
  AND: [BoardScalarWhereWithAggregatesInput!]
  NOT: [BoardScalarWhereWithAggregatesInput!]
  OR: [BoardScalarWhereWithAggregatesInput!]
  category: StringNullableListFilter
  content: JsonNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  isPublic: BoolWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

input BoardUncheckedCreateInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [BoardWhereUniqueInput!]
  connectOrCreate: [BoardCreateOrConnectWithoutCreatedByUserInput!]
  create: [BoardCreateWithoutCreatedByUserInput!]
  createMany: BoardCreateManyCreatedByUserInputEnvelope
}

input BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [BoardWhereUniqueInput!]
  connectOrCreate: [BoardCreateOrConnectWithoutUpdatedByUserInput!]
  create: [BoardCreateWithoutUpdatedByUserInput!]
  createMany: BoardCreateManyUpdatedByUserInputEnvelope
}

input BoardUncheckedCreateWithoutBoardMenbershipInput {
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutColumnInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutCreatedByUserInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutGroupInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutGroupMenbershipInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutProjectsBoardsInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input BoardUncheckedCreateWithoutUpdatedByUserInput {
  boardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutBoardInput
  category: BoardCreatecategoryInput
  column: ColumnUncheckedCreateNestedManyWithoutBoardInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  group: GroupUncheckedCreateNestedManyWithoutBoardInput
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput
  id: String
  isPublic: Boolean
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput
  tags: TagUncheckedCreateNestedManyWithoutBoardInput
  title: String!
  updatedAt: DateTimeISO
}

input BoardUncheckedUpdateInput {
  boardMenbership: BoardMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  category: BoardUpdatecategoryInput
  column: ColumnUncheckedUpdateManyWithoutBoardNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  group: GroupUncheckedUpdateManyWithoutBoardNestedInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutBoardNestedInput
  tags: TagUncheckedUpdateManyWithoutBoardNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input BoardUncheckedUpdateManyInput {
  category: BoardUpdatecategoryInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input BoardUncheckedUpdateManyWithoutCreatedByUserInput {
  category: BoardUpdatecategoryInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input BoardUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [BoardWhereUniqueInput!]
  connectOrCreate: [BoardCreateOrConnectWithoutCreatedByUserInput!]
  create: [BoardCreateWithoutCreatedByUserInput!]
  createMany: BoardCreateManyCreatedByUserInputEnvelope
  delete: [BoardWhereUniqueInput!]
  deleteMany: [BoardScalarWhereInput!]
  disconnect: [BoardWhereUniqueInput!]
  set: [BoardWhereUniqueInput!]
  update: [BoardUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [BoardUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [BoardUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input BoardUncheckedUpdateManyWithoutUpdatedByUserInput {
  category: BoardUpdatecategoryInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BoardUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [BoardWhereUniqueInput!]
  connectOrCreate: [BoardCreateOrConnectWithoutUpdatedByUserInput!]
  create: [BoardCreateWithoutUpdatedByUserInput!]
  createMany: BoardCreateManyUpdatedByUserInputEnvelope
  delete: [BoardWhereUniqueInput!]
  deleteMany: [BoardScalarWhereInput!]
  disconnect: [BoardWhereUniqueInput!]
  set: [BoardWhereUniqueInput!]
  update: [BoardUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [BoardUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [BoardUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input BoardUncheckedUpdateWithoutCreatedByUserInput {
  boardMenbership: BoardMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  category: BoardUpdatecategoryInput
  column: ColumnUncheckedUpdateManyWithoutBoardNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  group: GroupUncheckedUpdateManyWithoutBoardNestedInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutBoardNestedInput
  tags: TagUncheckedUpdateManyWithoutBoardNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input BoardUncheckedUpdateWithoutUpdatedByUserInput {
  boardMenbership: BoardMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  category: BoardUpdatecategoryInput
  column: ColumnUncheckedUpdateManyWithoutBoardNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  group: GroupUncheckedUpdateManyWithoutBoardNestedInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutBoardNestedInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutBoardNestedInput
  tags: TagUncheckedUpdateManyWithoutBoardNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BoardUpdateManyWithWhereWithoutCreatedByUserInput {
  data: BoardUncheckedUpdateManyWithoutCreatedByUserInput!
  where: BoardScalarWhereInput!
}

input BoardUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: BoardUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: BoardScalarWhereInput!
}

input BoardUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: BoardUncheckedUpdateWithoutCreatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: BoardUncheckedUpdateWithoutUpdatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardUpdatecategoryInput {
  push: [String!]
  set: [String!]
}

input BoardUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: BoardUncheckedCreateWithoutCreatedByUserInput!
  update: BoardUncheckedUpdateWithoutCreatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: BoardUncheckedCreateWithoutUpdatedByUserInput!
  update: BoardUncheckedUpdateWithoutUpdatedByUserInput!
  where: BoardWhereUniqueInput!
}

input BoardWhereInput {
  AND: [BoardWhereInput!]
  NOT: [BoardWhereInput!]
  OR: [BoardWhereInput!]
  boardMenbership: BoardMenbershipListRelationFilter
  category: StringNullableListFilter
  column: ColumnListRelationFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  group: GroupListRelationFilter
  groupMenbership: GroupMenbershipListRelationFilter
  id: StringFilter
  isPublic: BoolFilter
  projectsBoards: ProjectsBoardsListRelationFilter
  tags: TagListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

input BoardWhereUniqueInput {
  AND: [BoardWhereInput!]
  NOT: [BoardWhereInput!]
  OR: [BoardWhereInput!]
  boardMenbership: BoardMenbershipListRelationFilter
  category: StringNullableListFilter
  column: ColumnListRelationFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  group: GroupListRelationFilter
  groupMenbership: GroupMenbershipListRelationFilter
  id: String
  isPublic: BoolFilter
  projectsBoards: ProjectsBoardsListRelationFilter
  tags: TagListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

type Card {
  _count: CardCount
  appointment: DateTimeISO
  cardAssignment(cursor: CardAssignmentWhereUniqueInput, distinct: [CardAssignmentScalarFieldEnum!], orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): [CardAssignment!]!
  cardComment(cursor: CardCommentWhereUniqueInput, distinct: [CardCommentScalarFieldEnum!], orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): [CardComment!]!
  cardTags(cursor: CardTagsWhereUniqueInput, distinct: [CardTagsScalarFieldEnum!], orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): [CardTags!]!
  column: Column!
  columnId: Int!
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  description: String!
  fieldValue(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): [FieldsValue!]!
  hasHistoryModified: Boolean!
  id: String!
  isOpen: Boolean!
  moviment(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovement!]!
  name: String!
  order: Int!
  priority: Float!
  tags: [String!]!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedByUser(where: UserWhereInput): User
}

type CardAssignment {
  CardId: String!
  card: Card!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type CardAssignmentAvgAggregate {
  id: Float
}

input CardAssignmentAvgOrderByAggregateInput {
  id: SortOrder
}

type CardAssignmentCountAggregate {
  CardId: Int!
  _all: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
  userUuid: Int!
}

input CardAssignmentCountOrderByAggregateInput {
  CardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardAssignmentCreateManyCardInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardAssignmentCreateManyCardInputEnvelope {
  data: [CardAssignmentCreateManyCardInput!]!
  skipDuplicates: Boolean
}

input CardAssignmentCreateManyInput {
  CardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardAssignmentCreateManyUserInput {
  CardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CardAssignmentCreateManyUserInputEnvelope {
  data: [CardAssignmentCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input CardAssignmentCreateNestedManyWithoutCardInput {
  connect: [CardAssignmentWhereUniqueInput!]
  connectOrCreate: [CardAssignmentCreateOrConnectWithoutCardInput!]
  create: [CardAssignmentCreateWithoutCardInput!]
  createMany: CardAssignmentCreateManyCardInputEnvelope
}

input CardAssignmentCreateOrConnectWithoutCardInput {
  create: CardAssignmentUncheckedCreateWithoutCardInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentCreateOrConnectWithoutUserInput {
  create: CardAssignmentUncheckedCreateWithoutUserInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentCreateWithoutCardInput {
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutCardAssignmentInput!
}

input CardAssignmentCreateWithoutUserInput {
  card: CardCreateNestedOneWithoutCardAssignmentInput!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type CardAssignmentGroupBy {
  CardId: String!
  _avg: CardAssignmentAvgAggregate
  _count: CardAssignmentCountAggregate
  _max: CardAssignmentMaxAggregate
  _min: CardAssignmentMinAggregate
  _sum: CardAssignmentSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input CardAssignmentListRelationFilter {
  every: CardAssignmentWhereInput
  none: CardAssignmentWhereInput
  some: CardAssignmentWhereInput
}

type CardAssignmentMaxAggregate {
  CardId: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input CardAssignmentMaxOrderByAggregateInput {
  CardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type CardAssignmentMinAggregate {
  CardId: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input CardAssignmentMinOrderByAggregateInput {
  CardId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardAssignmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input CardAssignmentOrderByWithAggregationInput {
  CardId: SortOrder
  _avg: CardAssignmentAvgOrderByAggregateInput
  _count: CardAssignmentCountOrderByAggregateInput
  _max: CardAssignmentMaxOrderByAggregateInput
  _min: CardAssignmentMinOrderByAggregateInput
  _sum: CardAssignmentSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardAssignmentOrderByWithRelationInput {
  CardId: SortOrder
  card: CardOrderByWithRelationInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum CardAssignmentScalarFieldEnum {
  CardId
  createdAt
  id
  updatedAt
  userUuid
}

input CardAssignmentScalarWhereInput {
  AND: [CardAssignmentScalarWhereInput!]
  CardId: StringFilter
  NOT: [CardAssignmentScalarWhereInput!]
  OR: [CardAssignmentScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input CardAssignmentScalarWhereWithAggregatesInput {
  AND: [CardAssignmentScalarWhereWithAggregatesInput!]
  CardId: StringWithAggregatesFilter
  NOT: [CardAssignmentScalarWhereWithAggregatesInput!]
  OR: [CardAssignmentScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type CardAssignmentSumAggregate {
  id: Int
}

input CardAssignmentSumOrderByAggregateInput {
  id: SortOrder
}

input CardAssignmentUncheckedCreateInput {
  CardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardAssignmentUncheckedCreateNestedManyWithoutCardInput {
  connect: [CardAssignmentWhereUniqueInput!]
  connectOrCreate: [CardAssignmentCreateOrConnectWithoutCardInput!]
  create: [CardAssignmentCreateWithoutCardInput!]
  createMany: CardAssignmentCreateManyCardInputEnvelope
}

input CardAssignmentUncheckedCreateNestedManyWithoutUserInput {
  connect: [CardAssignmentWhereUniqueInput!]
  connectOrCreate: [CardAssignmentCreateOrConnectWithoutUserInput!]
  create: [CardAssignmentCreateWithoutUserInput!]
  createMany: CardAssignmentCreateManyUserInputEnvelope
}

input CardAssignmentUncheckedCreateWithoutCardInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardAssignmentUncheckedCreateWithoutUserInput {
  CardId: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CardAssignmentUncheckedUpdateInput {
  CardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardAssignmentUncheckedUpdateManyInput {
  CardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardAssignmentUncheckedUpdateManyWithoutCardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardAssignmentUncheckedUpdateManyWithoutCardNestedInput {
  connect: [CardAssignmentWhereUniqueInput!]
  connectOrCreate: [CardAssignmentCreateOrConnectWithoutCardInput!]
  create: [CardAssignmentCreateWithoutCardInput!]
  createMany: CardAssignmentCreateManyCardInputEnvelope
  delete: [CardAssignmentWhereUniqueInput!]
  deleteMany: [CardAssignmentScalarWhereInput!]
  disconnect: [CardAssignmentWhereUniqueInput!]
  set: [CardAssignmentWhereUniqueInput!]
  update: [CardAssignmentUpdateWithWhereUniqueWithoutCardInput!]
  updateMany: [CardAssignmentUpdateManyWithWhereWithoutCardInput!]
  upsert: [CardAssignmentUpsertWithWhereUniqueWithoutCardInput!]
}

input CardAssignmentUncheckedUpdateManyWithoutUserInput {
  CardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardAssignmentUncheckedUpdateManyWithoutUserNestedInput {
  connect: [CardAssignmentWhereUniqueInput!]
  connectOrCreate: [CardAssignmentCreateOrConnectWithoutUserInput!]
  create: [CardAssignmentCreateWithoutUserInput!]
  createMany: CardAssignmentCreateManyUserInputEnvelope
  delete: [CardAssignmentWhereUniqueInput!]
  deleteMany: [CardAssignmentScalarWhereInput!]
  disconnect: [CardAssignmentWhereUniqueInput!]
  set: [CardAssignmentWhereUniqueInput!]
  update: [CardAssignmentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CardAssignmentUpdateManyWithWhereWithoutUserInput!]
  upsert: [CardAssignmentUpsertWithWhereUniqueWithoutUserInput!]
}

input CardAssignmentUncheckedUpdateWithoutCardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardAssignmentUncheckedUpdateWithoutUserInput {
  CardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardAssignmentUpdateManyWithWhereWithoutCardInput {
  data: CardAssignmentUncheckedUpdateManyWithoutCardInput!
  where: CardAssignmentScalarWhereInput!
}

input CardAssignmentUpdateManyWithWhereWithoutUserInput {
  data: CardAssignmentUncheckedUpdateManyWithoutUserInput!
  where: CardAssignmentScalarWhereInput!
}

input CardAssignmentUpdateWithWhereUniqueWithoutCardInput {
  data: CardAssignmentUncheckedUpdateWithoutCardInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentUpdateWithWhereUniqueWithoutUserInput {
  data: CardAssignmentUncheckedUpdateWithoutUserInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentUpsertWithWhereUniqueWithoutCardInput {
  create: CardAssignmentUncheckedCreateWithoutCardInput!
  update: CardAssignmentUncheckedUpdateWithoutCardInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentUpsertWithWhereUniqueWithoutUserInput {
  create: CardAssignmentUncheckedCreateWithoutUserInput!
  update: CardAssignmentUncheckedUpdateWithoutUserInput!
  where: CardAssignmentWhereUniqueInput!
}

input CardAssignmentWhereInput {
  AND: [CardAssignmentWhereInput!]
  CardId: StringFilter
  NOT: [CardAssignmentWhereInput!]
  OR: [CardAssignmentWhereInput!]
  card: CardRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input CardAssignmentWhereUniqueInput {
  AND: [CardAssignmentWhereInput!]
  CardId: StringFilter
  NOT: [CardAssignmentWhereInput!]
  OR: [CardAssignmentWhereInput!]
  card: CardRelationFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

type CardAvgAggregate {
  columnId: Float
  order: Float
  priority: Float
}

input CardAvgOrderByAggregateInput {
  columnId: SortOrder
  order: SortOrder
  priority: SortOrder
}

type CardComment {
  card: Card!
  cardId: String!
  comment: String!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type CardCommentAvgAggregate {
  id: Float
}

input CardCommentAvgOrderByAggregateInput {
  id: SortOrder
}

type CardCommentCountAggregate {
  _all: Int!
  cardId: Int!
  comment: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
  userUuid: Int!
}

input CardCommentCountOrderByAggregateInput {
  cardId: SortOrder
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardCommentCreateManyCardInput {
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardCommentCreateManyCardInputEnvelope {
  data: [CardCommentCreateManyCardInput!]!
  skipDuplicates: Boolean
}

input CardCommentCreateManyInput {
  cardId: String!
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardCommentCreateManyUserInput {
  cardId: String!
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CardCommentCreateManyUserInputEnvelope {
  data: [CardCommentCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input CardCommentCreateNestedManyWithoutCardInput {
  connect: [CardCommentWhereUniqueInput!]
  connectOrCreate: [CardCommentCreateOrConnectWithoutCardInput!]
  create: [CardCommentCreateWithoutCardInput!]
  createMany: CardCommentCreateManyCardInputEnvelope
}

input CardCommentCreateOrConnectWithoutCardInput {
  create: CardCommentUncheckedCreateWithoutCardInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentCreateOrConnectWithoutUserInput {
  create: CardCommentUncheckedCreateWithoutUserInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentCreateWithoutCardInput {
  comment: String!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutCardCommentInput!
}

input CardCommentCreateWithoutUserInput {
  card: CardCreateNestedOneWithoutCardCommentInput!
  comment: String!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type CardCommentGroupBy {
  _avg: CardCommentAvgAggregate
  _count: CardCommentCountAggregate
  _max: CardCommentMaxAggregate
  _min: CardCommentMinAggregate
  _sum: CardCommentSumAggregate
  cardId: String!
  comment: String!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input CardCommentListRelationFilter {
  every: CardCommentWhereInput
  none: CardCommentWhereInput
  some: CardCommentWhereInput
}

type CardCommentMaxAggregate {
  cardId: String
  comment: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input CardCommentMaxOrderByAggregateInput {
  cardId: SortOrder
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type CardCommentMinAggregate {
  cardId: String
  comment: String
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input CardCommentMinOrderByAggregateInput {
  cardId: SortOrder
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardCommentOrderByRelationAggregateInput {
  _count: SortOrder
}

input CardCommentOrderByWithAggregationInput {
  _avg: CardCommentAvgOrderByAggregateInput
  _count: CardCommentCountOrderByAggregateInput
  _max: CardCommentMaxOrderByAggregateInput
  _min: CardCommentMinOrderByAggregateInput
  _sum: CardCommentSumOrderByAggregateInput
  cardId: SortOrder
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input CardCommentOrderByWithRelationInput {
  card: CardOrderByWithRelationInput
  cardId: SortOrder
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum CardCommentScalarFieldEnum {
  cardId
  comment
  createdAt
  id
  updatedAt
  userUuid
}

input CardCommentScalarWhereInput {
  AND: [CardCommentScalarWhereInput!]
  NOT: [CardCommentScalarWhereInput!]
  OR: [CardCommentScalarWhereInput!]
  cardId: StringFilter
  comment: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input CardCommentScalarWhereWithAggregatesInput {
  AND: [CardCommentScalarWhereWithAggregatesInput!]
  NOT: [CardCommentScalarWhereWithAggregatesInput!]
  OR: [CardCommentScalarWhereWithAggregatesInput!]
  cardId: StringWithAggregatesFilter
  comment: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type CardCommentSumAggregate {
  id: Int
}

input CardCommentSumOrderByAggregateInput {
  id: SortOrder
}

input CardCommentUncheckedCreateInput {
  cardId: String!
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardCommentUncheckedCreateNestedManyWithoutCardInput {
  connect: [CardCommentWhereUniqueInput!]
  connectOrCreate: [CardCommentCreateOrConnectWithoutCardInput!]
  create: [CardCommentCreateWithoutCardInput!]
  createMany: CardCommentCreateManyCardInputEnvelope
}

input CardCommentUncheckedCreateNestedManyWithoutUserInput {
  connect: [CardCommentWhereUniqueInput!]
  connectOrCreate: [CardCommentCreateOrConnectWithoutUserInput!]
  create: [CardCommentCreateWithoutUserInput!]
  createMany: CardCommentCreateManyUserInputEnvelope
}

input CardCommentUncheckedCreateWithoutCardInput {
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input CardCommentUncheckedCreateWithoutUserInput {
  cardId: String!
  comment: String!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CardCommentUncheckedUpdateInput {
  cardId: StringFieldUpdateOperationsInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardCommentUncheckedUpdateManyInput {
  cardId: StringFieldUpdateOperationsInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardCommentUncheckedUpdateManyWithoutCardInput {
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardCommentUncheckedUpdateManyWithoutCardNestedInput {
  connect: [CardCommentWhereUniqueInput!]
  connectOrCreate: [CardCommentCreateOrConnectWithoutCardInput!]
  create: [CardCommentCreateWithoutCardInput!]
  createMany: CardCommentCreateManyCardInputEnvelope
  delete: [CardCommentWhereUniqueInput!]
  deleteMany: [CardCommentScalarWhereInput!]
  disconnect: [CardCommentWhereUniqueInput!]
  set: [CardCommentWhereUniqueInput!]
  update: [CardCommentUpdateWithWhereUniqueWithoutCardInput!]
  updateMany: [CardCommentUpdateManyWithWhereWithoutCardInput!]
  upsert: [CardCommentUpsertWithWhereUniqueWithoutCardInput!]
}

input CardCommentUncheckedUpdateManyWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardCommentUncheckedUpdateManyWithoutUserNestedInput {
  connect: [CardCommentWhereUniqueInput!]
  connectOrCreate: [CardCommentCreateOrConnectWithoutUserInput!]
  create: [CardCommentCreateWithoutUserInput!]
  createMany: CardCommentCreateManyUserInputEnvelope
  delete: [CardCommentWhereUniqueInput!]
  deleteMany: [CardCommentScalarWhereInput!]
  disconnect: [CardCommentWhereUniqueInput!]
  set: [CardCommentWhereUniqueInput!]
  update: [CardCommentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CardCommentUpdateManyWithWhereWithoutUserInput!]
  upsert: [CardCommentUpsertWithWhereUniqueWithoutUserInput!]
}

input CardCommentUncheckedUpdateWithoutCardInput {
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input CardCommentUncheckedUpdateWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardCommentUpdateManyWithWhereWithoutCardInput {
  data: CardCommentUncheckedUpdateManyWithoutCardInput!
  where: CardCommentScalarWhereInput!
}

input CardCommentUpdateManyWithWhereWithoutUserInput {
  data: CardCommentUncheckedUpdateManyWithoutUserInput!
  where: CardCommentScalarWhereInput!
}

input CardCommentUpdateWithWhereUniqueWithoutCardInput {
  data: CardCommentUncheckedUpdateWithoutCardInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentUpdateWithWhereUniqueWithoutUserInput {
  data: CardCommentUncheckedUpdateWithoutUserInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentUpsertWithWhereUniqueWithoutCardInput {
  create: CardCommentUncheckedCreateWithoutCardInput!
  update: CardCommentUncheckedUpdateWithoutCardInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentUpsertWithWhereUniqueWithoutUserInput {
  create: CardCommentUncheckedCreateWithoutUserInput!
  update: CardCommentUncheckedUpdateWithoutUserInput!
  where: CardCommentWhereUniqueInput!
}

input CardCommentWhereInput {
  AND: [CardCommentWhereInput!]
  NOT: [CardCommentWhereInput!]
  OR: [CardCommentWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  comment: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input CardCommentWhereUniqueInput {
  AND: [CardCommentWhereInput!]
  NOT: [CardCommentWhereInput!]
  OR: [CardCommentWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  comment: StringFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

type CardCount {
  cardAssignment(where: CardAssignmentWhereInput): Int!
  cardComment(where: CardCommentWhereInput): Int!
  cardTags(where: CardTagsWhereInput): Int!
  fieldValue(where: FieldsValueWhereInput): Int!
  moviment(where: CardMovementWhereInput): Int!
}

type CardCountAggregate {
  _all: Int!
  appointment: Int!
  columnId: Int!
  createdAt: Int!
  createdBy: Int!
  description: Int!
  hasHistoryModified: Int!
  id: Int!
  isOpen: Int!
  name: Int!
  order: Int!
  priority: Int!
  tags: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input CardCountOrderByAggregateInput {
  appointment: SortOrder
  columnId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  hasHistoryModified: SortOrder
  id: SortOrder
  isOpen: SortOrder
  name: SortOrder
  order: SortOrder
  priority: SortOrder
  tags: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input CardCreateManyColumnInput {
  appointment: DateTimeISO
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardCreateManyColumnInputEnvelope {
  data: [CardCreateManyColumnInput!]!
  skipDuplicates: Boolean
}

input CardCreateManyCreatedByUserInput {
  appointment: DateTimeISO
  columnId: Int!
  createdAt: DateTimeISO
  description: String!
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardCreateManyCreatedByUserInputEnvelope {
  data: [CardCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input CardCreateManyInput {
  appointment: DateTimeISO
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardCreateManyUpdatedByUserInput {
  appointment: DateTimeISO
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
}

input CardCreateManyUpdatedByUserInputEnvelope {
  data: [CardCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input CardCreateNestedManyWithoutColumnInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutColumnInput!]
  create: [CardCreateWithoutColumnInput!]
  createMany: CardCreateManyColumnInputEnvelope
}

input CardCreateNestedOneWithoutCardAssignmentInput {
  connect: CardWhereUniqueInput
  connectOrCreate: CardCreateOrConnectWithoutCardAssignmentInput
  create: CardUncheckedCreateWithoutCardAssignmentInput
}

input CardCreateNestedOneWithoutCardCommentInput {
  connect: CardWhereUniqueInput
  connectOrCreate: CardCreateOrConnectWithoutCardCommentInput
  create: CardUncheckedCreateWithoutCardCommentInput
}

input CardCreateNestedOneWithoutCardTagsInput {
  connect: CardWhereUniqueInput
  connectOrCreate: CardCreateOrConnectWithoutCardTagsInput
  create: CardUncheckedCreateWithoutCardTagsInput
}

input CardCreateNestedOneWithoutFieldValueInput {
  connect: CardWhereUniqueInput
  connectOrCreate: CardCreateOrConnectWithoutFieldValueInput
  create: CardUncheckedCreateWithoutFieldValueInput
}

input CardCreateNestedOneWithoutMovimentInput {
  connect: CardWhereUniqueInput
  connectOrCreate: CardCreateOrConnectWithoutMovimentInput
  create: CardUncheckedCreateWithoutMovimentInput
}

input CardCreateOrConnectWithoutCardAssignmentInput {
  create: CardUncheckedCreateWithoutCardAssignmentInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutCardCommentInput {
  create: CardUncheckedCreateWithoutCardCommentInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutCardTagsInput {
  create: CardUncheckedCreateWithoutCardTagsInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutColumnInput {
  create: CardUncheckedCreateWithoutColumnInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutCreatedByUserInput {
  create: CardUncheckedCreateWithoutCreatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutFieldValueInput {
  create: CardUncheckedCreateWithoutFieldValueInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutMovimentInput {
  create: CardUncheckedCreateWithoutMovimentInput!
  where: CardWhereUniqueInput!
}

input CardCreateOrConnectWithoutUpdatedByUserInput {
  create: CardUncheckedCreateWithoutUpdatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardCreateWithoutColumnInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentCreateNestedManyWithoutCardInput
  cardComment: CardCommentCreateNestedManyWithoutCardInput
  cardTags: CardTagsCreateNestedManyWithoutCardInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutCardCreatedByInput
  description: String!
  fieldValue: FieldsValueCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutCardUpdatedByInput
}

input CardCreateWithoutCreatedByUserInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentCreateNestedManyWithoutCardInput
  cardComment: CardCommentCreateNestedManyWithoutCardInput
  cardTags: CardTagsCreateNestedManyWithoutCardInput
  column: ColumnCreateNestedOneWithoutCardInput!
  createdAt: DateTimeISO
  description: String!
  fieldValue: FieldsValueCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutCardUpdatedByInput
}

input CardCreateWithoutUpdatedByUserInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentCreateNestedManyWithoutCardInput
  cardComment: CardCommentCreateNestedManyWithoutCardInput
  cardTags: CardTagsCreateNestedManyWithoutCardInput
  column: ColumnCreateNestedOneWithoutCardInput!
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutCardCreatedByInput
  description: String!
  fieldValue: FieldsValueCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
}

input CardCreatetagsInput {
  set: [String!]!
}

type CardGroupBy {
  _avg: CardAvgAggregate
  _count: CardCountAggregate
  _max: CardMaxAggregate
  _min: CardMinAggregate
  _sum: CardSumAggregate
  appointment: DateTimeISO
  columnId: Int!
  createdAt: DateTimeISO!
  createdBy: String
  description: String!
  hasHistoryModified: Boolean!
  id: String!
  isOpen: Boolean!
  name: String!
  order: Int!
  priority: Float!
  tags: [String!]
  updatedAt: DateTimeISO!
  updatedBy: String
}

input CardListRelationFilter {
  every: CardWhereInput
  none: CardWhereInput
  some: CardWhereInput
}

type CardMaxAggregate {
  appointment: DateTimeISO
  columnId: Int
  createdAt: DateTimeISO
  createdBy: String
  description: String
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String
  order: Int
  priority: Float
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardMaxOrderByAggregateInput {
  appointment: SortOrder
  columnId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  hasHistoryModified: SortOrder
  id: SortOrder
  isOpen: SortOrder
  name: SortOrder
  order: SortOrder
  priority: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type CardMinAggregate {
  appointment: DateTimeISO
  columnId: Int
  createdAt: DateTimeISO
  createdBy: String
  description: String
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String
  order: Int
  priority: Float
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardMinOrderByAggregateInput {
  appointment: SortOrder
  columnId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  hasHistoryModified: SortOrder
  id: SortOrder
  isOpen: SortOrder
  name: SortOrder
  order: SortOrder
  priority: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type CardMovement {
  card: Card!
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO!
  fromColumn: Column!
  fromColumnId: Int!
  id: Int!
  toColumn: Column!
  toColumnId: Int!
  updateBy: String
  user(where: UserWhereInput): User
}

type CardMovementAvgAggregate {
  fromColumnId: Float
  id: Float
  toColumnId: Float
}

input CardMovementAvgOrderByAggregateInput {
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
}

type CardMovementCountAggregate {
  _all: Int!
  cardId: Int!
  content: Int!
  createdAt: Int!
  fromColumnId: Int!
  id: Int!
  toColumnId: Int!
  updateBy: Int!
}

input CardMovementCountOrderByAggregateInput {
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
  updateBy: SortOrder
}

input CardMovementCreateManyCardInput {
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementCreateManyCardInputEnvelope {
  data: [CardMovementCreateManyCardInput!]!
  skipDuplicates: Boolean
}

input CardMovementCreateManyFromColumnInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementCreateManyFromColumnInputEnvelope {
  data: [CardMovementCreateManyFromColumnInput!]!
  skipDuplicates: Boolean
}

input CardMovementCreateManyInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementCreateManyToColumnInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  updateBy: String
}

input CardMovementCreateManyToColumnInputEnvelope {
  data: [CardMovementCreateManyToColumnInput!]!
  skipDuplicates: Boolean
}

input CardMovementCreateManyUserInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
}

input CardMovementCreateManyUserInputEnvelope {
  data: [CardMovementCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input CardMovementCreateNestedManyWithoutCardInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutCardInput!]
  create: [CardMovementCreateWithoutCardInput!]
  createMany: CardMovementCreateManyCardInputEnvelope
}

input CardMovementCreateNestedManyWithoutFromColumnInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutFromColumnInput!]
  create: [CardMovementCreateWithoutFromColumnInput!]
  createMany: CardMovementCreateManyFromColumnInputEnvelope
}

input CardMovementCreateNestedManyWithoutToColumnInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutToColumnInput!]
  create: [CardMovementCreateWithoutToColumnInput!]
  createMany: CardMovementCreateManyToColumnInputEnvelope
}

input CardMovementCreateOrConnectWithoutCardInput {
  create: CardMovementUncheckedCreateWithoutCardInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementCreateOrConnectWithoutFromColumnInput {
  create: CardMovementUncheckedCreateWithoutFromColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementCreateOrConnectWithoutToColumnInput {
  create: CardMovementUncheckedCreateWithoutToColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementCreateOrConnectWithoutUserInput {
  create: CardMovementUncheckedCreateWithoutUserInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementCreateWithoutCardInput {
  content: JSON!
  createdAt: DateTimeISO
  fromColumn: ColumnCreateNestedOneWithoutMovementsFromInput!
  toColumn: ColumnCreateNestedOneWithoutMovementsToInput!
  user: UserCreateNestedOneWithoutCardMovementsInput
}

input CardMovementCreateWithoutFromColumnInput {
  card: CardCreateNestedOneWithoutMovimentInput!
  content: JSON!
  createdAt: DateTimeISO
  toColumn: ColumnCreateNestedOneWithoutMovementsToInput!
  user: UserCreateNestedOneWithoutCardMovementsInput
}

input CardMovementCreateWithoutToColumnInput {
  card: CardCreateNestedOneWithoutMovimentInput!
  content: JSON!
  createdAt: DateTimeISO
  fromColumn: ColumnCreateNestedOneWithoutMovementsFromInput!
  user: UserCreateNestedOneWithoutCardMovementsInput
}

input CardMovementCreateWithoutUserInput {
  card: CardCreateNestedOneWithoutMovimentInput!
  content: JSON!
  createdAt: DateTimeISO
  fromColumn: ColumnCreateNestedOneWithoutMovementsFromInput!
  toColumn: ColumnCreateNestedOneWithoutMovementsToInput!
}

type CardMovementGroupBy {
  _avg: CardMovementAvgAggregate
  _count: CardMovementCountAggregate
  _max: CardMovementMaxAggregate
  _min: CardMovementMinAggregate
  _sum: CardMovementSumAggregate
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO!
  fromColumnId: Int!
  id: Int!
  toColumnId: Int!
  updateBy: String
}

input CardMovementListRelationFilter {
  every: CardMovementWhereInput
  none: CardMovementWhereInput
  some: CardMovementWhereInput
}

type CardMovementMaxAggregate {
  cardId: String
  createdAt: DateTimeISO
  fromColumnId: Int
  id: Int
  toColumnId: Int
  updateBy: String
}

input CardMovementMaxOrderByAggregateInput {
  cardId: SortOrder
  createdAt: SortOrder
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
  updateBy: SortOrder
}

type CardMovementMinAggregate {
  cardId: String
  createdAt: DateTimeISO
  fromColumnId: Int
  id: Int
  toColumnId: Int
  updateBy: String
}

input CardMovementMinOrderByAggregateInput {
  cardId: SortOrder
  createdAt: SortOrder
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
  updateBy: SortOrder
}

input CardMovementOrderByRelationAggregateInput {
  _count: SortOrder
}

input CardMovementOrderByWithAggregationInput {
  _avg: CardMovementAvgOrderByAggregateInput
  _count: CardMovementCountOrderByAggregateInput
  _max: CardMovementMaxOrderByAggregateInput
  _min: CardMovementMinOrderByAggregateInput
  _sum: CardMovementSumOrderByAggregateInput
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
  updateBy: SortOrderInput
}

input CardMovementOrderByWithRelationInput {
  card: CardOrderByWithRelationInput
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  fromColumn: ColumnOrderByWithRelationInput
  fromColumnId: SortOrder
  id: SortOrder
  toColumn: ColumnOrderByWithRelationInput
  toColumnId: SortOrder
  updateBy: SortOrderInput
  user: UserOrderByWithRelationInput
}

enum CardMovementScalarFieldEnum {
  cardId
  content
  createdAt
  fromColumnId
  id
  toColumnId
  updateBy
}

input CardMovementScalarWhereInput {
  AND: [CardMovementScalarWhereInput!]
  NOT: [CardMovementScalarWhereInput!]
  OR: [CardMovementScalarWhereInput!]
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  fromColumnId: IntFilter
  id: IntFilter
  toColumnId: IntFilter
  updateBy: UuidNullableFilter
}

input CardMovementScalarWhereWithAggregatesInput {
  AND: [CardMovementScalarWhereWithAggregatesInput!]
  NOT: [CardMovementScalarWhereWithAggregatesInput!]
  OR: [CardMovementScalarWhereWithAggregatesInput!]
  cardId: StringWithAggregatesFilter
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  fromColumnId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  toColumnId: IntWithAggregatesFilter
  updateBy: UuidNullableWithAggregatesFilter
}

type CardMovementSumAggregate {
  fromColumnId: Int
  id: Int
  toColumnId: Int
}

input CardMovementSumOrderByAggregateInput {
  fromColumnId: SortOrder
  id: SortOrder
  toColumnId: SortOrder
}

input CardMovementUncheckedCreateInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementUncheckedCreateNestedManyWithoutCardInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutCardInput!]
  create: [CardMovementCreateWithoutCardInput!]
  createMany: CardMovementCreateManyCardInputEnvelope
}

input CardMovementUncheckedCreateNestedManyWithoutFromColumnInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutFromColumnInput!]
  create: [CardMovementCreateWithoutFromColumnInput!]
  createMany: CardMovementCreateManyFromColumnInputEnvelope
}

input CardMovementUncheckedCreateNestedManyWithoutToColumnInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutToColumnInput!]
  create: [CardMovementCreateWithoutToColumnInput!]
  createMany: CardMovementCreateManyToColumnInputEnvelope
}

input CardMovementUncheckedCreateNestedManyWithoutUserInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutUserInput!]
  create: [CardMovementCreateWithoutUserInput!]
  createMany: CardMovementCreateManyUserInputEnvelope
}

input CardMovementUncheckedCreateWithoutCardInput {
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementUncheckedCreateWithoutFromColumnInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  toColumnId: Int!
  updateBy: String
}

input CardMovementUncheckedCreateWithoutToColumnInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  updateBy: String
}

input CardMovementUncheckedCreateWithoutUserInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fromColumnId: Int!
  id: Int
  toColumnId: Int!
}

input CardMovementUncheckedUpdateInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyWithoutCardInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyWithoutCardNestedInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutCardInput!]
  create: [CardMovementCreateWithoutCardInput!]
  createMany: CardMovementCreateManyCardInputEnvelope
  delete: [CardMovementWhereUniqueInput!]
  deleteMany: [CardMovementScalarWhereInput!]
  disconnect: [CardMovementWhereUniqueInput!]
  set: [CardMovementWhereUniqueInput!]
  update: [CardMovementUpdateWithWhereUniqueWithoutCardInput!]
  updateMany: [CardMovementUpdateManyWithWhereWithoutCardInput!]
  upsert: [CardMovementUpsertWithWhereUniqueWithoutCardInput!]
}

input CardMovementUncheckedUpdateManyWithoutFromColumnInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutFromColumnInput!]
  create: [CardMovementCreateWithoutFromColumnInput!]
  createMany: CardMovementCreateManyFromColumnInputEnvelope
  delete: [CardMovementWhereUniqueInput!]
  deleteMany: [CardMovementScalarWhereInput!]
  disconnect: [CardMovementWhereUniqueInput!]
  set: [CardMovementWhereUniqueInput!]
  update: [CardMovementUpdateWithWhereUniqueWithoutFromColumnInput!]
  updateMany: [CardMovementUpdateManyWithWhereWithoutFromColumnInput!]
  upsert: [CardMovementUpsertWithWhereUniqueWithoutFromColumnInput!]
}

input CardMovementUncheckedUpdateManyWithoutToColumnInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyWithoutToColumnNestedInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutToColumnInput!]
  create: [CardMovementCreateWithoutToColumnInput!]
  createMany: CardMovementCreateManyToColumnInputEnvelope
  delete: [CardMovementWhereUniqueInput!]
  deleteMany: [CardMovementScalarWhereInput!]
  disconnect: [CardMovementWhereUniqueInput!]
  set: [CardMovementWhereUniqueInput!]
  update: [CardMovementUpdateWithWhereUniqueWithoutToColumnInput!]
  updateMany: [CardMovementUpdateManyWithWhereWithoutToColumnInput!]
  upsert: [CardMovementUpsertWithWhereUniqueWithoutToColumnInput!]
}

input CardMovementUncheckedUpdateManyWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateManyWithoutUserNestedInput {
  connect: [CardMovementWhereUniqueInput!]
  connectOrCreate: [CardMovementCreateOrConnectWithoutUserInput!]
  create: [CardMovementCreateWithoutUserInput!]
  createMany: CardMovementCreateManyUserInputEnvelope
  delete: [CardMovementWhereUniqueInput!]
  deleteMany: [CardMovementScalarWhereInput!]
  disconnect: [CardMovementWhereUniqueInput!]
  set: [CardMovementWhereUniqueInput!]
  update: [CardMovementUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CardMovementUpdateManyWithWhereWithoutUserInput!]
  upsert: [CardMovementUpsertWithWhereUniqueWithoutUserInput!]
}

input CardMovementUncheckedUpdateWithoutCardInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateWithoutFromColumnInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateWithoutToColumnInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updateBy: NullableStringFieldUpdateOperationsInput
}

input CardMovementUncheckedUpdateWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fromColumnId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  toColumnId: IntFieldUpdateOperationsInput
}

input CardMovementUpdateManyWithWhereWithoutCardInput {
  data: CardMovementUncheckedUpdateManyWithoutCardInput!
  where: CardMovementScalarWhereInput!
}

input CardMovementUpdateManyWithWhereWithoutFromColumnInput {
  data: CardMovementUncheckedUpdateManyWithoutFromColumnInput!
  where: CardMovementScalarWhereInput!
}

input CardMovementUpdateManyWithWhereWithoutToColumnInput {
  data: CardMovementUncheckedUpdateManyWithoutToColumnInput!
  where: CardMovementScalarWhereInput!
}

input CardMovementUpdateManyWithWhereWithoutUserInput {
  data: CardMovementUncheckedUpdateManyWithoutUserInput!
  where: CardMovementScalarWhereInput!
}

input CardMovementUpdateWithWhereUniqueWithoutCardInput {
  data: CardMovementUncheckedUpdateWithoutCardInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpdateWithWhereUniqueWithoutFromColumnInput {
  data: CardMovementUncheckedUpdateWithoutFromColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpdateWithWhereUniqueWithoutToColumnInput {
  data: CardMovementUncheckedUpdateWithoutToColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpdateWithWhereUniqueWithoutUserInput {
  data: CardMovementUncheckedUpdateWithoutUserInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpsertWithWhereUniqueWithoutCardInput {
  create: CardMovementUncheckedCreateWithoutCardInput!
  update: CardMovementUncheckedUpdateWithoutCardInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpsertWithWhereUniqueWithoutFromColumnInput {
  create: CardMovementUncheckedCreateWithoutFromColumnInput!
  update: CardMovementUncheckedUpdateWithoutFromColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpsertWithWhereUniqueWithoutToColumnInput {
  create: CardMovementUncheckedCreateWithoutToColumnInput!
  update: CardMovementUncheckedUpdateWithoutToColumnInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementUpsertWithWhereUniqueWithoutUserInput {
  create: CardMovementUncheckedCreateWithoutUserInput!
  update: CardMovementUncheckedUpdateWithoutUserInput!
  where: CardMovementWhereUniqueInput!
}

input CardMovementWhereInput {
  AND: [CardMovementWhereInput!]
  NOT: [CardMovementWhereInput!]
  OR: [CardMovementWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  fromColumn: ColumnRelationFilter
  fromColumnId: IntFilter
  id: IntFilter
  toColumn: ColumnRelationFilter
  toColumnId: IntFilter
  updateBy: UuidNullableFilter
  user: UserNullableRelationFilter
}

input CardMovementWhereUniqueInput {
  AND: [CardMovementWhereInput!]
  NOT: [CardMovementWhereInput!]
  OR: [CardMovementWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  fromColumn: ColumnRelationFilter
  fromColumnId: IntFilter
  id: Int
  toColumn: ColumnRelationFilter
  toColumnId: IntFilter
  updateBy: UuidNullableFilter
  user: UserNullableRelationFilter
}

input CardOrderByRelationAggregateInput {
  _count: SortOrder
}

input CardOrderByWithAggregationInput {
  _avg: CardAvgOrderByAggregateInput
  _count: CardCountOrderByAggregateInput
  _max: CardMaxOrderByAggregateInput
  _min: CardMinOrderByAggregateInput
  _sum: CardSumOrderByAggregateInput
  appointment: SortOrderInput
  columnId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  description: SortOrder
  hasHistoryModified: SortOrder
  id: SortOrder
  isOpen: SortOrder
  name: SortOrder
  order: SortOrder
  priority: SortOrder
  tags: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input CardOrderByWithRelationInput {
  appointment: SortOrderInput
  cardAssignment: CardAssignmentOrderByRelationAggregateInput
  cardComment: CardCommentOrderByRelationAggregateInput
  cardTags: CardTagsOrderByRelationAggregateInput
  column: ColumnOrderByWithRelationInput
  columnId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  description: SortOrder
  fieldValue: FieldsValueOrderByRelationAggregateInput
  hasHistoryModified: SortOrder
  id: SortOrder
  isOpen: SortOrder
  moviment: CardMovementOrderByRelationAggregateInput
  name: SortOrder
  order: SortOrder
  priority: SortOrder
  tags: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedByUser: UserOrderByWithRelationInput
}

input CardRelationFilter {
  is: CardWhereInput
  isNot: CardWhereInput
}

enum CardScalarFieldEnum {
  appointment
  columnId
  createdAt
  createdBy
  description
  hasHistoryModified
  id
  isOpen
  name
  order
  priority
  tags
  updatedAt
  updatedBy
}

input CardScalarWhereInput {
  AND: [CardScalarWhereInput!]
  NOT: [CardScalarWhereInput!]
  OR: [CardScalarWhereInput!]
  appointment: DateTimeNullableFilter
  columnId: IntFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  description: StringFilter
  hasHistoryModified: BoolFilter
  id: StringFilter
  isOpen: BoolFilter
  name: StringFilter
  order: IntFilter
  priority: FloatFilter
  tags: StringNullableListFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input CardScalarWhereWithAggregatesInput {
  AND: [CardScalarWhereWithAggregatesInput!]
  NOT: [CardScalarWhereWithAggregatesInput!]
  OR: [CardScalarWhereWithAggregatesInput!]
  appointment: DateTimeNullableWithAggregatesFilter
  columnId: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  description: StringWithAggregatesFilter
  hasHistoryModified: BoolWithAggregatesFilter
  id: StringWithAggregatesFilter
  isOpen: BoolWithAggregatesFilter
  name: StringWithAggregatesFilter
  order: IntWithAggregatesFilter
  priority: FloatWithAggregatesFilter
  tags: StringNullableListFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type CardSumAggregate {
  columnId: Int
  order: Int
  priority: Float
}

input CardSumOrderByAggregateInput {
  columnId: SortOrder
  order: SortOrder
  priority: SortOrder
}

type CardTags {
  card: Card!
  cardId: String!
  tag: Tag!
  tagId: Int!
}

type CardTagsAvgAggregate {
  tagId: Float
}

input CardTagsAvgOrderByAggregateInput {
  tagId: SortOrder
}

input CardTagsCardIdTagIdCompoundUniqueInput {
  cardId: String!
  tagId: Int!
}

type CardTagsCountAggregate {
  _all: Int!
  cardId: Int!
  tagId: Int!
}

input CardTagsCountOrderByAggregateInput {
  cardId: SortOrder
  tagId: SortOrder
}

input CardTagsCreateManyCardInput {
  tagId: Int!
}

input CardTagsCreateManyCardInputEnvelope {
  data: [CardTagsCreateManyCardInput!]!
  skipDuplicates: Boolean
}

input CardTagsCreateManyInput {
  cardId: String!
  tagId: Int!
}

input CardTagsCreateManyTagInput {
  cardId: String!
}

input CardTagsCreateManyTagInputEnvelope {
  data: [CardTagsCreateManyTagInput!]!
  skipDuplicates: Boolean
}

input CardTagsCreateNestedManyWithoutCardInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutCardInput!]
  create: [CardTagsCreateWithoutCardInput!]
  createMany: CardTagsCreateManyCardInputEnvelope
}

input CardTagsCreateNestedManyWithoutTagInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutTagInput!]
  create: [CardTagsCreateWithoutTagInput!]
  createMany: CardTagsCreateManyTagInputEnvelope
}

input CardTagsCreateOrConnectWithoutCardInput {
  create: CardTagsUncheckedCreateWithoutCardInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsCreateOrConnectWithoutTagInput {
  create: CardTagsUncheckedCreateWithoutTagInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsCreateWithoutCardInput {
  tag: TagCreateNestedOneWithoutCardTagsInput!
}

input CardTagsCreateWithoutTagInput {
  card: CardCreateNestedOneWithoutCardTagsInput!
}

type CardTagsGroupBy {
  _avg: CardTagsAvgAggregate
  _count: CardTagsCountAggregate
  _max: CardTagsMaxAggregate
  _min: CardTagsMinAggregate
  _sum: CardTagsSumAggregate
  cardId: String!
  tagId: Int!
}

input CardTagsListRelationFilter {
  every: CardTagsWhereInput
  none: CardTagsWhereInput
  some: CardTagsWhereInput
}

type CardTagsMaxAggregate {
  cardId: String
  tagId: Int
}

input CardTagsMaxOrderByAggregateInput {
  cardId: SortOrder
  tagId: SortOrder
}

type CardTagsMinAggregate {
  cardId: String
  tagId: Int
}

input CardTagsMinOrderByAggregateInput {
  cardId: SortOrder
  tagId: SortOrder
}

input CardTagsOrderByRelationAggregateInput {
  _count: SortOrder
}

input CardTagsOrderByWithAggregationInput {
  _avg: CardTagsAvgOrderByAggregateInput
  _count: CardTagsCountOrderByAggregateInput
  _max: CardTagsMaxOrderByAggregateInput
  _min: CardTagsMinOrderByAggregateInput
  _sum: CardTagsSumOrderByAggregateInput
  cardId: SortOrder
  tagId: SortOrder
}

input CardTagsOrderByWithRelationInput {
  card: CardOrderByWithRelationInput
  cardId: SortOrder
  tag: TagOrderByWithRelationInput
  tagId: SortOrder
}

enum CardTagsScalarFieldEnum {
  cardId
  tagId
}

input CardTagsScalarWhereInput {
  AND: [CardTagsScalarWhereInput!]
  NOT: [CardTagsScalarWhereInput!]
  OR: [CardTagsScalarWhereInput!]
  cardId: StringFilter
  tagId: IntFilter
}

input CardTagsScalarWhereWithAggregatesInput {
  AND: [CardTagsScalarWhereWithAggregatesInput!]
  NOT: [CardTagsScalarWhereWithAggregatesInput!]
  OR: [CardTagsScalarWhereWithAggregatesInput!]
  cardId: StringWithAggregatesFilter
  tagId: IntWithAggregatesFilter
}

type CardTagsSumAggregate {
  tagId: Int
}

input CardTagsSumOrderByAggregateInput {
  tagId: SortOrder
}

input CardTagsUncheckedCreateInput {
  cardId: String!
  tagId: Int!
}

input CardTagsUncheckedCreateNestedManyWithoutCardInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutCardInput!]
  create: [CardTagsCreateWithoutCardInput!]
  createMany: CardTagsCreateManyCardInputEnvelope
}

input CardTagsUncheckedCreateNestedManyWithoutTagInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutTagInput!]
  create: [CardTagsCreateWithoutTagInput!]
  createMany: CardTagsCreateManyTagInputEnvelope
}

input CardTagsUncheckedCreateWithoutCardInput {
  tagId: Int!
}

input CardTagsUncheckedCreateWithoutTagInput {
  cardId: String!
}

input CardTagsUncheckedUpdateInput {
  cardId: StringFieldUpdateOperationsInput
  tagId: IntFieldUpdateOperationsInput
}

input CardTagsUncheckedUpdateManyInput {
  cardId: StringFieldUpdateOperationsInput
  tagId: IntFieldUpdateOperationsInput
}

input CardTagsUncheckedUpdateManyWithoutCardInput {
  tagId: IntFieldUpdateOperationsInput
}

input CardTagsUncheckedUpdateManyWithoutCardNestedInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutCardInput!]
  create: [CardTagsCreateWithoutCardInput!]
  createMany: CardTagsCreateManyCardInputEnvelope
  delete: [CardTagsWhereUniqueInput!]
  deleteMany: [CardTagsScalarWhereInput!]
  disconnect: [CardTagsWhereUniqueInput!]
  set: [CardTagsWhereUniqueInput!]
  update: [CardTagsUpdateWithWhereUniqueWithoutCardInput!]
  updateMany: [CardTagsUpdateManyWithWhereWithoutCardInput!]
  upsert: [CardTagsUpsertWithWhereUniqueWithoutCardInput!]
}

input CardTagsUncheckedUpdateManyWithoutTagInput {
  cardId: StringFieldUpdateOperationsInput
}

input CardTagsUncheckedUpdateManyWithoutTagNestedInput {
  connect: [CardTagsWhereUniqueInput!]
  connectOrCreate: [CardTagsCreateOrConnectWithoutTagInput!]
  create: [CardTagsCreateWithoutTagInput!]
  createMany: CardTagsCreateManyTagInputEnvelope
  delete: [CardTagsWhereUniqueInput!]
  deleteMany: [CardTagsScalarWhereInput!]
  disconnect: [CardTagsWhereUniqueInput!]
  set: [CardTagsWhereUniqueInput!]
  update: [CardTagsUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [CardTagsUpdateManyWithWhereWithoutTagInput!]
  upsert: [CardTagsUpsertWithWhereUniqueWithoutTagInput!]
}

input CardTagsUncheckedUpdateWithoutCardInput {
  tagId: IntFieldUpdateOperationsInput
}

input CardTagsUncheckedUpdateWithoutTagInput {
  cardId: StringFieldUpdateOperationsInput
}

input CardTagsUpdateManyWithWhereWithoutCardInput {
  data: CardTagsUncheckedUpdateManyWithoutCardInput!
  where: CardTagsScalarWhereInput!
}

input CardTagsUpdateManyWithWhereWithoutTagInput {
  data: CardTagsUncheckedUpdateManyWithoutTagInput!
  where: CardTagsScalarWhereInput!
}

input CardTagsUpdateWithWhereUniqueWithoutCardInput {
  data: CardTagsUncheckedUpdateWithoutCardInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsUpdateWithWhereUniqueWithoutTagInput {
  data: CardTagsUncheckedUpdateWithoutTagInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsUpsertWithWhereUniqueWithoutCardInput {
  create: CardTagsUncheckedCreateWithoutCardInput!
  update: CardTagsUncheckedUpdateWithoutCardInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsUpsertWithWhereUniqueWithoutTagInput {
  create: CardTagsUncheckedCreateWithoutTagInput!
  update: CardTagsUncheckedUpdateWithoutTagInput!
  where: CardTagsWhereUniqueInput!
}

input CardTagsWhereInput {
  AND: [CardTagsWhereInput!]
  NOT: [CardTagsWhereInput!]
  OR: [CardTagsWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  tag: TagRelationFilter
  tagId: IntFilter
}

input CardTagsWhereUniqueInput {
  AND: [CardTagsWhereInput!]
  NOT: [CardTagsWhereInput!]
  OR: [CardTagsWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  cardId_tagId: CardTagsCardIdTagIdCompoundUniqueInput
  tag: TagRelationFilter
  tagId: IntFilter
}

input CardUncheckedCreateInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateNestedManyWithoutColumnInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutColumnInput!]
  create: [CardCreateWithoutColumnInput!]
  createMany: CardCreateManyColumnInputEnvelope
}

input CardUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutCreatedByUserInput!]
  create: [CardCreateWithoutCreatedByUserInput!]
  createMany: CardCreateManyCreatedByUserInputEnvelope
}

input CardUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutUpdatedByUserInput!]
  create: [CardCreateWithoutUpdatedByUserInput!]
  createMany: CardCreateManyUpdatedByUserInputEnvelope
}

input CardUncheckedCreateWithoutCardAssignmentInput {
  appointment: DateTimeISO
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutCardCommentInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutCardTagsInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutColumnInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutCreatedByUserInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutFieldValueInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutMovimentInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
  updatedBy: String
}

input CardUncheckedCreateWithoutUpdatedByUserInput {
  appointment: DateTimeISO
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutCardInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutCardInput
  cardTags: CardTagsUncheckedCreateNestedManyWithoutCardInput
  columnId: Int!
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldValue: FieldsValueUncheckedCreateNestedManyWithoutCardInput
  hasHistoryModified: Boolean
  id: String
  isOpen: Boolean
  moviment: CardMovementUncheckedCreateNestedManyWithoutCardInput
  name: String!
  order: Int!
  priority: Float
  tags: CardCreatetagsInput
  updatedAt: DateTimeISO
}

input CardUncheckedUpdateInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  cardAssignment: CardAssignmentUncheckedUpdateManyWithoutCardNestedInput
  cardComment: CardCommentUncheckedUpdateManyWithoutCardNestedInput
  cardTags: CardTagsUncheckedUpdateManyWithoutCardNestedInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldValue: FieldsValueUncheckedUpdateManyWithoutCardNestedInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  moviment: CardMovementUncheckedUpdateManyWithoutCardNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateManyInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateManyWithoutColumnInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateManyWithoutColumnNestedInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutColumnInput!]
  create: [CardCreateWithoutColumnInput!]
  createMany: CardCreateManyColumnInputEnvelope
  delete: [CardWhereUniqueInput!]
  deleteMany: [CardScalarWhereInput!]
  disconnect: [CardWhereUniqueInput!]
  set: [CardWhereUniqueInput!]
  update: [CardUpdateWithWhereUniqueWithoutColumnInput!]
  updateMany: [CardUpdateManyWithWhereWithoutColumnInput!]
  upsert: [CardUpsertWithWhereUniqueWithoutColumnInput!]
}

input CardUncheckedUpdateManyWithoutCreatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutCreatedByUserInput!]
  create: [CardCreateWithoutCreatedByUserInput!]
  createMany: CardCreateManyCreatedByUserInputEnvelope
  delete: [CardWhereUniqueInput!]
  deleteMany: [CardScalarWhereInput!]
  disconnect: [CardWhereUniqueInput!]
  set: [CardWhereUniqueInput!]
  update: [CardUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [CardUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [CardUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input CardUncheckedUpdateManyWithoutUpdatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [CardWhereUniqueInput!]
  connectOrCreate: [CardCreateOrConnectWithoutUpdatedByUserInput!]
  create: [CardCreateWithoutUpdatedByUserInput!]
  createMany: CardCreateManyUpdatedByUserInputEnvelope
  delete: [CardWhereUniqueInput!]
  deleteMany: [CardScalarWhereInput!]
  disconnect: [CardWhereUniqueInput!]
  set: [CardWhereUniqueInput!]
  update: [CardUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [CardUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [CardUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input CardUncheckedUpdateWithoutColumnInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  cardAssignment: CardAssignmentUncheckedUpdateManyWithoutCardNestedInput
  cardComment: CardCommentUncheckedUpdateManyWithoutCardNestedInput
  cardTags: CardTagsUncheckedUpdateManyWithoutCardNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldValue: FieldsValueUncheckedUpdateManyWithoutCardNestedInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  moviment: CardMovementUncheckedUpdateManyWithoutCardNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateWithoutCreatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  cardAssignment: CardAssignmentUncheckedUpdateManyWithoutCardNestedInput
  cardComment: CardCommentUncheckedUpdateManyWithoutCardNestedInput
  cardTags: CardTagsUncheckedUpdateManyWithoutCardNestedInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldValue: FieldsValueUncheckedUpdateManyWithoutCardNestedInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  moviment: CardMovementUncheckedUpdateManyWithoutCardNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input CardUncheckedUpdateWithoutUpdatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  cardAssignment: CardAssignmentUncheckedUpdateManyWithoutCardNestedInput
  cardComment: CardCommentUncheckedUpdateManyWithoutCardNestedInput
  cardTags: CardTagsUncheckedUpdateManyWithoutCardNestedInput
  columnId: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldValue: FieldsValueUncheckedUpdateManyWithoutCardNestedInput
  hasHistoryModified: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOpen: BoolFieldUpdateOperationsInput
  moviment: CardMovementUncheckedUpdateManyWithoutCardNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  priority: FloatFieldUpdateOperationsInput
  tags: CardUpdatetagsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CardUpdateManyWithWhereWithoutColumnInput {
  data: CardUncheckedUpdateManyWithoutColumnInput!
  where: CardScalarWhereInput!
}

input CardUpdateManyWithWhereWithoutCreatedByUserInput {
  data: CardUncheckedUpdateManyWithoutCreatedByUserInput!
  where: CardScalarWhereInput!
}

input CardUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: CardUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: CardScalarWhereInput!
}

input CardUpdateWithWhereUniqueWithoutColumnInput {
  data: CardUncheckedUpdateWithoutColumnInput!
  where: CardWhereUniqueInput!
}

input CardUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: CardUncheckedUpdateWithoutCreatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: CardUncheckedUpdateWithoutUpdatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardUpdatetagsInput {
  push: [String!]
  set: [String!]
}

input CardUpsertWithWhereUniqueWithoutColumnInput {
  create: CardUncheckedCreateWithoutColumnInput!
  update: CardUncheckedUpdateWithoutColumnInput!
  where: CardWhereUniqueInput!
}

input CardUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: CardUncheckedCreateWithoutCreatedByUserInput!
  update: CardUncheckedUpdateWithoutCreatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: CardUncheckedCreateWithoutUpdatedByUserInput!
  update: CardUncheckedUpdateWithoutUpdatedByUserInput!
  where: CardWhereUniqueInput!
}

input CardWhereInput {
  AND: [CardWhereInput!]
  NOT: [CardWhereInput!]
  OR: [CardWhereInput!]
  appointment: DateTimeNullableFilter
  cardAssignment: CardAssignmentListRelationFilter
  cardComment: CardCommentListRelationFilter
  cardTags: CardTagsListRelationFilter
  column: ColumnRelationFilter
  columnId: IntFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  description: StringFilter
  fieldValue: FieldsValueListRelationFilter
  hasHistoryModified: BoolFilter
  id: StringFilter
  isOpen: BoolFilter
  moviment: CardMovementListRelationFilter
  name: StringFilter
  order: IntFilter
  priority: FloatFilter
  tags: StringNullableListFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

input CardWhereUniqueInput {
  AND: [CardWhereInput!]
  NOT: [CardWhereInput!]
  OR: [CardWhereInput!]
  appointment: DateTimeNullableFilter
  cardAssignment: CardAssignmentListRelationFilter
  cardComment: CardCommentListRelationFilter
  cardTags: CardTagsListRelationFilter
  column: ColumnRelationFilter
  columnId: IntFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  description: StringFilter
  fieldValue: FieldsValueListRelationFilter
  hasHistoryModified: BoolFilter
  id: String
  isOpen: BoolFilter
  moviment: CardMovementListRelationFilter
  name: StringFilter
  order: IntFilter
  priority: FloatFilter
  tags: StringNullableListFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

input ChangeUser {
  password: String!
  token: String!
}

type Client {
  Csat(cursor: CsatWhereUniqueInput, distinct: [CsatScalarFieldEnum!], orderBy: [CsatOrderByWithRelationInput!], skip: Int, take: Int, where: CsatWhereInput): [Csat!]!
  Qnp(cursor: QnpWhereUniqueInput, distinct: [QnpScalarFieldEnum!], orderBy: [QnpOrderByWithRelationInput!], skip: Int, take: Int, where: QnpWhereInput): [Qnp!]!
  _count: ClientCount
  cnpj: String!
  content: JSON
  cpf: String
  id: Int!
  project(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): [Project!]!
  user: User!
  userUuid: String!
}

type ClientAvgAggregate {
  id: Float
}

input ClientAvgOrderByAggregateInput {
  id: SortOrder
}

type ClientCount {
  Csat(where: CsatWhereInput): Int!
  Qnp(where: QnpWhereInput): Int!
  project(where: ProjectWhereInput): Int!
}

type ClientCountAggregate {
  _all: Int!
  cnpj: Int!
  content: Int!
  cpf: Int!
  id: Int!
  userUuid: Int!
}

input ClientCountOrderByAggregateInput {
  cnpj: SortOrder
  content: SortOrder
  cpf: SortOrder
  id: SortOrder
  userUuid: SortOrder
}

input ClientCreateManyInput {
  cnpj: String
  content: JSON
  cpf: String
  id: Int
  userUuid: String!
}

input ClientCreateManyUserInput {
  cnpj: String
  content: JSON
  cpf: String
  id: Int
}

input ClientCreateManyUserInputEnvelope {
  data: [ClientCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ClientCreateNestedOneWithoutProjectInput {
  connect: ClientWhereUniqueInput
  connectOrCreate: ClientCreateOrConnectWithoutProjectInput
  create: ClientUncheckedCreateWithoutProjectInput
}

input ClientCreateOrConnectWithoutProjectInput {
  create: ClientUncheckedCreateWithoutProjectInput!
  where: ClientWhereUniqueInput!
}

input ClientCreateOrConnectWithoutUserInput {
  create: ClientUncheckedCreateWithoutUserInput!
  where: ClientWhereUniqueInput!
}

input ClientCreateWithoutUserInput {
  Csat: CsatCreateNestedManyWithoutClientInput
  Qnp: QnpCreateNestedManyWithoutClientInput
  cnpj: String
  content: JSON
  cpf: String
  project: ProjectCreateNestedManyWithoutClientInput
}

type ClientGroupBy {
  _avg: ClientAvgAggregate
  _count: ClientCountAggregate
  _max: ClientMaxAggregate
  _min: ClientMinAggregate
  _sum: ClientSumAggregate
  cnpj: String!
  content: JSON
  cpf: String
  id: Int!
  userUuid: String!
}

input ClientListRelationFilter {
  every: ClientWhereInput
  none: ClientWhereInput
  some: ClientWhereInput
}

type ClientMaxAggregate {
  cnpj: String
  cpf: String
  id: Int
  userUuid: String
}

input ClientMaxOrderByAggregateInput {
  cnpj: SortOrder
  cpf: SortOrder
  id: SortOrder
  userUuid: SortOrder
}

type ClientMinAggregate {
  cnpj: String
  cpf: String
  id: Int
  userUuid: String
}

input ClientMinOrderByAggregateInput {
  cnpj: SortOrder
  cpf: SortOrder
  id: SortOrder
  userUuid: SortOrder
}

input ClientNullableRelationFilter {
  is: ClientWhereInput
  isNot: ClientWhereInput
}

input ClientOrderByRelationAggregateInput {
  _count: SortOrder
}

input ClientOrderByWithAggregationInput {
  _avg: ClientAvgOrderByAggregateInput
  _count: ClientCountOrderByAggregateInput
  _max: ClientMaxOrderByAggregateInput
  _min: ClientMinOrderByAggregateInput
  _sum: ClientSumOrderByAggregateInput
  cnpj: SortOrder
  content: SortOrderInput
  cpf: SortOrderInput
  id: SortOrder
  userUuid: SortOrder
}

input ClientOrderByWithRelationInput {
  Csat: CsatOrderByRelationAggregateInput
  Qnp: QnpOrderByRelationAggregateInput
  cnpj: SortOrder
  content: SortOrderInput
  cpf: SortOrderInput
  id: SortOrder
  project: ProjectOrderByRelationAggregateInput
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

input ClientRelationFilter {
  is: ClientWhereInput
  isNot: ClientWhereInput
}

enum ClientScalarFieldEnum {
  cnpj
  content
  cpf
  id
  userUuid
}

input ClientScalarWhereInput {
  AND: [ClientScalarWhereInput!]
  NOT: [ClientScalarWhereInput!]
  OR: [ClientScalarWhereInput!]
  cnpj: StringFilter
  content: JsonNullableFilter
  cpf: StringNullableFilter
  id: IntFilter
  userUuid: UuidFilter
}

input ClientScalarWhereWithAggregatesInput {
  AND: [ClientScalarWhereWithAggregatesInput!]
  NOT: [ClientScalarWhereWithAggregatesInput!]
  OR: [ClientScalarWhereWithAggregatesInput!]
  cnpj: StringWithAggregatesFilter
  content: JsonNullableWithAggregatesFilter
  cpf: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type ClientSumAggregate {
  id: Int
}

input ClientSumOrderByAggregateInput {
  id: SortOrder
}

input ClientUncheckedCreateInput {
  Csat: CsatUncheckedCreateNestedManyWithoutClientInput
  Qnp: QnpUncheckedCreateNestedManyWithoutClientInput
  cnpj: String
  content: JSON
  cpf: String
  id: Int
  project: ProjectUncheckedCreateNestedManyWithoutClientInput
  userUuid: String!
}

input ClientUncheckedCreateNestedManyWithoutUserInput {
  connect: [ClientWhereUniqueInput!]
  connectOrCreate: [ClientCreateOrConnectWithoutUserInput!]
  create: [ClientCreateWithoutUserInput!]
  createMany: ClientCreateManyUserInputEnvelope
}

input ClientUncheckedCreateWithoutProjectInput {
  Csat: CsatUncheckedCreateNestedManyWithoutClientInput
  Qnp: QnpUncheckedCreateNestedManyWithoutClientInput
  cnpj: String
  content: JSON
  cpf: String
  id: Int
  userUuid: String!
}

input ClientUncheckedCreateWithoutUserInput {
  Csat: CsatUncheckedCreateNestedManyWithoutClientInput
  Qnp: QnpUncheckedCreateNestedManyWithoutClientInput
  cnpj: String
  content: JSON
  cpf: String
  id: Int
  project: ProjectUncheckedCreateNestedManyWithoutClientInput
}

input ClientUncheckedUpdateInput {
  Csat: CsatUncheckedUpdateManyWithoutClientNestedInput
  Qnp: QnpUncheckedUpdateManyWithoutClientNestedInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  cpf: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  project: ProjectUncheckedUpdateManyWithoutClientNestedInput
  userUuid: StringFieldUpdateOperationsInput
}

input ClientUncheckedUpdateManyInput {
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  cpf: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input ClientUncheckedUpdateManyWithoutUserInput {
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  cpf: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input ClientUncheckedUpdateManyWithoutUserNestedInput {
  connect: [ClientWhereUniqueInput!]
  connectOrCreate: [ClientCreateOrConnectWithoutUserInput!]
  create: [ClientCreateWithoutUserInput!]
  createMany: ClientCreateManyUserInputEnvelope
  delete: [ClientWhereUniqueInput!]
  deleteMany: [ClientScalarWhereInput!]
  disconnect: [ClientWhereUniqueInput!]
  set: [ClientWhereUniqueInput!]
  update: [ClientUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ClientUpdateManyWithWhereWithoutUserInput!]
  upsert: [ClientUpsertWithWhereUniqueWithoutUserInput!]
}

input ClientUncheckedUpdateWithoutUserInput {
  Csat: CsatUncheckedUpdateManyWithoutClientNestedInput
  Qnp: QnpUncheckedUpdateManyWithoutClientNestedInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  cpf: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  project: ProjectUncheckedUpdateManyWithoutClientNestedInput
}

input ClientUpdateManyWithWhereWithoutUserInput {
  data: ClientUncheckedUpdateManyWithoutUserInput!
  where: ClientScalarWhereInput!
}

input ClientUpdateWithWhereUniqueWithoutUserInput {
  data: ClientUncheckedUpdateWithoutUserInput!
  where: ClientWhereUniqueInput!
}

input ClientUpsertWithWhereUniqueWithoutUserInput {
  create: ClientUncheckedCreateWithoutUserInput!
  update: ClientUncheckedUpdateWithoutUserInput!
  where: ClientWhereUniqueInput!
}

input ClientWhereInput {
  AND: [ClientWhereInput!]
  Csat: CsatListRelationFilter
  NOT: [ClientWhereInput!]
  OR: [ClientWhereInput!]
  Qnp: QnpListRelationFilter
  cnpj: StringFilter
  content: JsonNullableFilter
  cpf: StringNullableFilter
  id: IntFilter
  project: ProjectListRelationFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input ClientWhereUniqueInput {
  AND: [ClientWhereInput!]
  Csat: CsatListRelationFilter
  NOT: [ClientWhereInput!]
  OR: [ClientWhereInput!]
  Qnp: QnpListRelationFilter
  cnpj: StringFilter
  content: JsonNullableFilter
  cpf: StringNullableFilter
  id: Int
  project: ProjectListRelationFilter
  user: UserRelationFilter
  userUuid: String
}

type Column {
  _count: ColumnCount
  board: Board!
  boardId: String!
  card(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): [Card!]!
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  fieldValue(cursor: FieldColumnWhereUniqueInput, distinct: [FieldColumnScalarFieldEnum!], orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): [FieldColumn!]!
  id: Int!
  linkedColumns(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  linkingColumns(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  movementsFrom(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovement!]!
  movementsTo(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovement!]!
  order: Int!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedByUser(where: UserWhereInput): User
}

type ColumnAvgAggregate {
  id: Float
  order: Float
}

input ColumnAvgOrderByAggregateInput {
  id: SortOrder
  order: SortOrder
}

type ColumnCount {
  card(where: CardWhereInput): Int!
  fieldValue(where: FieldColumnWhereInput): Int!
  linkedColumns(where: ColumnWhereInput): Int!
  linkingColumns(where: ColumnWhereInput): Int!
  movementsFrom(where: CardMovementWhereInput): Int!
  movementsTo(where: CardMovementWhereInput): Int!
}

type ColumnCountAggregate {
  _all: Int!
  boardId: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  order: Int!
  title: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input ColumnCountOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ColumnCreateManyBoardInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnCreateManyBoardInputEnvelope {
  data: [ColumnCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input ColumnCreateManyCreatedByUserInput {
  boardId: String!
  createdAt: DateTimeISO
  id: Int
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnCreateManyCreatedByUserInputEnvelope {
  data: [ColumnCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input ColumnCreateManyInput {
  boardId: String!
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnCreateManyUpdatedByUserInput {
  boardId: String!
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  order: Int!
  title: String!
  updatedAt: DateTimeISO
}

input ColumnCreateManyUpdatedByUserInputEnvelope {
  data: [ColumnCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input ColumnCreateNestedManyWithoutBoardInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutBoardInput!]
  create: [ColumnCreateWithoutBoardInput!]
  createMany: ColumnCreateManyBoardInputEnvelope
}

input ColumnCreateNestedManyWithoutLinkedColumnsInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkedColumnsInput!]
  create: [ColumnCreateWithoutLinkedColumnsInput!]
}

input ColumnCreateNestedManyWithoutLinkingColumnsInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkingColumnsInput!]
  create: [ColumnCreateWithoutLinkingColumnsInput!]
}

input ColumnCreateNestedOneWithoutCardInput {
  connect: ColumnWhereUniqueInput
  connectOrCreate: ColumnCreateOrConnectWithoutCardInput
  create: ColumnUncheckedCreateWithoutCardInput
}

input ColumnCreateNestedOneWithoutFieldValueInput {
  connect: ColumnWhereUniqueInput
  connectOrCreate: ColumnCreateOrConnectWithoutFieldValueInput
  create: ColumnUncheckedCreateWithoutFieldValueInput
}

input ColumnCreateNestedOneWithoutMovementsFromInput {
  connect: ColumnWhereUniqueInput
  connectOrCreate: ColumnCreateOrConnectWithoutMovementsFromInput
  create: ColumnUncheckedCreateWithoutMovementsFromInput
}

input ColumnCreateNestedOneWithoutMovementsToInput {
  connect: ColumnWhereUniqueInput
  connectOrCreate: ColumnCreateOrConnectWithoutMovementsToInput
  create: ColumnUncheckedCreateWithoutMovementsToInput
}

input ColumnCreateOrConnectWithoutBoardInput {
  create: ColumnUncheckedCreateWithoutBoardInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutCardInput {
  create: ColumnUncheckedCreateWithoutCardInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutCreatedByUserInput {
  create: ColumnUncheckedCreateWithoutCreatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutFieldValueInput {
  create: ColumnUncheckedCreateWithoutFieldValueInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutLinkedColumnsInput {
  create: ColumnUncheckedCreateWithoutLinkedColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutLinkingColumnsInput {
  create: ColumnUncheckedCreateWithoutLinkingColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutMovementsFromInput {
  create: ColumnUncheckedCreateWithoutMovementsFromInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutMovementsToInput {
  create: ColumnUncheckedCreateWithoutMovementsToInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateOrConnectWithoutUpdatedByUserInput {
  create: ColumnUncheckedCreateWithoutUpdatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnCreateWithoutBoardInput {
  card: CardCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutColumnCreatedByInput
  fieldValue: FieldColumnCreateNestedManyWithoutColumnInput
  linkedColumns: ColumnCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutColumnUpdatedByInput
}

input ColumnCreateWithoutCreatedByUserInput {
  board: BoardCreateNestedOneWithoutColumnInput!
  card: CardCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  fieldValue: FieldColumnCreateNestedManyWithoutColumnInput
  linkedColumns: ColumnCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutColumnUpdatedByInput
}

input ColumnCreateWithoutLinkedColumnsInput {
  board: BoardCreateNestedOneWithoutColumnInput!
  card: CardCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutColumnCreatedByInput
  fieldValue: FieldColumnCreateNestedManyWithoutColumnInput
  linkingColumns: ColumnCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutColumnUpdatedByInput
}

input ColumnCreateWithoutLinkingColumnsInput {
  board: BoardCreateNestedOneWithoutColumnInput!
  card: CardCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutColumnCreatedByInput
  fieldValue: FieldColumnCreateNestedManyWithoutColumnInput
  linkedColumns: ColumnCreateNestedManyWithoutLinkingColumnsInput
  movementsFrom: CardMovementCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutColumnUpdatedByInput
}

input ColumnCreateWithoutUpdatedByUserInput {
  board: BoardCreateNestedOneWithoutColumnInput!
  card: CardCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutColumnCreatedByInput
  fieldValue: FieldColumnCreateNestedManyWithoutColumnInput
  linkedColumns: ColumnCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
}

type ColumnGroupBy {
  _avg: ColumnAvgAggregate
  _count: ColumnCountAggregate
  _max: ColumnMaxAggregate
  _min: ColumnMinAggregate
  _sum: ColumnSumAggregate
  boardId: String!
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  order: Int!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input ColumnListRelationFilter {
  every: ColumnWhereInput
  none: ColumnWhereInput
  some: ColumnWhereInput
}

type ColumnMaxAggregate {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  order: Int
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnMaxOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type ColumnMinAggregate {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  order: Int
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnMinOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  order: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ColumnOrderByRelationAggregateInput {
  _count: SortOrder
}

input ColumnOrderByWithAggregationInput {
  _avg: ColumnAvgOrderByAggregateInput
  _count: ColumnCountOrderByAggregateInput
  _max: ColumnMaxOrderByAggregateInput
  _min: ColumnMinOrderByAggregateInput
  _sum: ColumnSumOrderByAggregateInput
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  order: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input ColumnOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrder
  card: CardOrderByRelationAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  fieldValue: FieldColumnOrderByRelationAggregateInput
  id: SortOrder
  linkedColumns: ColumnOrderByRelationAggregateInput
  linkingColumns: ColumnOrderByRelationAggregateInput
  movementsFrom: CardMovementOrderByRelationAggregateInput
  movementsTo: CardMovementOrderByRelationAggregateInput
  order: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedByUser: UserOrderByWithRelationInput
}

input ColumnRelationFilter {
  is: ColumnWhereInput
  isNot: ColumnWhereInput
}

enum ColumnScalarFieldEnum {
  boardId
  createdAt
  createdBy
  id
  order
  title
  updatedAt
  updatedBy
}

input ColumnScalarWhereInput {
  AND: [ColumnScalarWhereInput!]
  NOT: [ColumnScalarWhereInput!]
  OR: [ColumnScalarWhereInput!]
  boardId: StringFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  order: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input ColumnScalarWhereWithAggregatesInput {
  AND: [ColumnScalarWhereWithAggregatesInput!]
  NOT: [ColumnScalarWhereWithAggregatesInput!]
  OR: [ColumnScalarWhereWithAggregatesInput!]
  boardId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  order: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type ColumnSumAggregate {
  id: Int
  order: Int
}

input ColumnSumOrderByAggregateInput {
  id: SortOrder
  order: SortOrder
}

input ColumnUncheckedCreateInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateNestedManyWithoutBoardInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutBoardInput!]
  create: [ColumnCreateWithoutBoardInput!]
  createMany: ColumnCreateManyBoardInputEnvelope
}

input ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutCreatedByUserInput!]
  create: [ColumnCreateWithoutCreatedByUserInput!]
  createMany: ColumnCreateManyCreatedByUserInputEnvelope
}

input ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkedColumnsInput!]
  create: [ColumnCreateWithoutLinkedColumnsInput!]
}

input ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkingColumnsInput!]
  create: [ColumnCreateWithoutLinkingColumnsInput!]
}

input ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ColumnCreateWithoutUpdatedByUserInput!]
  createMany: ColumnCreateManyUpdatedByUserInputEnvelope
}

input ColumnUncheckedCreateWithoutBoardInput {
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutCardInput {
  boardId: String!
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutCreatedByUserInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutFieldValueInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutLinkedColumnsInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutLinkingColumnsInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutMovementsFromInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutMovementsToInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ColumnUncheckedCreateWithoutUpdatedByUserInput {
  boardId: String!
  card: CardUncheckedCreateNestedManyWithoutColumnInput
  createdAt: DateTimeISO
  createdBy: String
  fieldValue: FieldColumnUncheckedCreateNestedManyWithoutColumnInput
  id: Int
  linkedColumns: ColumnUncheckedCreateNestedManyWithoutLinkingColumnsInput
  linkingColumns: ColumnUncheckedCreateNestedManyWithoutLinkedColumnsInput
  movementsFrom: CardMovementUncheckedCreateNestedManyWithoutFromColumnInput
  movementsTo: CardMovementUncheckedCreateNestedManyWithoutToColumnInput
  order: Int!
  title: String!
  updatedAt: DateTimeISO
}

input ColumnUncheckedUpdateInput {
  boardId: StringFieldUpdateOperationsInput
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkedColumns: ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput
  linkingColumns: ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutBoardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutBoardInput!]
  create: [ColumnCreateWithoutBoardInput!]
  createMany: ColumnCreateManyBoardInputEnvelope
  delete: [ColumnWhereUniqueInput!]
  deleteMany: [ColumnScalarWhereInput!]
  disconnect: [ColumnWhereUniqueInput!]
  set: [ColumnWhereUniqueInput!]
  update: [ColumnUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [ColumnUpdateManyWithWhereWithoutBoardInput!]
  upsert: [ColumnUpsertWithWhereUniqueWithoutBoardInput!]
}

input ColumnUncheckedUpdateManyWithoutCreatedByUserInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutCreatedByUserInput!]
  create: [ColumnCreateWithoutCreatedByUserInput!]
  createMany: ColumnCreateManyCreatedByUserInputEnvelope
  delete: [ColumnWhereUniqueInput!]
  deleteMany: [ColumnScalarWhereInput!]
  disconnect: [ColumnWhereUniqueInput!]
  set: [ColumnWhereUniqueInput!]
  update: [ColumnUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [ColumnUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [ColumnUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input ColumnUncheckedUpdateManyWithoutLinkedColumnsInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkedColumnsInput!]
  create: [ColumnCreateWithoutLinkedColumnsInput!]
  delete: [ColumnWhereUniqueInput!]
  deleteMany: [ColumnScalarWhereInput!]
  disconnect: [ColumnWhereUniqueInput!]
  set: [ColumnWhereUniqueInput!]
  update: [ColumnUpdateWithWhereUniqueWithoutLinkedColumnsInput!]
  updateMany: [ColumnUpdateManyWithWhereWithoutLinkedColumnsInput!]
  upsert: [ColumnUpsertWithWhereUniqueWithoutLinkedColumnsInput!]
}

input ColumnUncheckedUpdateManyWithoutLinkingColumnsInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutLinkingColumnsInput!]
  create: [ColumnCreateWithoutLinkingColumnsInput!]
  delete: [ColumnWhereUniqueInput!]
  deleteMany: [ColumnScalarWhereInput!]
  disconnect: [ColumnWhereUniqueInput!]
  set: [ColumnWhereUniqueInput!]
  update: [ColumnUpdateWithWhereUniqueWithoutLinkingColumnsInput!]
  updateMany: [ColumnUpdateManyWithWhereWithoutLinkingColumnsInput!]
  upsert: [ColumnUpsertWithWhereUniqueWithoutLinkingColumnsInput!]
}

input ColumnUncheckedUpdateManyWithoutUpdatedByUserInput {
  boardId: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [ColumnWhereUniqueInput!]
  connectOrCreate: [ColumnCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ColumnCreateWithoutUpdatedByUserInput!]
  createMany: ColumnCreateManyUpdatedByUserInputEnvelope
  delete: [ColumnWhereUniqueInput!]
  deleteMany: [ColumnScalarWhereInput!]
  disconnect: [ColumnWhereUniqueInput!]
  set: [ColumnWhereUniqueInput!]
  update: [ColumnUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [ColumnUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [ColumnUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input ColumnUncheckedUpdateWithoutBoardInput {
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkedColumns: ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput
  linkingColumns: ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateWithoutCreatedByUserInput {
  boardId: StringFieldUpdateOperationsInput
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkedColumns: ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput
  linkingColumns: ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateWithoutLinkedColumnsInput {
  boardId: StringFieldUpdateOperationsInput
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkingColumns: ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateWithoutLinkingColumnsInput {
  boardId: StringFieldUpdateOperationsInput
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkedColumns: ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ColumnUncheckedUpdateWithoutUpdatedByUserInput {
  boardId: StringFieldUpdateOperationsInput
  card: CardUncheckedUpdateManyWithoutColumnNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldValue: FieldColumnUncheckedUpdateManyWithoutColumnNestedInput
  id: IntFieldUpdateOperationsInput
  linkedColumns: ColumnUncheckedUpdateManyWithoutLinkingColumnsNestedInput
  linkingColumns: ColumnUncheckedUpdateManyWithoutLinkedColumnsNestedInput
  movementsFrom: CardMovementUncheckedUpdateManyWithoutFromColumnNestedInput
  movementsTo: CardMovementUncheckedUpdateManyWithoutToColumnNestedInput
  order: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ColumnUpdateManyWithWhereWithoutBoardInput {
  data: ColumnUncheckedUpdateManyWithoutBoardInput!
  where: ColumnScalarWhereInput!
}

input ColumnUpdateManyWithWhereWithoutCreatedByUserInput {
  data: ColumnUncheckedUpdateManyWithoutCreatedByUserInput!
  where: ColumnScalarWhereInput!
}

input ColumnUpdateManyWithWhereWithoutLinkedColumnsInput {
  data: ColumnUncheckedUpdateManyWithoutLinkedColumnsInput!
  where: ColumnScalarWhereInput!
}

input ColumnUpdateManyWithWhereWithoutLinkingColumnsInput {
  data: ColumnUncheckedUpdateManyWithoutLinkingColumnsInput!
  where: ColumnScalarWhereInput!
}

input ColumnUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: ColumnUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: ColumnScalarWhereInput!
}

input ColumnUpdateWithWhereUniqueWithoutBoardInput {
  data: ColumnUncheckedUpdateWithoutBoardInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: ColumnUncheckedUpdateWithoutCreatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpdateWithWhereUniqueWithoutLinkedColumnsInput {
  data: ColumnUncheckedUpdateWithoutLinkedColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpdateWithWhereUniqueWithoutLinkingColumnsInput {
  data: ColumnUncheckedUpdateWithoutLinkingColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: ColumnUncheckedUpdateWithoutUpdatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpsertWithWhereUniqueWithoutBoardInput {
  create: ColumnUncheckedCreateWithoutBoardInput!
  update: ColumnUncheckedUpdateWithoutBoardInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: ColumnUncheckedCreateWithoutCreatedByUserInput!
  update: ColumnUncheckedUpdateWithoutCreatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpsertWithWhereUniqueWithoutLinkedColumnsInput {
  create: ColumnUncheckedCreateWithoutLinkedColumnsInput!
  update: ColumnUncheckedUpdateWithoutLinkedColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpsertWithWhereUniqueWithoutLinkingColumnsInput {
  create: ColumnUncheckedCreateWithoutLinkingColumnsInput!
  update: ColumnUncheckedUpdateWithoutLinkingColumnsInput!
  where: ColumnWhereUniqueInput!
}

input ColumnUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: ColumnUncheckedCreateWithoutUpdatedByUserInput!
  update: ColumnUncheckedUpdateWithoutUpdatedByUserInput!
  where: ColumnWhereUniqueInput!
}

input ColumnWhereInput {
  AND: [ColumnWhereInput!]
  NOT: [ColumnWhereInput!]
  OR: [ColumnWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  card: CardListRelationFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  fieldValue: FieldColumnListRelationFilter
  id: IntFilter
  linkedColumns: ColumnListRelationFilter
  linkingColumns: ColumnListRelationFilter
  movementsFrom: CardMovementListRelationFilter
  movementsTo: CardMovementListRelationFilter
  order: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

input ColumnWhereUniqueInput {
  AND: [ColumnWhereInput!]
  NOT: [ColumnWhereInput!]
  OR: [ColumnWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  card: CardListRelationFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  fieldValue: FieldColumnListRelationFilter
  id: Int
  linkedColumns: ColumnListRelationFilter
  linkingColumns: ColumnListRelationFilter
  movementsFrom: CardMovementListRelationFilter
  movementsTo: CardMovementListRelationFilter
  order: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
}

type CommentProject {
  comments: JSON!
  createdAt: DateTimeISO!
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int!
  project: Project!
  projectId: Int!
  updatedAt: DateTimeISO!
  user: User!
}

type CommentProjectAvgAggregate {
  id: Float
  projectId: Float
}

input CommentProjectAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type CommentProjectCountAggregate {
  _all: Int!
  comments: Int!
  createdAt: Int!
  createdBy: Int!
  flag: Int!
  id: Int!
  projectId: Int!
  updatedAt: Int!
}

input CommentProjectCountOrderByAggregateInput {
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
}

input CommentProjectCreateManyInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int
  projectId: Int!
  updatedAt: DateTimeISO
}

input CommentProjectCreateManyProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int
  updatedAt: DateTimeISO
}

input CommentProjectCreateManyProjectInputEnvelope {
  data: [CommentProjectCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input CommentProjectCreateManyUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  flag: typeFlagsCommentProject!
  id: Int
  projectId: Int!
  updatedAt: DateTimeISO
}

input CommentProjectCreateManyUserInputEnvelope {
  data: [CommentProjectCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input CommentProjectCreateNestedManyWithoutProjectInput {
  connect: [CommentProjectWhereUniqueInput!]
  connectOrCreate: [CommentProjectCreateOrConnectWithoutProjectInput!]
  create: [CommentProjectCreateWithoutProjectInput!]
  createMany: CommentProjectCreateManyProjectInputEnvelope
}

input CommentProjectCreateOrConnectWithoutProjectInput {
  create: CommentProjectUncheckedCreateWithoutProjectInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectCreateOrConnectWithoutUserInput {
  create: CommentProjectUncheckedCreateWithoutUserInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectCreateWithoutProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  flag: typeFlagsCommentProject!
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutCommentProjectsInput!
}

input CommentProjectCreateWithoutUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  flag: typeFlagsCommentProject!
  project: ProjectCreateNestedOneWithoutCommentProjectInput!
  updatedAt: DateTimeISO
}

type CommentProjectGroupBy {
  _avg: CommentProjectAvgAggregate
  _count: CommentProjectCountAggregate
  _max: CommentProjectMaxAggregate
  _min: CommentProjectMinAggregate
  _sum: CommentProjectSumAggregate
  comments: JSON!
  createdAt: DateTimeISO!
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int!
  projectId: Int!
  updatedAt: DateTimeISO!
}

input CommentProjectListRelationFilter {
  every: CommentProjectWhereInput
  none: CommentProjectWhereInput
  some: CommentProjectWhereInput
}

type CommentProjectMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  flag: typeFlagsCommentProject
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
}

input CommentProjectMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
}

type CommentProjectMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  flag: typeFlagsCommentProject
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
}

input CommentProjectMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
}

input CommentProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input CommentProjectOrderByWithAggregationInput {
  _avg: CommentProjectAvgOrderByAggregateInput
  _count: CommentProjectCountOrderByAggregateInput
  _max: CommentProjectMaxOrderByAggregateInput
  _min: CommentProjectMinOrderByAggregateInput
  _sum: CommentProjectSumOrderByAggregateInput
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
}

input CommentProjectOrderByWithRelationInput {
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
}

enum CommentProjectScalarFieldEnum {
  comments
  createdAt
  createdBy
  flag
  id
  projectId
  updatedAt
}

input CommentProjectScalarWhereInput {
  AND: [CommentProjectScalarWhereInput!]
  NOT: [CommentProjectScalarWhereInput!]
  OR: [CommentProjectScalarWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  flag: EnumtypeFlagsCommentProjectFilter
  id: IntFilter
  projectId: IntFilter
  updatedAt: DateTimeFilter
}

input CommentProjectScalarWhereWithAggregatesInput {
  AND: [CommentProjectScalarWhereWithAggregatesInput!]
  NOT: [CommentProjectScalarWhereWithAggregatesInput!]
  OR: [CommentProjectScalarWhereWithAggregatesInput!]
  comments: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidWithAggregatesFilter
  flag: EnumtypeFlagsCommentProjectWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type CommentProjectSumAggregate {
  id: Int
  projectId: Int
}

input CommentProjectSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input CommentProjectUncheckedCreateInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int
  projectId: Int!
  updatedAt: DateTimeISO
}

input CommentProjectUncheckedCreateNestedManyWithoutProjectInput {
  connect: [CommentProjectWhereUniqueInput!]
  connectOrCreate: [CommentProjectCreateOrConnectWithoutProjectInput!]
  create: [CommentProjectCreateWithoutProjectInput!]
  createMany: CommentProjectCreateManyProjectInputEnvelope
}

input CommentProjectUncheckedCreateNestedManyWithoutUserInput {
  connect: [CommentProjectWhereUniqueInput!]
  connectOrCreate: [CommentProjectCreateOrConnectWithoutUserInput!]
  create: [CommentProjectCreateWithoutUserInput!]
  createMany: CommentProjectCreateManyUserInputEnvelope
}

input CommentProjectUncheckedCreateWithoutProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  flag: typeFlagsCommentProject!
  id: Int
  updatedAt: DateTimeISO
}

input CommentProjectUncheckedCreateWithoutUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  flag: typeFlagsCommentProject!
  id: Int
  projectId: Int!
  updatedAt: DateTimeISO
}

input CommentProjectUncheckedUpdateInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUncheckedUpdateManyInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUncheckedUpdateManyWithoutProjectInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [CommentProjectWhereUniqueInput!]
  connectOrCreate: [CommentProjectCreateOrConnectWithoutProjectInput!]
  create: [CommentProjectCreateWithoutProjectInput!]
  createMany: CommentProjectCreateManyProjectInputEnvelope
  delete: [CommentProjectWhereUniqueInput!]
  deleteMany: [CommentProjectScalarWhereInput!]
  disconnect: [CommentProjectWhereUniqueInput!]
  set: [CommentProjectWhereUniqueInput!]
  update: [CommentProjectUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [CommentProjectUpdateManyWithWhereWithoutProjectInput!]
  upsert: [CommentProjectUpsertWithWhereUniqueWithoutProjectInput!]
}

input CommentProjectUncheckedUpdateManyWithoutUserInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUncheckedUpdateManyWithoutUserNestedInput {
  connect: [CommentProjectWhereUniqueInput!]
  connectOrCreate: [CommentProjectCreateOrConnectWithoutUserInput!]
  create: [CommentProjectCreateWithoutUserInput!]
  createMany: CommentProjectCreateManyUserInputEnvelope
  delete: [CommentProjectWhereUniqueInput!]
  deleteMany: [CommentProjectScalarWhereInput!]
  disconnect: [CommentProjectWhereUniqueInput!]
  set: [CommentProjectWhereUniqueInput!]
  update: [CommentProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentProjectUpdateManyWithWhereWithoutUserInput!]
  upsert: [CommentProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentProjectUncheckedUpdateWithoutProjectInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUncheckedUpdateWithoutUserInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  flag: EnumtypeFlagsCommentProjectFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentProjectUpdateManyWithWhereWithoutProjectInput {
  data: CommentProjectUncheckedUpdateManyWithoutProjectInput!
  where: CommentProjectScalarWhereInput!
}

input CommentProjectUpdateManyWithWhereWithoutUserInput {
  data: CommentProjectUncheckedUpdateManyWithoutUserInput!
  where: CommentProjectScalarWhereInput!
}

input CommentProjectUpdateWithWhereUniqueWithoutProjectInput {
  data: CommentProjectUncheckedUpdateWithoutProjectInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectUpdateWithWhereUniqueWithoutUserInput {
  data: CommentProjectUncheckedUpdateWithoutUserInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectUpsertWithWhereUniqueWithoutProjectInput {
  create: CommentProjectUncheckedCreateWithoutProjectInput!
  update: CommentProjectUncheckedUpdateWithoutProjectInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectUpsertWithWhereUniqueWithoutUserInput {
  create: CommentProjectUncheckedCreateWithoutUserInput!
  update: CommentProjectUncheckedUpdateWithoutUserInput!
  where: CommentProjectWhereUniqueInput!
}

input CommentProjectWhereInput {
  AND: [CommentProjectWhereInput!]
  NOT: [CommentProjectWhereInput!]
  OR: [CommentProjectWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  flag: EnumtypeFlagsCommentProjectFilter
  id: IntFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
}

input CommentProjectWhereUniqueInput {
  AND: [CommentProjectWhereInput!]
  NOT: [CommentProjectWhereInput!]
  OR: [CommentProjectWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  flag: EnumtypeFlagsCommentProjectFilter
  id: Int
  project: ProjectRelationFilter
  projectId: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
}

type Csat {
  client: Client!
  clientId: Int!
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
}

type CsatAvgAggregate {
  clientId: Float
  id: Float
}

input CsatAvgOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

type CsatCountAggregate {
  _all: Int!
  clientId: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
}

input CsatCountOrderByAggregateInput {
  clientId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CsatCreateManyClientInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatCreateManyClientInputEnvelope {
  data: [CsatCreateManyClientInput!]!
  skipDuplicates: Boolean
}

input CsatCreateManyInput {
  clientId: Int!
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatCreateNestedManyWithoutClientInput {
  connect: [CsatWhereUniqueInput!]
  connectOrCreate: [CsatCreateOrConnectWithoutClientInput!]
  create: [CsatCreateWithoutClientInput!]
  createMany: CsatCreateManyClientInputEnvelope
}

input CsatCreateOrConnectWithoutClientInput {
  create: CsatUncheckedCreateWithoutClientInput!
  where: CsatWhereUniqueInput!
}

input CsatCreateWithoutClientInput {
  content: JSON!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type CsatGroupBy {
  _avg: CsatAvgAggregate
  _count: CsatCountAggregate
  _max: CsatMaxAggregate
  _min: CsatMinAggregate
  _sum: CsatSumAggregate
  clientId: Int!
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
}

input CsatListRelationFilter {
  every: CsatWhereInput
  none: CsatWhereInput
  some: CsatWhereInput
}

type CsatMaxAggregate {
  clientId: Int
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatMaxOrderByAggregateInput {
  clientId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

type CsatMinAggregate {
  clientId: Int
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatMinOrderByAggregateInput {
  clientId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CsatOrderByRelationAggregateInput {
  _count: SortOrder
}

input CsatOrderByWithAggregationInput {
  _avg: CsatAvgOrderByAggregateInput
  _count: CsatCountOrderByAggregateInput
  _max: CsatMaxOrderByAggregateInput
  _min: CsatMinOrderByAggregateInput
  _sum: CsatSumOrderByAggregateInput
  clientId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input CsatOrderByWithRelationInput {
  client: ClientOrderByWithRelationInput
  clientId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum CsatScalarFieldEnum {
  clientId
  content
  createdAt
  id
  updatedAt
}

input CsatScalarWhereInput {
  AND: [CsatScalarWhereInput!]
  NOT: [CsatScalarWhereInput!]
  OR: [CsatScalarWhereInput!]
  clientId: IntFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input CsatScalarWhereWithAggregatesInput {
  AND: [CsatScalarWhereWithAggregatesInput!]
  NOT: [CsatScalarWhereWithAggregatesInput!]
  OR: [CsatScalarWhereWithAggregatesInput!]
  clientId: IntWithAggregatesFilter
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type CsatSumAggregate {
  clientId: Int
  id: Int
}

input CsatSumOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

input CsatUncheckedCreateInput {
  clientId: Int!
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatUncheckedCreateNestedManyWithoutClientInput {
  connect: [CsatWhereUniqueInput!]
  connectOrCreate: [CsatCreateOrConnectWithoutClientInput!]
  create: [CsatCreateWithoutClientInput!]
  createMany: CsatCreateManyClientInputEnvelope
}

input CsatUncheckedCreateWithoutClientInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input CsatUncheckedUpdateInput {
  clientId: IntFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CsatUncheckedUpdateManyInput {
  clientId: IntFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CsatUncheckedUpdateManyWithoutClientInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CsatUncheckedUpdateManyWithoutClientNestedInput {
  connect: [CsatWhereUniqueInput!]
  connectOrCreate: [CsatCreateOrConnectWithoutClientInput!]
  create: [CsatCreateWithoutClientInput!]
  createMany: CsatCreateManyClientInputEnvelope
  delete: [CsatWhereUniqueInput!]
  deleteMany: [CsatScalarWhereInput!]
  disconnect: [CsatWhereUniqueInput!]
  set: [CsatWhereUniqueInput!]
  update: [CsatUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [CsatUpdateManyWithWhereWithoutClientInput!]
  upsert: [CsatUpsertWithWhereUniqueWithoutClientInput!]
}

input CsatUncheckedUpdateWithoutClientInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CsatUpdateManyWithWhereWithoutClientInput {
  data: CsatUncheckedUpdateManyWithoutClientInput!
  where: CsatScalarWhereInput!
}

input CsatUpdateWithWhereUniqueWithoutClientInput {
  data: CsatUncheckedUpdateWithoutClientInput!
  where: CsatWhereUniqueInput!
}

input CsatUpsertWithWhereUniqueWithoutClientInput {
  create: CsatUncheckedCreateWithoutClientInput!
  update: CsatUncheckedUpdateWithoutClientInput!
  where: CsatWhereUniqueInput!
}

input CsatWhereInput {
  AND: [CsatWhereInput!]
  NOT: [CsatWhereInput!]
  OR: [CsatWhereInput!]
  client: ClientRelationFilter
  clientId: IntFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input CsatWhereUniqueInput {
  AND: [CsatWhereInput!]
  NOT: [CsatWhereInput!]
  OR: [CsatWhereInput!]
  client: ClientRelationFilter
  clientId: IntFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTimeISO
}

input DateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input DateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input EnumFieldFlagsFieldUpdateOperationsInput {
  set: FieldFlags
}

input EnumFieldFlagsFilter {
  equals: FieldFlags
  in: [FieldFlags!]
  not: NestedEnumFieldFlagsFilter
  notIn: [FieldFlags!]
}

input EnumFieldFlagsWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldFlagsFilter
  _min: NestedEnumFieldFlagsFilter
  equals: FieldFlags
  in: [FieldFlags!]
  not: NestedEnumFieldFlagsWithAggregatesFilter
  notIn: [FieldFlags!]
}

input EnumFieldStepsFieldUpdateOperationsInput {
  set: FieldSteps
}

input EnumFieldStepsFilter {
  equals: FieldSteps
  in: [FieldSteps!]
  not: NestedEnumFieldStepsFilter
  notIn: [FieldSteps!]
}

input EnumFieldStepsWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldStepsFilter
  _min: NestedEnumFieldStepsFilter
  equals: FieldSteps
  in: [FieldSteps!]
  not: NestedEnumFieldStepsWithAggregatesFilter
  notIn: [FieldSteps!]
}

input EnumFieldTypeFieldUpdateOperationsInput {
  set: FieldType
}

input EnumFieldTypeFilter {
  equals: FieldType
  in: [FieldType!]
  not: NestedEnumFieldTypeFilter
  notIn: [FieldType!]
}

input EnumFieldTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldTypeFilter
  _min: NestedEnumFieldTypeFilter
  equals: FieldType
  in: [FieldType!]
  not: NestedEnumFieldTypeWithAggregatesFilter
  notIn: [FieldType!]
}

input EnumTypeServiceFieldUpdateOperationsInput {
  set: TypeService
}

input EnumTypeServiceFilter {
  equals: TypeService
  in: [TypeService!]
  not: NestedEnumTypeServiceFilter
  notIn: [TypeService!]
}

input EnumTypeServiceWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTypeServiceFilter
  _min: NestedEnumTypeServiceFilter
  equals: TypeService
  in: [TypeService!]
  not: NestedEnumTypeServiceWithAggregatesFilter
  notIn: [TypeService!]
}

input EnumroleFieldUpdateOperationsInput {
  set: role
}

input EnumroleFilter {
  equals: role
  in: [role!]
  not: NestedEnumroleFilter
  notIn: [role!]
}

input EnumroleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumroleFilter
  _min: NestedEnumroleFilter
  equals: role
  in: [role!]
  not: NestedEnumroleWithAggregatesFilter
  notIn: [role!]
}

input EnumtypeFileFieldUpdateOperationsInput {
  set: typeFile
}

input EnumtypeFileFilter {
  equals: typeFile
  in: [typeFile!]
  not: NestedEnumtypeFileFilter
  notIn: [typeFile!]
}

input EnumtypeFileWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeFileFilter
  _min: NestedEnumtypeFileFilter
  equals: typeFile
  in: [typeFile!]
  not: NestedEnumtypeFileWithAggregatesFilter
  notIn: [typeFile!]
}

input EnumtypeFlagsCommentProjectFieldUpdateOperationsInput {
  set: typeFlagsCommentProject
}

input EnumtypeFlagsCommentProjectFilter {
  equals: typeFlagsCommentProject
  in: [typeFlagsCommentProject!]
  not: NestedEnumtypeFlagsCommentProjectFilter
  notIn: [typeFlagsCommentProject!]
}

input EnumtypeFlagsCommentProjectWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeFlagsCommentProjectFilter
  _min: NestedEnumtypeFlagsCommentProjectFilter
  equals: typeFlagsCommentProject
  in: [typeFlagsCommentProject!]
  not: NestedEnumtypeFlagsCommentProjectWithAggregatesFilter
  notIn: [typeFlagsCommentProject!]
}

input EnumtypeNotfyFieldUpdateOperationsInput {
  set: typeNotfy
}

input EnumtypeNotfyFilter {
  equals: typeNotfy
  in: [typeNotfy!]
  not: NestedEnumtypeNotfyFilter
  notIn: [typeNotfy!]
}

input EnumtypeNotfyWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeNotfyFilter
  _min: NestedEnumtypeNotfyFilter
  equals: typeNotfy
  in: [typeNotfy!]
  not: NestedEnumtypeNotfyWithAggregatesFilter
  notIn: [typeNotfy!]
}

input EnumtypeUserFieldUpdateOperationsInput {
  set: typeUser
}

input EnumtypeUserFilter {
  equals: typeUser
  in: [typeUser!]
  not: NestedEnumtypeUserFilter
  notIn: [typeUser!]
}

input EnumtypeUserWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeUserFilter
  _min: NestedEnumtypeUserFilter
  equals: typeUser
  in: [typeUser!]
  not: NestedEnumtypeUserWithAggregatesFilter
  notIn: [typeUser!]
}

type Field {
  FieldsValue(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): [FieldsValue!]!
  _count: FieldCount
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  createdUser(where: UserWhereInput): User
  description: String!
  fieldColumn(cursor: FieldColumnWhereUniqueInput, distinct: [FieldColumnScalarFieldEnum!], orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): [FieldColumn!]!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int!
  name: String!
  order: Int!
  primitive: PrimitiveFields!
  required: Boolean!
  showInCard: Boolean!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedUser(where: UserWhereInput): User
}

type FieldAvgAggregate {
  fieldValueId: Float
  id: Float
  order: Float
}

input FieldAvgOrderByAggregateInput {
  fieldValueId: SortOrder
  id: SortOrder
  order: SortOrder
}

type FieldColumn {
  column: Column!
  columnId: Int!
  fieldColumn: Field!
  fieldColumnId: Int!
}

type FieldColumnAvgAggregate {
  columnId: Float
  fieldColumnId: Float
}

input FieldColumnAvgOrderByAggregateInput {
  columnId: SortOrder
  fieldColumnId: SortOrder
}

input FieldColumnColumnIdFieldColumnIdCompoundUniqueInput {
  columnId: Int!
  fieldColumnId: Int!
}

type FieldColumnCountAggregate {
  _all: Int!
  columnId: Int!
  fieldColumnId: Int!
}

input FieldColumnCountOrderByAggregateInput {
  columnId: SortOrder
  fieldColumnId: SortOrder
}

input FieldColumnCreateManyColumnInput {
  fieldColumnId: Int!
}

input FieldColumnCreateManyColumnInputEnvelope {
  data: [FieldColumnCreateManyColumnInput!]!
  skipDuplicates: Boolean
}

input FieldColumnCreateManyFieldColumnInput {
  columnId: Int!
}

input FieldColumnCreateManyFieldColumnInputEnvelope {
  data: [FieldColumnCreateManyFieldColumnInput!]!
  skipDuplicates: Boolean
}

input FieldColumnCreateManyInput {
  columnId: Int!
  fieldColumnId: Int!
}

input FieldColumnCreateNestedManyWithoutColumnInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutColumnInput!]
  create: [FieldColumnCreateWithoutColumnInput!]
  createMany: FieldColumnCreateManyColumnInputEnvelope
}

input FieldColumnCreateNestedManyWithoutFieldColumnInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutFieldColumnInput!]
  create: [FieldColumnCreateWithoutFieldColumnInput!]
  createMany: FieldColumnCreateManyFieldColumnInputEnvelope
}

input FieldColumnCreateOrConnectWithoutColumnInput {
  create: FieldColumnUncheckedCreateWithoutColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnCreateOrConnectWithoutFieldColumnInput {
  create: FieldColumnUncheckedCreateWithoutFieldColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnCreateWithoutColumnInput {
  fieldColumn: FieldCreateNestedOneWithoutFieldColumnInput!
}

input FieldColumnCreateWithoutFieldColumnInput {
  column: ColumnCreateNestedOneWithoutFieldValueInput!
}

type FieldColumnGroupBy {
  _avg: FieldColumnAvgAggregate
  _count: FieldColumnCountAggregate
  _max: FieldColumnMaxAggregate
  _min: FieldColumnMinAggregate
  _sum: FieldColumnSumAggregate
  columnId: Int!
  fieldColumnId: Int!
}

input FieldColumnListRelationFilter {
  every: FieldColumnWhereInput
  none: FieldColumnWhereInput
  some: FieldColumnWhereInput
}

type FieldColumnMaxAggregate {
  columnId: Int
  fieldColumnId: Int
}

input FieldColumnMaxOrderByAggregateInput {
  columnId: SortOrder
  fieldColumnId: SortOrder
}

type FieldColumnMinAggregate {
  columnId: Int
  fieldColumnId: Int
}

input FieldColumnMinOrderByAggregateInput {
  columnId: SortOrder
  fieldColumnId: SortOrder
}

input FieldColumnOrderByRelationAggregateInput {
  _count: SortOrder
}

input FieldColumnOrderByWithAggregationInput {
  _avg: FieldColumnAvgOrderByAggregateInput
  _count: FieldColumnCountOrderByAggregateInput
  _max: FieldColumnMaxOrderByAggregateInput
  _min: FieldColumnMinOrderByAggregateInput
  _sum: FieldColumnSumOrderByAggregateInput
  columnId: SortOrder
  fieldColumnId: SortOrder
}

input FieldColumnOrderByWithRelationInput {
  column: ColumnOrderByWithRelationInput
  columnId: SortOrder
  fieldColumn: FieldOrderByWithRelationInput
  fieldColumnId: SortOrder
}

enum FieldColumnScalarFieldEnum {
  columnId
  fieldColumnId
}

input FieldColumnScalarWhereInput {
  AND: [FieldColumnScalarWhereInput!]
  NOT: [FieldColumnScalarWhereInput!]
  OR: [FieldColumnScalarWhereInput!]
  columnId: IntFilter
  fieldColumnId: IntFilter
}

input FieldColumnScalarWhereWithAggregatesInput {
  AND: [FieldColumnScalarWhereWithAggregatesInput!]
  NOT: [FieldColumnScalarWhereWithAggregatesInput!]
  OR: [FieldColumnScalarWhereWithAggregatesInput!]
  columnId: IntWithAggregatesFilter
  fieldColumnId: IntWithAggregatesFilter
}

type FieldColumnSumAggregate {
  columnId: Int
  fieldColumnId: Int
}

input FieldColumnSumOrderByAggregateInput {
  columnId: SortOrder
  fieldColumnId: SortOrder
}

input FieldColumnUncheckedCreateInput {
  columnId: Int!
  fieldColumnId: Int!
}

input FieldColumnUncheckedCreateNestedManyWithoutColumnInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutColumnInput!]
  create: [FieldColumnCreateWithoutColumnInput!]
  createMany: FieldColumnCreateManyColumnInputEnvelope
}

input FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutFieldColumnInput!]
  create: [FieldColumnCreateWithoutFieldColumnInput!]
  createMany: FieldColumnCreateManyFieldColumnInputEnvelope
}

input FieldColumnUncheckedCreateWithoutColumnInput {
  fieldColumnId: Int!
}

input FieldColumnUncheckedCreateWithoutFieldColumnInput {
  columnId: Int!
}

input FieldColumnUncheckedUpdateInput {
  columnId: IntFieldUpdateOperationsInput
  fieldColumnId: IntFieldUpdateOperationsInput
}

input FieldColumnUncheckedUpdateManyInput {
  columnId: IntFieldUpdateOperationsInput
  fieldColumnId: IntFieldUpdateOperationsInput
}

input FieldColumnUncheckedUpdateManyWithoutColumnInput {
  fieldColumnId: IntFieldUpdateOperationsInput
}

input FieldColumnUncheckedUpdateManyWithoutColumnNestedInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutColumnInput!]
  create: [FieldColumnCreateWithoutColumnInput!]
  createMany: FieldColumnCreateManyColumnInputEnvelope
  delete: [FieldColumnWhereUniqueInput!]
  deleteMany: [FieldColumnScalarWhereInput!]
  disconnect: [FieldColumnWhereUniqueInput!]
  set: [FieldColumnWhereUniqueInput!]
  update: [FieldColumnUpdateWithWhereUniqueWithoutColumnInput!]
  updateMany: [FieldColumnUpdateManyWithWhereWithoutColumnInput!]
  upsert: [FieldColumnUpsertWithWhereUniqueWithoutColumnInput!]
}

input FieldColumnUncheckedUpdateManyWithoutFieldColumnInput {
  columnId: IntFieldUpdateOperationsInput
}

input FieldColumnUncheckedUpdateManyWithoutFieldColumnNestedInput {
  connect: [FieldColumnWhereUniqueInput!]
  connectOrCreate: [FieldColumnCreateOrConnectWithoutFieldColumnInput!]
  create: [FieldColumnCreateWithoutFieldColumnInput!]
  createMany: FieldColumnCreateManyFieldColumnInputEnvelope
  delete: [FieldColumnWhereUniqueInput!]
  deleteMany: [FieldColumnScalarWhereInput!]
  disconnect: [FieldColumnWhereUniqueInput!]
  set: [FieldColumnWhereUniqueInput!]
  update: [FieldColumnUpdateWithWhereUniqueWithoutFieldColumnInput!]
  updateMany: [FieldColumnUpdateManyWithWhereWithoutFieldColumnInput!]
  upsert: [FieldColumnUpsertWithWhereUniqueWithoutFieldColumnInput!]
}

input FieldColumnUncheckedUpdateWithoutColumnInput {
  fieldColumnId: IntFieldUpdateOperationsInput
}

input FieldColumnUncheckedUpdateWithoutFieldColumnInput {
  columnId: IntFieldUpdateOperationsInput
}

input FieldColumnUpdateManyWithWhereWithoutColumnInput {
  data: FieldColumnUncheckedUpdateManyWithoutColumnInput!
  where: FieldColumnScalarWhereInput!
}

input FieldColumnUpdateManyWithWhereWithoutFieldColumnInput {
  data: FieldColumnUncheckedUpdateManyWithoutFieldColumnInput!
  where: FieldColumnScalarWhereInput!
}

input FieldColumnUpdateWithWhereUniqueWithoutColumnInput {
  data: FieldColumnUncheckedUpdateWithoutColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnUpdateWithWhereUniqueWithoutFieldColumnInput {
  data: FieldColumnUncheckedUpdateWithoutFieldColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnUpsertWithWhereUniqueWithoutColumnInput {
  create: FieldColumnUncheckedCreateWithoutColumnInput!
  update: FieldColumnUncheckedUpdateWithoutColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnUpsertWithWhereUniqueWithoutFieldColumnInput {
  create: FieldColumnUncheckedCreateWithoutFieldColumnInput!
  update: FieldColumnUncheckedUpdateWithoutFieldColumnInput!
  where: FieldColumnWhereUniqueInput!
}

input FieldColumnWhereInput {
  AND: [FieldColumnWhereInput!]
  NOT: [FieldColumnWhereInput!]
  OR: [FieldColumnWhereInput!]
  column: ColumnRelationFilter
  columnId: IntFilter
  fieldColumn: FieldRelationFilter
  fieldColumnId: IntFilter
}

input FieldColumnWhereUniqueInput {
  AND: [FieldColumnWhereInput!]
  NOT: [FieldColumnWhereInput!]
  OR: [FieldColumnWhereInput!]
  column: ColumnRelationFilter
  columnId: IntFilter
  columnId_fieldColumnId: FieldColumnColumnIdFieldColumnIdCompoundUniqueInput
  fieldColumn: FieldRelationFilter
  fieldColumnId: IntFilter
}

type FieldCount {
  FieldsValue(where: FieldsValueWhereInput): Int!
  fieldColumn(where: FieldColumnWhereInput): Int!
}

type FieldCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  createdBy: Int!
  description: Int!
  fieldType: Int!
  fieldValueId: Int!
  id: Int!
  name: Int!
  order: Int!
  required: Int!
  showInCard: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input FieldCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  fieldType: SortOrder
  fieldValueId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  showInCard: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input FieldCreateManyCreatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  description: String!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldCreateManyCreatedUserInputEnvelope {
  data: [FieldCreateManyCreatedUserInput!]!
  skipDuplicates: Boolean
}

input FieldCreateManyInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldCreateManyPrimitiveInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldType: FieldType!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldCreateManyPrimitiveInputEnvelope {
  data: [FieldCreateManyPrimitiveInput!]!
  skipDuplicates: Boolean
}

input FieldCreateManyUpdatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
}

input FieldCreateManyUpdatedUserInputEnvelope {
  data: [FieldCreateManyUpdatedUserInput!]!
  skipDuplicates: Boolean
}

input FieldCreateNestedOneWithoutFieldColumnInput {
  connect: FieldWhereUniqueInput
  connectOrCreate: FieldCreateOrConnectWithoutFieldColumnInput
  create: FieldUncheckedCreateWithoutFieldColumnInput
}

input FieldCreateNestedOneWithoutFieldsValueInput {
  connect: FieldWhereUniqueInput
  connectOrCreate: FieldCreateOrConnectWithoutFieldsValueInput
  create: FieldUncheckedCreateWithoutFieldsValueInput
}

input FieldCreateOrConnectWithoutCreatedUserInput {
  create: FieldUncheckedCreateWithoutCreatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldCreateOrConnectWithoutFieldColumnInput {
  create: FieldUncheckedCreateWithoutFieldColumnInput!
  where: FieldWhereUniqueInput!
}

input FieldCreateOrConnectWithoutFieldsValueInput {
  create: FieldUncheckedCreateWithoutFieldsValueInput!
  where: FieldWhereUniqueInput!
}

input FieldCreateOrConnectWithoutPrimitiveInput {
  create: FieldUncheckedCreateWithoutPrimitiveInput!
  where: FieldWhereUniqueInput!
}

input FieldCreateOrConnectWithoutUpdatedUserInput {
  create: FieldUncheckedCreateWithoutUpdatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldCreateWithoutCreatedUserInput {
  FieldsValue: FieldsValueCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  description: String!
  fieldColumn: FieldColumnCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  name: String!
  order: Int
  primitive: PrimitiveFieldsCreateNestedOneWithoutFieldInput!
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedUser: UserCreateNestedOneWithoutFieldValueUpdatedInput
}

input FieldCreateWithoutPrimitiveInput {
  FieldsValue: FieldsValueCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutFieldValueCreatedInput
  description: String!
  fieldColumn: FieldColumnCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedUser: UserCreateNestedOneWithoutFieldValueUpdatedInput
}

input FieldCreateWithoutUpdatedUserInput {
  FieldsValue: FieldsValueCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutFieldValueCreatedInput
  description: String!
  fieldColumn: FieldColumnCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  name: String!
  order: Int
  primitive: PrimitiveFieldsCreateNestedOneWithoutFieldInput!
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
}

enum FieldFlags {
  CARE
  DANGER
  ONBOARDING
  SAFE
}

type FieldGroupBy {
  _avg: FieldAvgAggregate
  _count: FieldCountAggregate
  _max: FieldMaxAggregate
  _min: FieldMinAggregate
  _sum: FieldSumAggregate
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  description: String!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int!
  name: String!
  order: Int!
  required: Boolean!
  showInCard: Boolean!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input FieldListRelationFilter {
  every: FieldWhereInput
  none: FieldWhereInput
  some: FieldWhereInput
}

type FieldMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  fieldType: FieldType
  fieldValueId: Int
  id: Int
  name: String
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  fieldType: SortOrder
  fieldValueId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  showInCard: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type FieldMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  fieldType: FieldType
  fieldValueId: Int
  id: Int
  name: String
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  fieldType: SortOrder
  fieldValueId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  showInCard: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input FieldNullableRelationFilter {
  is: FieldWhereInput
  isNot: FieldWhereInput
}

input FieldOrderByRelationAggregateInput {
  _count: SortOrder
}

input FieldOrderByWithAggregationInput {
  _avg: FieldAvgOrderByAggregateInput
  _count: FieldCountOrderByAggregateInput
  _max: FieldMaxOrderByAggregateInput
  _min: FieldMinOrderByAggregateInput
  _sum: FieldSumOrderByAggregateInput
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  description: SortOrder
  fieldType: SortOrder
  fieldValueId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  showInCard: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input FieldOrderByWithRelationInput {
  FieldsValue: FieldsValueOrderByRelationAggregateInput
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdUser: UserOrderByWithRelationInput
  description: SortOrder
  fieldColumn: FieldColumnOrderByRelationAggregateInput
  fieldType: SortOrder
  fieldValueId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  primitive: PrimitiveFieldsOrderByWithRelationInput
  required: SortOrder
  showInCard: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedUser: UserOrderByWithRelationInput
}

input FieldRelationFilter {
  is: FieldWhereInput
  isNot: FieldWhereInput
}

enum FieldScalarFieldEnum {
  content
  createdAt
  createdBy
  description
  fieldType
  fieldValueId
  id
  name
  order
  required
  showInCard
  updatedAt
  updatedBy
}

input FieldScalarWhereInput {
  AND: [FieldScalarWhereInput!]
  NOT: [FieldScalarWhereInput!]
  OR: [FieldScalarWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  description: StringFilter
  fieldType: EnumFieldTypeFilter
  fieldValueId: IntFilter
  id: IntFilter
  name: StringFilter
  order: IntFilter
  required: BoolFilter
  showInCard: BoolFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input FieldScalarWhereWithAggregatesInput {
  AND: [FieldScalarWhereWithAggregatesInput!]
  NOT: [FieldScalarWhereWithAggregatesInput!]
  OR: [FieldScalarWhereWithAggregatesInput!]
  content: JsonNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  description: StringWithAggregatesFilter
  fieldType: EnumFieldTypeWithAggregatesFilter
  fieldValueId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  order: IntWithAggregatesFilter
  required: BoolWithAggregatesFilter
  showInCard: BoolWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

enum FieldSteps {
  V1
  V2
  V3
  V4
  V4X
}

type FieldSumAggregate {
  fieldValueId: Int
  id: Int
  order: Int
}

input FieldSumOrderByAggregateInput {
  fieldValueId: SortOrder
  id: SortOrder
  order: SortOrder
}

enum FieldType {
  ATTACHMENT
  BLOB
  CASH
  CEP
  CHECKBOX
  CITY
  CLIENT
  CNH
  CNPJ
  CONNECTIONBOARD
  COUNTRY
  CPF
  DATE
  DATEAPPOINTMENT
  EMAIL
  HOURS
  IMAGE
  INVEST
  LINK
  LONGTEXT
  MONEY
  NUMBER
  NUMBERDOCUMENT
  PASSPORT
  PRIORITY
  PROJECTS
  RADIOBOTTON
  RADIOBUTTON
  RG
  SELECT
  SHORTTEXT
  STATE
  TAG
  TEL
}

input FieldUncheckedCreateInput {
  FieldsValue: FieldsValueUncheckedCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldColumn: FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldUncheckedCreateNestedManyWithoutCreatedUserInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutCreatedUserInput!]
  create: [FieldCreateWithoutCreatedUserInput!]
  createMany: FieldCreateManyCreatedUserInputEnvelope
}

input FieldUncheckedCreateNestedManyWithoutPrimitiveInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutPrimitiveInput!]
  create: [FieldCreateWithoutPrimitiveInput!]
  createMany: FieldCreateManyPrimitiveInputEnvelope
}

input FieldUncheckedCreateNestedManyWithoutUpdatedUserInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutUpdatedUserInput!]
  create: [FieldCreateWithoutUpdatedUserInput!]
  createMany: FieldCreateManyUpdatedUserInputEnvelope
}

input FieldUncheckedCreateWithoutCreatedUserInput {
  FieldsValue: FieldsValueUncheckedCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  description: String!
  fieldColumn: FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldUncheckedCreateWithoutFieldColumnInput {
  FieldsValue: FieldsValueUncheckedCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldUncheckedCreateWithoutFieldsValueInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldColumn: FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldUncheckedCreateWithoutPrimitiveInput {
  FieldsValue: FieldsValueUncheckedCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldColumn: FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
  updatedBy: String
}

input FieldUncheckedCreateWithoutUpdatedUserInput {
  FieldsValue: FieldsValueUncheckedCreateNestedManyWithoutFieldInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  description: String!
  fieldColumn: FieldColumnUncheckedCreateNestedManyWithoutFieldColumnInput
  fieldType: FieldType!
  fieldValueId: Int!
  id: Int
  name: String!
  order: Int
  required: Boolean
  showInCard: Boolean
  updatedAt: DateTimeISO
}

input FieldUncheckedUpdateInput {
  FieldsValue: FieldsValueUncheckedUpdateManyWithoutFieldNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldColumn: FieldColumnUncheckedUpdateManyWithoutFieldColumnNestedInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateManyInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateManyWithoutCreatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateManyWithoutCreatedUserNestedInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutCreatedUserInput!]
  create: [FieldCreateWithoutCreatedUserInput!]
  createMany: FieldCreateManyCreatedUserInputEnvelope
  delete: [FieldWhereUniqueInput!]
  deleteMany: [FieldScalarWhereInput!]
  disconnect: [FieldWhereUniqueInput!]
  set: [FieldWhereUniqueInput!]
  update: [FieldUpdateWithWhereUniqueWithoutCreatedUserInput!]
  updateMany: [FieldUpdateManyWithWhereWithoutCreatedUserInput!]
  upsert: [FieldUpsertWithWhereUniqueWithoutCreatedUserInput!]
}

input FieldUncheckedUpdateManyWithoutPrimitiveInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateManyWithoutPrimitiveNestedInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutPrimitiveInput!]
  create: [FieldCreateWithoutPrimitiveInput!]
  createMany: FieldCreateManyPrimitiveInputEnvelope
  delete: [FieldWhereUniqueInput!]
  deleteMany: [FieldScalarWhereInput!]
  disconnect: [FieldWhereUniqueInput!]
  set: [FieldWhereUniqueInput!]
  update: [FieldUpdateWithWhereUniqueWithoutPrimitiveInput!]
  updateMany: [FieldUpdateManyWithWhereWithoutPrimitiveInput!]
  upsert: [FieldUpsertWithWhereUniqueWithoutPrimitiveInput!]
}

input FieldUncheckedUpdateManyWithoutUpdatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FieldUncheckedUpdateManyWithoutUpdatedUserNestedInput {
  connect: [FieldWhereUniqueInput!]
  connectOrCreate: [FieldCreateOrConnectWithoutUpdatedUserInput!]
  create: [FieldCreateWithoutUpdatedUserInput!]
  createMany: FieldCreateManyUpdatedUserInputEnvelope
  delete: [FieldWhereUniqueInput!]
  deleteMany: [FieldScalarWhereInput!]
  disconnect: [FieldWhereUniqueInput!]
  set: [FieldWhereUniqueInput!]
  update: [FieldUpdateWithWhereUniqueWithoutUpdatedUserInput!]
  updateMany: [FieldUpdateManyWithWhereWithoutUpdatedUserInput!]
  upsert: [FieldUpsertWithWhereUniqueWithoutUpdatedUserInput!]
}

input FieldUncheckedUpdateWithoutCreatedUserInput {
  FieldsValue: FieldsValueUncheckedUpdateManyWithoutFieldNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldColumn: FieldColumnUncheckedUpdateManyWithoutFieldColumnNestedInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateWithoutPrimitiveInput {
  FieldsValue: FieldsValueUncheckedUpdateManyWithoutFieldNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldColumn: FieldColumnUncheckedUpdateManyWithoutFieldColumnNestedInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input FieldUncheckedUpdateWithoutUpdatedUserInput {
  FieldsValue: FieldsValueUncheckedUpdateManyWithoutFieldNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  fieldColumn: FieldColumnUncheckedUpdateManyWithoutFieldColumnNestedInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  fieldValueId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  showInCard: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FieldUpdateManyWithWhereWithoutCreatedUserInput {
  data: FieldUncheckedUpdateManyWithoutCreatedUserInput!
  where: FieldScalarWhereInput!
}

input FieldUpdateManyWithWhereWithoutPrimitiveInput {
  data: FieldUncheckedUpdateManyWithoutPrimitiveInput!
  where: FieldScalarWhereInput!
}

input FieldUpdateManyWithWhereWithoutUpdatedUserInput {
  data: FieldUncheckedUpdateManyWithoutUpdatedUserInput!
  where: FieldScalarWhereInput!
}

input FieldUpdateWithWhereUniqueWithoutCreatedUserInput {
  data: FieldUncheckedUpdateWithoutCreatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldUpdateWithWhereUniqueWithoutPrimitiveInput {
  data: FieldUncheckedUpdateWithoutPrimitiveInput!
  where: FieldWhereUniqueInput!
}

input FieldUpdateWithWhereUniqueWithoutUpdatedUserInput {
  data: FieldUncheckedUpdateWithoutUpdatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldUpsertWithWhereUniqueWithoutCreatedUserInput {
  create: FieldUncheckedCreateWithoutCreatedUserInput!
  update: FieldUncheckedUpdateWithoutCreatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldUpsertWithWhereUniqueWithoutPrimitiveInput {
  create: FieldUncheckedCreateWithoutPrimitiveInput!
  update: FieldUncheckedUpdateWithoutPrimitiveInput!
  where: FieldWhereUniqueInput!
}

input FieldUpsertWithWhereUniqueWithoutUpdatedUserInput {
  create: FieldUncheckedCreateWithoutUpdatedUserInput!
  update: FieldUncheckedUpdateWithoutUpdatedUserInput!
  where: FieldWhereUniqueInput!
}

input FieldWhereInput {
  AND: [FieldWhereInput!]
  FieldsValue: FieldsValueListRelationFilter
  NOT: [FieldWhereInput!]
  OR: [FieldWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  description: StringFilter
  fieldColumn: FieldColumnListRelationFilter
  fieldType: EnumFieldTypeFilter
  fieldValueId: IntFilter
  id: IntFilter
  name: StringFilter
  order: IntFilter
  primitive: PrimitiveFieldsRelationFilter
  required: BoolFilter
  showInCard: BoolFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

input FieldWhereUniqueInput {
  AND: [FieldWhereInput!]
  FieldsValue: FieldsValueListRelationFilter
  NOT: [FieldWhereInput!]
  OR: [FieldWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  description: StringFilter
  fieldColumn: FieldColumnListRelationFilter
  fieldType: EnumFieldTypeFilter
  fieldValueId: IntFilter
  id: Int
  name: StringFilter
  order: IntFilter
  primitive: PrimitiveFieldsRelationFilter
  required: BoolFilter
  showInCard: BoolFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

type FieldsValue {
  card: Card!
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO!
  createdBy: String
  field(where: FieldWhereInput): Field
  fieldId: Int
  fieldType: FieldType!
  id: Int!
  user(where: UserWhereInput): User
}

type FieldsValueAvgAggregate {
  fieldId: Float
  id: Float
}

input FieldsValueAvgOrderByAggregateInput {
  fieldId: SortOrder
  id: SortOrder
}

type FieldsValueCountAggregate {
  _all: Int!
  cardId: Int!
  content: Int!
  createdAt: Int!
  createdBy: Int!
  fieldId: Int!
  fieldType: Int!
  id: Int!
}

input FieldsValueCountOrderByAggregateInput {
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  fieldId: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

input FieldsValueCreateManyCardInput {
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueCreateManyCardInputEnvelope {
  data: [FieldsValueCreateManyCardInput!]!
  skipDuplicates: Boolean
}

input FieldsValueCreateManyFieldInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldType: FieldType!
  id: Int
}

input FieldsValueCreateManyFieldInputEnvelope {
  data: [FieldsValueCreateManyFieldInput!]!
  skipDuplicates: Boolean
}

input FieldsValueCreateManyInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueCreateManyUserInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueCreateManyUserInputEnvelope {
  data: [FieldsValueCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input FieldsValueCreateNestedManyWithoutCardInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutCardInput!]
  create: [FieldsValueCreateWithoutCardInput!]
  createMany: FieldsValueCreateManyCardInputEnvelope
}

input FieldsValueCreateNestedManyWithoutFieldInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutFieldInput!]
  create: [FieldsValueCreateWithoutFieldInput!]
  createMany: FieldsValueCreateManyFieldInputEnvelope
}

input FieldsValueCreateOrConnectWithoutCardInput {
  create: FieldsValueUncheckedCreateWithoutCardInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueCreateOrConnectWithoutFieldInput {
  create: FieldsValueUncheckedCreateWithoutFieldInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueCreateOrConnectWithoutUserInput {
  create: FieldsValueUncheckedCreateWithoutUserInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueCreateWithoutCardInput {
  content: JSON!
  createdAt: DateTimeISO
  field: FieldCreateNestedOneWithoutFieldsValueInput
  fieldType: FieldType!
  user: UserCreateNestedOneWithoutFieldValueCreatedByInput
}

input FieldsValueCreateWithoutFieldInput {
  card: CardCreateNestedOneWithoutFieldValueInput!
  content: JSON!
  createdAt: DateTimeISO
  fieldType: FieldType!
  user: UserCreateNestedOneWithoutFieldValueCreatedByInput
}

input FieldsValueCreateWithoutUserInput {
  card: CardCreateNestedOneWithoutFieldValueInput!
  content: JSON!
  createdAt: DateTimeISO
  field: FieldCreateNestedOneWithoutFieldsValueInput
  fieldType: FieldType!
}

type FieldsValueGroupBy {
  _avg: FieldsValueAvgAggregate
  _count: FieldsValueCountAggregate
  _max: FieldsValueMaxAggregate
  _min: FieldsValueMinAggregate
  _sum: FieldsValueSumAggregate
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO!
  createdBy: String
  fieldId: Int
  fieldType: FieldType!
  id: Int!
}

input FieldsValueListRelationFilter {
  every: FieldsValueWhereInput
  none: FieldsValueWhereInput
  some: FieldsValueWhereInput
}

type FieldsValueMaxAggregate {
  cardId: String
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType
  id: Int
}

input FieldsValueMaxOrderByAggregateInput {
  cardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  fieldId: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

type FieldsValueMinAggregate {
  cardId: String
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType
  id: Int
}

input FieldsValueMinOrderByAggregateInput {
  cardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  fieldId: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

input FieldsValueOrderByRelationAggregateInput {
  _count: SortOrder
}

input FieldsValueOrderByWithAggregationInput {
  _avg: FieldsValueAvgOrderByAggregateInput
  _count: FieldsValueCountOrderByAggregateInput
  _max: FieldsValueMaxOrderByAggregateInput
  _min: FieldsValueMinOrderByAggregateInput
  _sum: FieldsValueSumOrderByAggregateInput
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  fieldId: SortOrderInput
  fieldType: SortOrder
  id: SortOrder
}

input FieldsValueOrderByWithRelationInput {
  card: CardOrderByWithRelationInput
  cardId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  field: FieldOrderByWithRelationInput
  fieldId: SortOrderInput
  fieldType: SortOrder
  id: SortOrder
  user: UserOrderByWithRelationInput
}

enum FieldsValueScalarFieldEnum {
  cardId
  content
  createdAt
  createdBy
  fieldId
  fieldType
  id
}

input FieldsValueScalarWhereInput {
  AND: [FieldsValueScalarWhereInput!]
  NOT: [FieldsValueScalarWhereInput!]
  OR: [FieldsValueScalarWhereInput!]
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  fieldId: IntNullableFilter
  fieldType: EnumFieldTypeFilter
  id: IntFilter
}

input FieldsValueScalarWhereWithAggregatesInput {
  AND: [FieldsValueScalarWhereWithAggregatesInput!]
  NOT: [FieldsValueScalarWhereWithAggregatesInput!]
  OR: [FieldsValueScalarWhereWithAggregatesInput!]
  cardId: StringWithAggregatesFilter
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  fieldId: IntNullableWithAggregatesFilter
  fieldType: EnumFieldTypeWithAggregatesFilter
  id: IntWithAggregatesFilter
}

type FieldsValueSumAggregate {
  fieldId: Int
  id: Int
}

input FieldsValueSumOrderByAggregateInput {
  fieldId: SortOrder
  id: SortOrder
}

input FieldsValueUncheckedCreateInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueUncheckedCreateNestedManyWithoutCardInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutCardInput!]
  create: [FieldsValueCreateWithoutCardInput!]
  createMany: FieldsValueCreateManyCardInputEnvelope
}

input FieldsValueUncheckedCreateNestedManyWithoutFieldInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutFieldInput!]
  create: [FieldsValueCreateWithoutFieldInput!]
  createMany: FieldsValueCreateManyFieldInputEnvelope
}

input FieldsValueUncheckedCreateNestedManyWithoutUserInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutUserInput!]
  create: [FieldsValueCreateWithoutUserInput!]
  createMany: FieldsValueCreateManyUserInputEnvelope
}

input FieldsValueUncheckedCreateWithoutCardInput {
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueUncheckedCreateWithoutFieldInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  createdBy: String
  fieldType: FieldType!
  id: Int
}

input FieldsValueUncheckedCreateWithoutUserInput {
  cardId: String!
  content: JSON!
  createdAt: DateTimeISO
  fieldId: Int
  fieldType: FieldType!
  id: Int
}

input FieldsValueUncheckedUpdateInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateManyInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateManyWithoutCardInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateManyWithoutCardNestedInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutCardInput!]
  create: [FieldsValueCreateWithoutCardInput!]
  createMany: FieldsValueCreateManyCardInputEnvelope
  delete: [FieldsValueWhereUniqueInput!]
  deleteMany: [FieldsValueScalarWhereInput!]
  disconnect: [FieldsValueWhereUniqueInput!]
  set: [FieldsValueWhereUniqueInput!]
  update: [FieldsValueUpdateWithWhereUniqueWithoutCardInput!]
  updateMany: [FieldsValueUpdateManyWithWhereWithoutCardInput!]
  upsert: [FieldsValueUpsertWithWhereUniqueWithoutCardInput!]
}

input FieldsValueUncheckedUpdateManyWithoutFieldInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateManyWithoutFieldNestedInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutFieldInput!]
  create: [FieldsValueCreateWithoutFieldInput!]
  createMany: FieldsValueCreateManyFieldInputEnvelope
  delete: [FieldsValueWhereUniqueInput!]
  deleteMany: [FieldsValueScalarWhereInput!]
  disconnect: [FieldsValueWhereUniqueInput!]
  set: [FieldsValueWhereUniqueInput!]
  update: [FieldsValueUpdateWithWhereUniqueWithoutFieldInput!]
  updateMany: [FieldsValueUpdateManyWithWhereWithoutFieldInput!]
  upsert: [FieldsValueUpsertWithWhereUniqueWithoutFieldInput!]
}

input FieldsValueUncheckedUpdateManyWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateManyWithoutUserNestedInput {
  connect: [FieldsValueWhereUniqueInput!]
  connectOrCreate: [FieldsValueCreateOrConnectWithoutUserInput!]
  create: [FieldsValueCreateWithoutUserInput!]
  createMany: FieldsValueCreateManyUserInputEnvelope
  delete: [FieldsValueWhereUniqueInput!]
  deleteMany: [FieldsValueScalarWhereInput!]
  disconnect: [FieldsValueWhereUniqueInput!]
  set: [FieldsValueWhereUniqueInput!]
  update: [FieldsValueUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [FieldsValueUpdateManyWithWhereWithoutUserInput!]
  upsert: [FieldsValueUpsertWithWhereUniqueWithoutUserInput!]
}

input FieldsValueUncheckedUpdateWithoutCardInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateWithoutFieldInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUncheckedUpdateWithoutUserInput {
  cardId: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fieldId: NullableIntFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input FieldsValueUpdateManyWithWhereWithoutCardInput {
  data: FieldsValueUncheckedUpdateManyWithoutCardInput!
  where: FieldsValueScalarWhereInput!
}

input FieldsValueUpdateManyWithWhereWithoutFieldInput {
  data: FieldsValueUncheckedUpdateManyWithoutFieldInput!
  where: FieldsValueScalarWhereInput!
}

input FieldsValueUpdateManyWithWhereWithoutUserInput {
  data: FieldsValueUncheckedUpdateManyWithoutUserInput!
  where: FieldsValueScalarWhereInput!
}

input FieldsValueUpdateWithWhereUniqueWithoutCardInput {
  data: FieldsValueUncheckedUpdateWithoutCardInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueUpdateWithWhereUniqueWithoutFieldInput {
  data: FieldsValueUncheckedUpdateWithoutFieldInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueUpdateWithWhereUniqueWithoutUserInput {
  data: FieldsValueUncheckedUpdateWithoutUserInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueUpsertWithWhereUniqueWithoutCardInput {
  create: FieldsValueUncheckedCreateWithoutCardInput!
  update: FieldsValueUncheckedUpdateWithoutCardInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueUpsertWithWhereUniqueWithoutFieldInput {
  create: FieldsValueUncheckedCreateWithoutFieldInput!
  update: FieldsValueUncheckedUpdateWithoutFieldInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueUpsertWithWhereUniqueWithoutUserInput {
  create: FieldsValueUncheckedCreateWithoutUserInput!
  update: FieldsValueUncheckedUpdateWithoutUserInput!
  where: FieldsValueWhereUniqueInput!
}

input FieldsValueWhereInput {
  AND: [FieldsValueWhereInput!]
  NOT: [FieldsValueWhereInput!]
  OR: [FieldsValueWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  field: FieldNullableRelationFilter
  fieldId: IntNullableFilter
  fieldType: EnumFieldTypeFilter
  id: IntFilter
  user: UserNullableRelationFilter
}

input FieldsValueWhereUniqueInput {
  AND: [FieldsValueWhereInput!]
  NOT: [FieldsValueWhereInput!]
  OR: [FieldsValueWhereInput!]
  card: CardRelationFilter
  cardId: StringFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  field: FieldNullableRelationFilter
  fieldId: IntNullableFilter
  fieldType: EnumFieldTypeFilter
  id: Int
  user: UserNullableRelationFilter
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input FloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

input ForgotPassword {
  email: String!
}

type Group {
  _count: GroupCount
  board(where: BoardWhereInput): Board
  boardId: String
  createdAt: DateTimeISO!
  createdBy: String
  createdUser(where: UserWhereInput): User
  groupMenbership(cursor: GroupMenbershipWhereUniqueInput, distinct: [GroupMenbershipScalarFieldEnum!], orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): [GroupMenbership!]!
  groupUser(cursor: GroupUserWhereUniqueInput, distinct: [GroupUserScalarFieldEnum!], orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): [GroupUser!]!
  id: Int!
  name: String!
  permission(where: PermissionWhereInput): Permission
  updatedBy: String
  updatedUser(where: UserWhereInput): User
}

type GroupAvgAggregate {
  id: Float
}

input GroupAvgOrderByAggregateInput {
  id: SortOrder
}

type GroupCount {
  groupMenbership(where: GroupMenbershipWhereInput): Int!
  groupUser(where: GroupUserWhereInput): Int!
}

type GroupCountAggregate {
  _all: Int!
  boardId: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  name: Int!
  updatedBy: Int!
}

input GroupCountOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  name: SortOrder
  updatedBy: SortOrder
}

input GroupCreateManyBoardInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  name: String!
  updatedBy: String
}

input GroupCreateManyBoardInputEnvelope {
  data: [GroupCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input GroupCreateManyCreatedUserInput {
  boardId: String
  createdAt: DateTimeISO
  id: Int
  name: String!
  updatedBy: String
}

input GroupCreateManyCreatedUserInputEnvelope {
  data: [GroupCreateManyCreatedUserInput!]!
  skipDuplicates: Boolean
}

input GroupCreateManyInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  name: String!
  updatedBy: String
}

input GroupCreateManyUpdatedUserInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  name: String!
}

input GroupCreateManyUpdatedUserInputEnvelope {
  data: [GroupCreateManyUpdatedUserInput!]!
  skipDuplicates: Boolean
}

input GroupCreateNestedManyWithoutBoardInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutBoardInput!]
  create: [GroupCreateWithoutBoardInput!]
  createMany: GroupCreateManyBoardInputEnvelope
}

input GroupCreateNestedOneWithoutGroupMenbershipInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutGroupMenbershipInput
  create: GroupUncheckedCreateWithoutGroupMenbershipInput
}

input GroupCreateNestedOneWithoutGroupUserInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutGroupUserInput
  create: GroupUncheckedCreateWithoutGroupUserInput
}

input GroupCreateOrConnectWithoutBoardInput {
  create: GroupUncheckedCreateWithoutBoardInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutCreatedUserInput {
  create: GroupUncheckedCreateWithoutCreatedUserInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutGroupMenbershipInput {
  create: GroupUncheckedCreateWithoutGroupMenbershipInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutGroupUserInput {
  create: GroupUncheckedCreateWithoutGroupUserInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateOrConnectWithoutUpdatedUserInput {
  create: GroupUncheckedCreateWithoutUpdatedUserInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutBoardInput {
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutGroupCreatedByInput
  groupMenbership: GroupMenbershipCreateNestedManyWithoutGroupInput
  groupUser: GroupUserCreateNestedManyWithoutGroupInput
  name: String!
  permission: PermissionCreateNestedOneWithoutGroupInput
  updatedUser: UserCreateNestedOneWithoutGroupUpdatedByInput
}

input GroupCreateWithoutCreatedUserInput {
  board: BoardCreateNestedOneWithoutGroupInput
  createdAt: DateTimeISO
  groupMenbership: GroupMenbershipCreateNestedManyWithoutGroupInput
  groupUser: GroupUserCreateNestedManyWithoutGroupInput
  name: String!
  permission: PermissionCreateNestedOneWithoutGroupInput
  updatedUser: UserCreateNestedOneWithoutGroupUpdatedByInput
}

input GroupCreateWithoutUpdatedUserInput {
  board: BoardCreateNestedOneWithoutGroupInput
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutGroupCreatedByInput
  groupMenbership: GroupMenbershipCreateNestedManyWithoutGroupInput
  groupUser: GroupUserCreateNestedManyWithoutGroupInput
  name: String!
  permission: PermissionCreateNestedOneWithoutGroupInput
}

type GroupGroupBy {
  _avg: GroupAvgAggregate
  _count: GroupCountAggregate
  _max: GroupMaxAggregate
  _min: GroupMinAggregate
  _sum: GroupSumAggregate
  boardId: String
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  name: String!
  updatedBy: String
}

input GroupListRelationFilter {
  every: GroupWhereInput
  none: GroupWhereInput
  some: GroupWhereInput
}

type GroupMaxAggregate {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  name: String
  updatedBy: String
}

input GroupMaxOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  name: SortOrder
  updatedBy: SortOrder
}

type GroupMenbership {
  board: Board!
  boardId: String!
  group: Group!
  groupId: Int!
}

type GroupMenbershipAvgAggregate {
  groupId: Float
}

input GroupMenbershipAvgOrderByAggregateInput {
  groupId: SortOrder
}

type GroupMenbershipCountAggregate {
  _all: Int!
  boardId: Int!
  groupId: Int!
}

input GroupMenbershipCountOrderByAggregateInput {
  boardId: SortOrder
  groupId: SortOrder
}

input GroupMenbershipCreateManyBoardInput {
  groupId: Int!
}

input GroupMenbershipCreateManyBoardInputEnvelope {
  data: [GroupMenbershipCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input GroupMenbershipCreateManyGroupInput {
  boardId: String!
}

input GroupMenbershipCreateManyGroupInputEnvelope {
  data: [GroupMenbershipCreateManyGroupInput!]!
  skipDuplicates: Boolean
}

input GroupMenbershipCreateManyInput {
  boardId: String!
  groupId: Int!
}

input GroupMenbershipCreateNestedManyWithoutBoardInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutBoardInput!]
  create: [GroupMenbershipCreateWithoutBoardInput!]
  createMany: GroupMenbershipCreateManyBoardInputEnvelope
}

input GroupMenbershipCreateNestedManyWithoutGroupInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutGroupInput!]
  create: [GroupMenbershipCreateWithoutGroupInput!]
  createMany: GroupMenbershipCreateManyGroupInputEnvelope
}

input GroupMenbershipCreateOrConnectWithoutBoardInput {
  create: GroupMenbershipUncheckedCreateWithoutBoardInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipCreateOrConnectWithoutGroupInput {
  create: GroupMenbershipUncheckedCreateWithoutGroupInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipCreateWithoutBoardInput {
  group: GroupCreateNestedOneWithoutGroupMenbershipInput!
}

input GroupMenbershipCreateWithoutGroupInput {
  board: BoardCreateNestedOneWithoutGroupMenbershipInput!
}

type GroupMenbershipGroupBy {
  _avg: GroupMenbershipAvgAggregate
  _count: GroupMenbershipCountAggregate
  _max: GroupMenbershipMaxAggregate
  _min: GroupMenbershipMinAggregate
  _sum: GroupMenbershipSumAggregate
  boardId: String!
  groupId: Int!
}

input GroupMenbershipGroupIdBoardIdCompoundUniqueInput {
  boardId: String!
  groupId: Int!
}

input GroupMenbershipListRelationFilter {
  every: GroupMenbershipWhereInput
  none: GroupMenbershipWhereInput
  some: GroupMenbershipWhereInput
}

type GroupMenbershipMaxAggregate {
  boardId: String
  groupId: Int
}

input GroupMenbershipMaxOrderByAggregateInput {
  boardId: SortOrder
  groupId: SortOrder
}

type GroupMenbershipMinAggregate {
  boardId: String
  groupId: Int
}

input GroupMenbershipMinOrderByAggregateInput {
  boardId: SortOrder
  groupId: SortOrder
}

input GroupMenbershipOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupMenbershipOrderByWithAggregationInput {
  _avg: GroupMenbershipAvgOrderByAggregateInput
  _count: GroupMenbershipCountOrderByAggregateInput
  _max: GroupMenbershipMaxOrderByAggregateInput
  _min: GroupMenbershipMinOrderByAggregateInput
  _sum: GroupMenbershipSumOrderByAggregateInput
  boardId: SortOrder
  groupId: SortOrder
}

input GroupMenbershipOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrder
  group: GroupOrderByWithRelationInput
  groupId: SortOrder
}

enum GroupMenbershipScalarFieldEnum {
  boardId
  groupId
}

input GroupMenbershipScalarWhereInput {
  AND: [GroupMenbershipScalarWhereInput!]
  NOT: [GroupMenbershipScalarWhereInput!]
  OR: [GroupMenbershipScalarWhereInput!]
  boardId: StringFilter
  groupId: IntFilter
}

input GroupMenbershipScalarWhereWithAggregatesInput {
  AND: [GroupMenbershipScalarWhereWithAggregatesInput!]
  NOT: [GroupMenbershipScalarWhereWithAggregatesInput!]
  OR: [GroupMenbershipScalarWhereWithAggregatesInput!]
  boardId: StringWithAggregatesFilter
  groupId: IntWithAggregatesFilter
}

type GroupMenbershipSumAggregate {
  groupId: Int
}

input GroupMenbershipSumOrderByAggregateInput {
  groupId: SortOrder
}

input GroupMenbershipUncheckedCreateInput {
  boardId: String!
  groupId: Int!
}

input GroupMenbershipUncheckedCreateNestedManyWithoutBoardInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutBoardInput!]
  create: [GroupMenbershipCreateWithoutBoardInput!]
  createMany: GroupMenbershipCreateManyBoardInputEnvelope
}

input GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutGroupInput!]
  create: [GroupMenbershipCreateWithoutGroupInput!]
  createMany: GroupMenbershipCreateManyGroupInputEnvelope
}

input GroupMenbershipUncheckedCreateWithoutBoardInput {
  groupId: Int!
}

input GroupMenbershipUncheckedCreateWithoutGroupInput {
  boardId: String!
}

input GroupMenbershipUncheckedUpdateInput {
  boardId: StringFieldUpdateOperationsInput
  groupId: IntFieldUpdateOperationsInput
}

input GroupMenbershipUncheckedUpdateManyInput {
  boardId: StringFieldUpdateOperationsInput
  groupId: IntFieldUpdateOperationsInput
}

input GroupMenbershipUncheckedUpdateManyWithoutBoardInput {
  groupId: IntFieldUpdateOperationsInput
}

input GroupMenbershipUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutBoardInput!]
  create: [GroupMenbershipCreateWithoutBoardInput!]
  createMany: GroupMenbershipCreateManyBoardInputEnvelope
  delete: [GroupMenbershipWhereUniqueInput!]
  deleteMany: [GroupMenbershipScalarWhereInput!]
  disconnect: [GroupMenbershipWhereUniqueInput!]
  set: [GroupMenbershipWhereUniqueInput!]
  update: [GroupMenbershipUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [GroupMenbershipUpdateManyWithWhereWithoutBoardInput!]
  upsert: [GroupMenbershipUpsertWithWhereUniqueWithoutBoardInput!]
}

input GroupMenbershipUncheckedUpdateManyWithoutGroupInput {
  boardId: StringFieldUpdateOperationsInput
}

input GroupMenbershipUncheckedUpdateManyWithoutGroupNestedInput {
  connect: [GroupMenbershipWhereUniqueInput!]
  connectOrCreate: [GroupMenbershipCreateOrConnectWithoutGroupInput!]
  create: [GroupMenbershipCreateWithoutGroupInput!]
  createMany: GroupMenbershipCreateManyGroupInputEnvelope
  delete: [GroupMenbershipWhereUniqueInput!]
  deleteMany: [GroupMenbershipScalarWhereInput!]
  disconnect: [GroupMenbershipWhereUniqueInput!]
  set: [GroupMenbershipWhereUniqueInput!]
  update: [GroupMenbershipUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [GroupMenbershipUpdateManyWithWhereWithoutGroupInput!]
  upsert: [GroupMenbershipUpsertWithWhereUniqueWithoutGroupInput!]
}

input GroupMenbershipUncheckedUpdateWithoutBoardInput {
  groupId: IntFieldUpdateOperationsInput
}

input GroupMenbershipUncheckedUpdateWithoutGroupInput {
  boardId: StringFieldUpdateOperationsInput
}

input GroupMenbershipUpdateManyWithWhereWithoutBoardInput {
  data: GroupMenbershipUncheckedUpdateManyWithoutBoardInput!
  where: GroupMenbershipScalarWhereInput!
}

input GroupMenbershipUpdateManyWithWhereWithoutGroupInput {
  data: GroupMenbershipUncheckedUpdateManyWithoutGroupInput!
  where: GroupMenbershipScalarWhereInput!
}

input GroupMenbershipUpdateWithWhereUniqueWithoutBoardInput {
  data: GroupMenbershipUncheckedUpdateWithoutBoardInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipUpdateWithWhereUniqueWithoutGroupInput {
  data: GroupMenbershipUncheckedUpdateWithoutGroupInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipUpsertWithWhereUniqueWithoutBoardInput {
  create: GroupMenbershipUncheckedCreateWithoutBoardInput!
  update: GroupMenbershipUncheckedUpdateWithoutBoardInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipUpsertWithWhereUniqueWithoutGroupInput {
  create: GroupMenbershipUncheckedCreateWithoutGroupInput!
  update: GroupMenbershipUncheckedUpdateWithoutGroupInput!
  where: GroupMenbershipWhereUniqueInput!
}

input GroupMenbershipWhereInput {
  AND: [GroupMenbershipWhereInput!]
  NOT: [GroupMenbershipWhereInput!]
  OR: [GroupMenbershipWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  group: GroupRelationFilter
  groupId: IntFilter
}

input GroupMenbershipWhereUniqueInput {
  AND: [GroupMenbershipWhereInput!]
  NOT: [GroupMenbershipWhereInput!]
  OR: [GroupMenbershipWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  group: GroupRelationFilter
  groupId: IntFilter
  groupId_boardId: GroupMenbershipGroupIdBoardIdCompoundUniqueInput
}

type GroupMinAggregate {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  name: String
  updatedBy: String
}

input GroupMinOrderByAggregateInput {
  boardId: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  name: SortOrder
  updatedBy: SortOrder
}

input GroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupOrderByWithAggregationInput {
  _avg: GroupAvgOrderByAggregateInput
  _count: GroupCountOrderByAggregateInput
  _max: GroupMaxOrderByAggregateInput
  _min: GroupMinOrderByAggregateInput
  _sum: GroupSumOrderByAggregateInput
  boardId: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  name: SortOrder
  updatedBy: SortOrderInput
}

input GroupOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdUser: UserOrderByWithRelationInput
  groupMenbership: GroupMenbershipOrderByRelationAggregateInput
  groupUser: GroupUserOrderByRelationAggregateInput
  id: SortOrder
  name: SortOrder
  permission: PermissionOrderByWithRelationInput
  updatedBy: SortOrderInput
  updatedUser: UserOrderByWithRelationInput
}

input GroupRelationFilter {
  is: GroupWhereInput
  isNot: GroupWhereInput
}

enum GroupScalarFieldEnum {
  boardId
  createdAt
  createdBy
  id
  name
  updatedBy
}

input GroupScalarWhereInput {
  AND: [GroupScalarWhereInput!]
  NOT: [GroupScalarWhereInput!]
  OR: [GroupScalarWhereInput!]
  boardId: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  name: StringFilter
  updatedBy: UuidNullableFilter
}

input GroupScalarWhereWithAggregatesInput {
  AND: [GroupScalarWhereWithAggregatesInput!]
  NOT: [GroupScalarWhereWithAggregatesInput!]
  OR: [GroupScalarWhereWithAggregatesInput!]
  boardId: StringNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type GroupSumAggregate {
  id: Int
}

input GroupSumOrderByAggregateInput {
  id: SortOrder
}

input GroupUncheckedCreateInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
  updatedBy: String
}

input GroupUncheckedCreateNestedManyWithoutBoardInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutBoardInput!]
  create: [GroupCreateWithoutBoardInput!]
  createMany: GroupCreateManyBoardInputEnvelope
}

input GroupUncheckedCreateNestedManyWithoutCreatedUserInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutCreatedUserInput!]
  create: [GroupCreateWithoutCreatedUserInput!]
  createMany: GroupCreateManyCreatedUserInputEnvelope
}

input GroupUncheckedCreateNestedManyWithoutUpdatedUserInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUpdatedUserInput!]
  create: [GroupCreateWithoutUpdatedUserInput!]
  createMany: GroupCreateManyUpdatedUserInputEnvelope
}

input GroupUncheckedCreateWithoutBoardInput {
  createdAt: DateTimeISO
  createdBy: String
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
  updatedBy: String
}

input GroupUncheckedCreateWithoutCreatedUserInput {
  boardId: String
  createdAt: DateTimeISO
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
  updatedBy: String
}

input GroupUncheckedCreateWithoutGroupMenbershipInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  groupUser: GroupUserUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
  updatedBy: String
}

input GroupUncheckedCreateWithoutGroupUserInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
  updatedBy: String
}

input GroupUncheckedCreateWithoutUpdatedUserInput {
  boardId: String
  createdAt: DateTimeISO
  createdBy: String
  groupMenbership: GroupMenbershipUncheckedCreateNestedManyWithoutGroupInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutGroupInput
  id: Int
  name: String!
  permission: PermissionUncheckedCreateNestedOneWithoutGroupInput
}

input GroupUncheckedUpdateInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutGroupNestedInput
  groupUser: GroupUserUncheckedUpdateManyWithoutGroupNestedInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permission: PermissionUncheckedUpdateOneWithoutGroupNestedInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyWithoutBoardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutBoardInput!]
  create: [GroupCreateWithoutBoardInput!]
  createMany: GroupCreateManyBoardInputEnvelope
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutBoardInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutBoardInput!]
}

input GroupUncheckedUpdateManyWithoutCreatedUserInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyWithoutCreatedUserNestedInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutCreatedUserInput!]
  create: [GroupCreateWithoutCreatedUserInput!]
  createMany: GroupCreateManyCreatedUserInputEnvelope
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutCreatedUserInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutCreatedUserInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutCreatedUserInput!]
}

input GroupUncheckedUpdateManyWithoutUpdatedUserInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateManyWithoutUpdatedUserNestedInput {
  connect: [GroupWhereUniqueInput!]
  connectOrCreate: [GroupCreateOrConnectWithoutUpdatedUserInput!]
  create: [GroupCreateWithoutUpdatedUserInput!]
  createMany: GroupCreateManyUpdatedUserInputEnvelope
  delete: [GroupWhereUniqueInput!]
  deleteMany: [GroupScalarWhereInput!]
  disconnect: [GroupWhereUniqueInput!]
  set: [GroupWhereUniqueInput!]
  update: [GroupUpdateWithWhereUniqueWithoutUpdatedUserInput!]
  updateMany: [GroupUpdateManyWithWhereWithoutUpdatedUserInput!]
  upsert: [GroupUpsertWithWhereUniqueWithoutUpdatedUserInput!]
}

input GroupUncheckedUpdateWithoutBoardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutGroupNestedInput
  groupUser: GroupUserUncheckedUpdateManyWithoutGroupNestedInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permission: PermissionUncheckedUpdateOneWithoutGroupNestedInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateWithoutCreatedUserInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutGroupNestedInput
  groupUser: GroupUserUncheckedUpdateManyWithoutGroupNestedInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permission: PermissionUncheckedUpdateOneWithoutGroupNestedInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input GroupUncheckedUpdateWithoutUpdatedUserInput {
  boardId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  groupMenbership: GroupMenbershipUncheckedUpdateManyWithoutGroupNestedInput
  groupUser: GroupUserUncheckedUpdateManyWithoutGroupNestedInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permission: PermissionUncheckedUpdateOneWithoutGroupNestedInput
}

input GroupUpdateManyWithWhereWithoutBoardInput {
  data: GroupUncheckedUpdateManyWithoutBoardInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateManyWithWhereWithoutCreatedUserInput {
  data: GroupUncheckedUpdateManyWithoutCreatedUserInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateManyWithWhereWithoutUpdatedUserInput {
  data: GroupUncheckedUpdateManyWithoutUpdatedUserInput!
  where: GroupScalarWhereInput!
}

input GroupUpdateWithWhereUniqueWithoutBoardInput {
  data: GroupUncheckedUpdateWithoutBoardInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithWhereUniqueWithoutCreatedUserInput {
  data: GroupUncheckedUpdateWithoutCreatedUserInput!
  where: GroupWhereUniqueInput!
}

input GroupUpdateWithWhereUniqueWithoutUpdatedUserInput {
  data: GroupUncheckedUpdateWithoutUpdatedUserInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutBoardInput {
  create: GroupUncheckedCreateWithoutBoardInput!
  update: GroupUncheckedUpdateWithoutBoardInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutCreatedUserInput {
  create: GroupUncheckedCreateWithoutCreatedUserInput!
  update: GroupUncheckedUpdateWithoutCreatedUserInput!
  where: GroupWhereUniqueInput!
}

input GroupUpsertWithWhereUniqueWithoutUpdatedUserInput {
  create: GroupUncheckedCreateWithoutUpdatedUserInput!
  update: GroupUncheckedUpdateWithoutUpdatedUserInput!
  where: GroupWhereUniqueInput!
}

type GroupUser {
  group: Group!
  groupId: Int!
  user: User!
  userUuid: String!
}

type GroupUserAvgAggregate {
  groupId: Float
}

input GroupUserAvgOrderByAggregateInput {
  groupId: SortOrder
}

type GroupUserCountAggregate {
  _all: Int!
  groupId: Int!
  userUuid: Int!
}

input GroupUserCountOrderByAggregateInput {
  groupId: SortOrder
  userUuid: SortOrder
}

input GroupUserCreateManyGroupInput {
  userUuid: String!
}

input GroupUserCreateManyGroupInputEnvelope {
  data: [GroupUserCreateManyGroupInput!]!
  skipDuplicates: Boolean
}

input GroupUserCreateManyInput {
  groupId: Int
  userUuid: String!
}

input GroupUserCreateManyUserInput {
  groupId: Int
}

input GroupUserCreateManyUserInputEnvelope {
  data: [GroupUserCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input GroupUserCreateNestedManyWithoutGroupInput {
  connect: [GroupUserWhereUniqueInput!]
  connectOrCreate: [GroupUserCreateOrConnectWithoutGroupInput!]
  create: [GroupUserCreateWithoutGroupInput!]
  createMany: GroupUserCreateManyGroupInputEnvelope
}

input GroupUserCreateOrConnectWithoutGroupInput {
  create: GroupUserUncheckedCreateWithoutGroupInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserCreateOrConnectWithoutUserInput {
  create: GroupUserUncheckedCreateWithoutUserInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserCreateWithoutGroupInput {
  user: UserCreateNestedOneWithoutGroupUserInput!
}

input GroupUserCreateWithoutUserInput {
  group: GroupCreateNestedOneWithoutGroupUserInput
}

type GroupUserGroupBy {
  _avg: GroupUserAvgAggregate
  _count: GroupUserCountAggregate
  _max: GroupUserMaxAggregate
  _min: GroupUserMinAggregate
  _sum: GroupUserSumAggregate
  groupId: Int!
  userUuid: String!
}

input GroupUserGroupIdUserUuidCompoundUniqueInput {
  groupId: Int!
  userUuid: String!
}

input GroupUserListRelationFilter {
  every: GroupUserWhereInput
  none: GroupUserWhereInput
  some: GroupUserWhereInput
}

type GroupUserMaxAggregate {
  groupId: Int
  userUuid: String
}

input GroupUserMaxOrderByAggregateInput {
  groupId: SortOrder
  userUuid: SortOrder
}

type GroupUserMinAggregate {
  groupId: Int
  userUuid: String
}

input GroupUserMinOrderByAggregateInput {
  groupId: SortOrder
  userUuid: SortOrder
}

input GroupUserOrderByRelationAggregateInput {
  _count: SortOrder
}

input GroupUserOrderByWithAggregationInput {
  _avg: GroupUserAvgOrderByAggregateInput
  _count: GroupUserCountOrderByAggregateInput
  _max: GroupUserMaxOrderByAggregateInput
  _min: GroupUserMinOrderByAggregateInput
  _sum: GroupUserSumOrderByAggregateInput
  groupId: SortOrder
  userUuid: SortOrder
}

input GroupUserOrderByWithRelationInput {
  group: GroupOrderByWithRelationInput
  groupId: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum GroupUserScalarFieldEnum {
  groupId
  userUuid
}

input GroupUserScalarWhereInput {
  AND: [GroupUserScalarWhereInput!]
  NOT: [GroupUserScalarWhereInput!]
  OR: [GroupUserScalarWhereInput!]
  groupId: IntFilter
  userUuid: UuidFilter
}

input GroupUserScalarWhereWithAggregatesInput {
  AND: [GroupUserScalarWhereWithAggregatesInput!]
  NOT: [GroupUserScalarWhereWithAggregatesInput!]
  OR: [GroupUserScalarWhereWithAggregatesInput!]
  groupId: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type GroupUserSumAggregate {
  groupId: Int
}

input GroupUserSumOrderByAggregateInput {
  groupId: SortOrder
}

input GroupUserUncheckedCreateInput {
  groupId: Int
  userUuid: String!
}

input GroupUserUncheckedCreateNestedManyWithoutGroupInput {
  connect: [GroupUserWhereUniqueInput!]
  connectOrCreate: [GroupUserCreateOrConnectWithoutGroupInput!]
  create: [GroupUserCreateWithoutGroupInput!]
  createMany: GroupUserCreateManyGroupInputEnvelope
}

input GroupUserUncheckedCreateNestedManyWithoutUserInput {
  connect: [GroupUserWhereUniqueInput!]
  connectOrCreate: [GroupUserCreateOrConnectWithoutUserInput!]
  create: [GroupUserCreateWithoutUserInput!]
  createMany: GroupUserCreateManyUserInputEnvelope
}

input GroupUserUncheckedCreateWithoutGroupInput {
  userUuid: String!
}

input GroupUserUncheckedCreateWithoutUserInput {
  groupId: Int
}

input GroupUserUncheckedUpdateInput {
  groupId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input GroupUserUncheckedUpdateManyInput {
  groupId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input GroupUserUncheckedUpdateManyWithoutGroupInput {
  userUuid: StringFieldUpdateOperationsInput
}

input GroupUserUncheckedUpdateManyWithoutGroupNestedInput {
  connect: [GroupUserWhereUniqueInput!]
  connectOrCreate: [GroupUserCreateOrConnectWithoutGroupInput!]
  create: [GroupUserCreateWithoutGroupInput!]
  createMany: GroupUserCreateManyGroupInputEnvelope
  delete: [GroupUserWhereUniqueInput!]
  deleteMany: [GroupUserScalarWhereInput!]
  disconnect: [GroupUserWhereUniqueInput!]
  set: [GroupUserWhereUniqueInput!]
  update: [GroupUserUpdateWithWhereUniqueWithoutGroupInput!]
  updateMany: [GroupUserUpdateManyWithWhereWithoutGroupInput!]
  upsert: [GroupUserUpsertWithWhereUniqueWithoutGroupInput!]
}

input GroupUserUncheckedUpdateManyWithoutUserInput {
  groupId: IntFieldUpdateOperationsInput
}

input GroupUserUncheckedUpdateManyWithoutUserNestedInput {
  connect: [GroupUserWhereUniqueInput!]
  connectOrCreate: [GroupUserCreateOrConnectWithoutUserInput!]
  create: [GroupUserCreateWithoutUserInput!]
  createMany: GroupUserCreateManyUserInputEnvelope
  delete: [GroupUserWhereUniqueInput!]
  deleteMany: [GroupUserScalarWhereInput!]
  disconnect: [GroupUserWhereUniqueInput!]
  set: [GroupUserWhereUniqueInput!]
  update: [GroupUserUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [GroupUserUpdateManyWithWhereWithoutUserInput!]
  upsert: [GroupUserUpsertWithWhereUniqueWithoutUserInput!]
}

input GroupUserUncheckedUpdateWithoutGroupInput {
  userUuid: StringFieldUpdateOperationsInput
}

input GroupUserUncheckedUpdateWithoutUserInput {
  groupId: IntFieldUpdateOperationsInput
}

input GroupUserUpdateManyWithWhereWithoutGroupInput {
  data: GroupUserUncheckedUpdateManyWithoutGroupInput!
  where: GroupUserScalarWhereInput!
}

input GroupUserUpdateManyWithWhereWithoutUserInput {
  data: GroupUserUncheckedUpdateManyWithoutUserInput!
  where: GroupUserScalarWhereInput!
}

input GroupUserUpdateWithWhereUniqueWithoutGroupInput {
  data: GroupUserUncheckedUpdateWithoutGroupInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserUpdateWithWhereUniqueWithoutUserInput {
  data: GroupUserUncheckedUpdateWithoutUserInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserUpsertWithWhereUniqueWithoutGroupInput {
  create: GroupUserUncheckedCreateWithoutGroupInput!
  update: GroupUserUncheckedUpdateWithoutGroupInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserUpsertWithWhereUniqueWithoutUserInput {
  create: GroupUserUncheckedCreateWithoutUserInput!
  update: GroupUserUncheckedUpdateWithoutUserInput!
  where: GroupUserWhereUniqueInput!
}

input GroupUserWhereInput {
  AND: [GroupUserWhereInput!]
  NOT: [GroupUserWhereInput!]
  OR: [GroupUserWhereInput!]
  group: GroupRelationFilter
  groupId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input GroupUserWhereUniqueInput {
  AND: [GroupUserWhereInput!]
  NOT: [GroupUserWhereInput!]
  OR: [GroupUserWhereInput!]
  group: GroupRelationFilter
  groupId: IntFilter
  groupId_userUuid: GroupUserGroupIdUserUuidCompoundUniqueInput
  user: UserRelationFilter
  userUuid: UuidFilter
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  board: BoardNullableRelationFilter
  boardId: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  groupMenbership: GroupMenbershipListRelationFilter
  groupUser: GroupUserListRelationFilter
  id: IntFilter
  name: StringFilter
  permission: PermissionNullableRelationFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

input GroupWhereUniqueInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  board: BoardNullableRelationFilter
  boardId: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  groupMenbership: GroupMenbershipListRelationFilter
  groupUser: GroupUserListRelationFilter
  id: Int
  name: StringFilter
  permission: PermissionNullableRelationFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

type HistoryFlag {
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  flag: FieldFlags!
  id: Int!
  project: Project!
  projectId: Int!
  transitionAt: DateTimeISO!
}

type HistoryFlagAvgAggregate {
  id: Float
  projectId: Float
}

input HistoryFlagAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type HistoryFlagCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  flag: Int!
  id: Int!
  projectId: Int!
  transitionAt: Int!
}

input HistoryFlagCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  transitionAt: SortOrder
}

input HistoryFlagCreateManyCreatedByUserInput {
  createdAt: DateTimeISO
  flag: FieldFlags
  id: Int
  projectId: Int!
  transitionAt: DateTimeISO
}

input HistoryFlagCreateManyCreatedByUserInputEnvelope {
  data: [HistoryFlagCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input HistoryFlagCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  projectId: Int!
  transitionAt: DateTimeISO
}

input HistoryFlagCreateManyProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  transitionAt: DateTimeISO
}

input HistoryFlagCreateManyProjectInputEnvelope {
  data: [HistoryFlagCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input HistoryFlagCreateNestedManyWithoutProjectInput {
  connect: [HistoryFlagWhereUniqueInput!]
  connectOrCreate: [HistoryFlagCreateOrConnectWithoutProjectInput!]
  create: [HistoryFlagCreateWithoutProjectInput!]
  createMany: HistoryFlagCreateManyProjectInputEnvelope
}

input HistoryFlagCreateOrConnectWithoutCreatedByUserInput {
  create: HistoryFlagUncheckedCreateWithoutCreatedByUserInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagCreateOrConnectWithoutProjectInput {
  create: HistoryFlagUncheckedCreateWithoutProjectInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  flag: FieldFlags
  project: ProjectCreateNestedOneWithoutHistoryFlagInput!
  transitionAt: DateTimeISO
}

input HistoryFlagCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutHistoryFlagCreatedByInput
  flag: FieldFlags
  transitionAt: DateTimeISO
}

type HistoryFlagGroupBy {
  _avg: HistoryFlagAvgAggregate
  _count: HistoryFlagCountAggregate
  _max: HistoryFlagMaxAggregate
  _min: HistoryFlagMinAggregate
  _sum: HistoryFlagSumAggregate
  createdAt: DateTimeISO!
  createdBy: String
  flag: FieldFlags!
  id: Int!
  projectId: Int!
  transitionAt: DateTimeISO!
}

input HistoryFlagListRelationFilter {
  every: HistoryFlagWhereInput
  none: HistoryFlagWhereInput
  some: HistoryFlagWhereInput
}

type HistoryFlagMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  projectId: Int
  transitionAt: DateTimeISO
}

input HistoryFlagMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  transitionAt: SortOrder
}

type HistoryFlagMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  projectId: Int
  transitionAt: DateTimeISO
}

input HistoryFlagMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  transitionAt: SortOrder
}

input HistoryFlagOrderByRelationAggregateInput {
  _count: SortOrder
}

input HistoryFlagOrderByWithAggregationInput {
  _avg: HistoryFlagAvgOrderByAggregateInput
  _count: HistoryFlagCountOrderByAggregateInput
  _max: HistoryFlagMaxOrderByAggregateInput
  _min: HistoryFlagMinOrderByAggregateInput
  _sum: HistoryFlagSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  flag: SortOrder
  id: SortOrder
  projectId: SortOrder
  transitionAt: SortOrder
}

input HistoryFlagOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  flag: SortOrder
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  transitionAt: SortOrder
}

enum HistoryFlagScalarFieldEnum {
  createdAt
  createdBy
  flag
  id
  projectId
  transitionAt
}

input HistoryFlagScalarWhereInput {
  AND: [HistoryFlagScalarWhereInput!]
  NOT: [HistoryFlagScalarWhereInput!]
  OR: [HistoryFlagScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  flag: EnumFieldFlagsFilter
  id: IntFilter
  projectId: IntFilter
  transitionAt: DateTimeFilter
}

input HistoryFlagScalarWhereWithAggregatesInput {
  AND: [HistoryFlagScalarWhereWithAggregatesInput!]
  NOT: [HistoryFlagScalarWhereWithAggregatesInput!]
  OR: [HistoryFlagScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  flag: EnumFieldFlagsWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  transitionAt: DateTimeWithAggregatesFilter
}

type HistoryFlagSumAggregate {
  id: Int
  projectId: Int
}

input HistoryFlagSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input HistoryFlagUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  projectId: Int!
  transitionAt: DateTimeISO
}

input HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [HistoryFlagWhereUniqueInput!]
  connectOrCreate: [HistoryFlagCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryFlagCreateWithoutCreatedByUserInput!]
  createMany: HistoryFlagCreateManyCreatedByUserInputEnvelope
}

input HistoryFlagUncheckedCreateNestedManyWithoutProjectInput {
  connect: [HistoryFlagWhereUniqueInput!]
  connectOrCreate: [HistoryFlagCreateOrConnectWithoutProjectInput!]
  create: [HistoryFlagCreateWithoutProjectInput!]
  createMany: HistoryFlagCreateManyProjectInputEnvelope
}

input HistoryFlagUncheckedCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  flag: FieldFlags
  id: Int
  projectId: Int!
  transitionAt: DateTimeISO
}

input HistoryFlagUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  flag: FieldFlags
  id: Int
  transitionAt: DateTimeISO
}

input HistoryFlagUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUncheckedUpdateManyWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [HistoryFlagWhereUniqueInput!]
  connectOrCreate: [HistoryFlagCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryFlagCreateWithoutCreatedByUserInput!]
  createMany: HistoryFlagCreateManyCreatedByUserInputEnvelope
  delete: [HistoryFlagWhereUniqueInput!]
  deleteMany: [HistoryFlagScalarWhereInput!]
  disconnect: [HistoryFlagWhereUniqueInput!]
  set: [HistoryFlagWhereUniqueInput!]
  update: [HistoryFlagUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [HistoryFlagUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [HistoryFlagUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input HistoryFlagUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [HistoryFlagWhereUniqueInput!]
  connectOrCreate: [HistoryFlagCreateOrConnectWithoutProjectInput!]
  create: [HistoryFlagCreateWithoutProjectInput!]
  createMany: HistoryFlagCreateManyProjectInputEnvelope
  delete: [HistoryFlagWhereUniqueInput!]
  deleteMany: [HistoryFlagScalarWhereInput!]
  disconnect: [HistoryFlagWhereUniqueInput!]
  set: [HistoryFlagWhereUniqueInput!]
  update: [HistoryFlagUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [HistoryFlagUpdateManyWithWhereWithoutProjectInput!]
  upsert: [HistoryFlagUpsertWithWhereUniqueWithoutProjectInput!]
}

input HistoryFlagUncheckedUpdateWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  flag: EnumFieldFlagsFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryFlagUpdateManyWithWhereWithoutCreatedByUserInput {
  data: HistoryFlagUncheckedUpdateManyWithoutCreatedByUserInput!
  where: HistoryFlagScalarWhereInput!
}

input HistoryFlagUpdateManyWithWhereWithoutProjectInput {
  data: HistoryFlagUncheckedUpdateManyWithoutProjectInput!
  where: HistoryFlagScalarWhereInput!
}

input HistoryFlagUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: HistoryFlagUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagUpdateWithWhereUniqueWithoutProjectInput {
  data: HistoryFlagUncheckedUpdateWithoutProjectInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: HistoryFlagUncheckedCreateWithoutCreatedByUserInput!
  update: HistoryFlagUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagUpsertWithWhereUniqueWithoutProjectInput {
  create: HistoryFlagUncheckedCreateWithoutProjectInput!
  update: HistoryFlagUncheckedUpdateWithoutProjectInput!
  where: HistoryFlagWhereUniqueInput!
}

input HistoryFlagWhereInput {
  AND: [HistoryFlagWhereInput!]
  NOT: [HistoryFlagWhereInput!]
  OR: [HistoryFlagWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  flag: EnumFieldFlagsFilter
  id: IntFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  transitionAt: DateTimeFilter
}

input HistoryFlagWhereUniqueInput {
  AND: [HistoryFlagWhereInput!]
  NOT: [HistoryFlagWhereInput!]
  OR: [HistoryFlagWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  flag: EnumFieldFlagsFilter
  id: Int
  project: ProjectRelationFilter
  projectId: IntFilter
  transitionAt: DateTimeFilter
}

type HistoryMonthlyRecurringRevenue {
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  id: Int!
  project: Project!
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO!
}

type HistoryMonthlyRecurringRevenueAvgAggregate {
  id: Float
  projectId: Float
  revenue: Float
}

input HistoryMonthlyRecurringRevenueAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
}

type HistoryMonthlyRecurringRevenueCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  projectId: Int!
  revenue: Int!
  transitionAt: Int!
}

input HistoryMonthlyRecurringRevenueCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
  transitionAt: SortOrder
}

input HistoryMonthlyRecurringRevenueCreateManyCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueCreateManyCreatedByUserInputEnvelope {
  data: [HistoryMonthlyRecurringRevenueCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input HistoryMonthlyRecurringRevenueCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueCreateManyProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueCreateManyProjectInputEnvelope {
  data: [HistoryMonthlyRecurringRevenueCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input HistoryMonthlyRecurringRevenueCreateNestedManyWithoutProjectInput {
  connect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  connectOrCreate: [HistoryMonthlyRecurringRevenueCreateOrConnectWithoutProjectInput!]
  create: [HistoryMonthlyRecurringRevenueCreateWithoutProjectInput!]
  createMany: HistoryMonthlyRecurringRevenueCreateManyProjectInputEnvelope
}

input HistoryMonthlyRecurringRevenueCreateOrConnectWithoutCreatedByUserInput {
  create: HistoryMonthlyRecurringRevenueUncheckedCreateWithoutCreatedByUserInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueCreateOrConnectWithoutProjectInput {
  create: HistoryMonthlyRecurringRevenueUncheckedCreateWithoutProjectInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  project: ProjectCreateNestedOneWithoutHistoryMonthlyRecurringRevenueInput!
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutHistoryMonthlyRecurringRevenueInput
  revenue: Float!
  transitionAt: DateTimeISO
}

type HistoryMonthlyRecurringRevenueGroupBy {
  _avg: HistoryMonthlyRecurringRevenueAvgAggregate
  _count: HistoryMonthlyRecurringRevenueCountAggregate
  _max: HistoryMonthlyRecurringRevenueMaxAggregate
  _min: HistoryMonthlyRecurringRevenueMinAggregate
  _sum: HistoryMonthlyRecurringRevenueSumAggregate
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO!
}

input HistoryMonthlyRecurringRevenueListRelationFilter {
  every: HistoryMonthlyRecurringRevenueWhereInput
  none: HistoryMonthlyRecurringRevenueWhereInput
  some: HistoryMonthlyRecurringRevenueWhereInput
}

type HistoryMonthlyRecurringRevenueMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int
  revenue: Float
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
  transitionAt: SortOrder
}

type HistoryMonthlyRecurringRevenueMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int
  revenue: Float
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
  transitionAt: SortOrder
}

input HistoryMonthlyRecurringRevenueOrderByRelationAggregateInput {
  _count: SortOrder
}

input HistoryMonthlyRecurringRevenueOrderByWithAggregationInput {
  _avg: HistoryMonthlyRecurringRevenueAvgOrderByAggregateInput
  _count: HistoryMonthlyRecurringRevenueCountOrderByAggregateInput
  _max: HistoryMonthlyRecurringRevenueMaxOrderByAggregateInput
  _min: HistoryMonthlyRecurringRevenueMinOrderByAggregateInput
  _sum: HistoryMonthlyRecurringRevenueSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
  transitionAt: SortOrder
}

input HistoryMonthlyRecurringRevenueOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  revenue: SortOrder
  transitionAt: SortOrder
}

enum HistoryMonthlyRecurringRevenueScalarFieldEnum {
  createdAt
  createdBy
  id
  projectId
  revenue
  transitionAt
}

input HistoryMonthlyRecurringRevenueScalarWhereInput {
  AND: [HistoryMonthlyRecurringRevenueScalarWhereInput!]
  NOT: [HistoryMonthlyRecurringRevenueScalarWhereInput!]
  OR: [HistoryMonthlyRecurringRevenueScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  projectId: IntFilter
  revenue: FloatFilter
  transitionAt: DateTimeFilter
}

input HistoryMonthlyRecurringRevenueScalarWhereWithAggregatesInput {
  AND: [HistoryMonthlyRecurringRevenueScalarWhereWithAggregatesInput!]
  NOT: [HistoryMonthlyRecurringRevenueScalarWhereWithAggregatesInput!]
  OR: [HistoryMonthlyRecurringRevenueScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  revenue: FloatWithAggregatesFilter
  transitionAt: DateTimeWithAggregatesFilter
}

type HistoryMonthlyRecurringRevenueSumAggregate {
  id: Int
  projectId: Int
  revenue: Float
}

input HistoryMonthlyRecurringRevenueSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  revenue: SortOrder
}

input HistoryMonthlyRecurringRevenueUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  connectOrCreate: [HistoryMonthlyRecurringRevenueCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryMonthlyRecurringRevenueCreateWithoutCreatedByUserInput!]
  createMany: HistoryMonthlyRecurringRevenueCreateManyCreatedByUserInputEnvelope
}

input HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput {
  connect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  connectOrCreate: [HistoryMonthlyRecurringRevenueCreateOrConnectWithoutProjectInput!]
  create: [HistoryMonthlyRecurringRevenueCreateWithoutProjectInput!]
  createMany: HistoryMonthlyRecurringRevenueCreateManyProjectInputEnvelope
}

input HistoryMonthlyRecurringRevenueUncheckedCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int!
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  revenue: Float!
  transitionAt: DateTimeISO
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  connectOrCreate: [HistoryMonthlyRecurringRevenueCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryMonthlyRecurringRevenueCreateWithoutCreatedByUserInput!]
  createMany: HistoryMonthlyRecurringRevenueCreateManyCreatedByUserInputEnvelope
  delete: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  deleteMany: [HistoryMonthlyRecurringRevenueScalarWhereInput!]
  disconnect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  set: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  update: [HistoryMonthlyRecurringRevenueUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [HistoryMonthlyRecurringRevenueUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [HistoryMonthlyRecurringRevenueUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  connectOrCreate: [HistoryMonthlyRecurringRevenueCreateOrConnectWithoutProjectInput!]
  create: [HistoryMonthlyRecurringRevenueCreateWithoutProjectInput!]
  createMany: HistoryMonthlyRecurringRevenueCreateManyProjectInputEnvelope
  delete: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  deleteMany: [HistoryMonthlyRecurringRevenueScalarWhereInput!]
  disconnect: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  set: [HistoryMonthlyRecurringRevenueWhereUniqueInput!]
  update: [HistoryMonthlyRecurringRevenueUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [HistoryMonthlyRecurringRevenueUpdateManyWithWhereWithoutProjectInput!]
  upsert: [HistoryMonthlyRecurringRevenueUpsertWithWhereUniqueWithoutProjectInput!]
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  revenue: FloatFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryMonthlyRecurringRevenueUpdateManyWithWhereWithoutCreatedByUserInput {
  data: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutCreatedByUserInput!
  where: HistoryMonthlyRecurringRevenueScalarWhereInput!
}

input HistoryMonthlyRecurringRevenueUpdateManyWithWhereWithoutProjectInput {
  data: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectInput!
  where: HistoryMonthlyRecurringRevenueScalarWhereInput!
}

input HistoryMonthlyRecurringRevenueUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueUpdateWithWhereUniqueWithoutProjectInput {
  data: HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutProjectInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: HistoryMonthlyRecurringRevenueUncheckedCreateWithoutCreatedByUserInput!
  update: HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueUpsertWithWhereUniqueWithoutProjectInput {
  create: HistoryMonthlyRecurringRevenueUncheckedCreateWithoutProjectInput!
  update: HistoryMonthlyRecurringRevenueUncheckedUpdateWithoutProjectInput!
  where: HistoryMonthlyRecurringRevenueWhereUniqueInput!
}

input HistoryMonthlyRecurringRevenueWhereInput {
  AND: [HistoryMonthlyRecurringRevenueWhereInput!]
  NOT: [HistoryMonthlyRecurringRevenueWhereInput!]
  OR: [HistoryMonthlyRecurringRevenueWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  id: IntFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  revenue: FloatFilter
  transitionAt: DateTimeFilter
}

input HistoryMonthlyRecurringRevenueWhereUniqueInput {
  AND: [HistoryMonthlyRecurringRevenueWhereInput!]
  NOT: [HistoryMonthlyRecurringRevenueWhereInput!]
  OR: [HistoryMonthlyRecurringRevenueWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  id: Int
  project: ProjectRelationFilter
  projectId: IntFilter
  revenue: FloatFilter
  transitionAt: DateTimeFilter
}

type HistoryStep {
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  id: Int!
  project: Project!
  projectId: Int!
  step: FieldSteps!
  transitionAt: DateTimeISO!
}

type HistoryStepAvgAggregate {
  id: Float
  projectId: Float
}

input HistoryStepAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type HistoryStepCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  projectId: Int!
  step: Int!
  transitionAt: Int!
}

input HistoryStepCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  step: SortOrder
  transitionAt: SortOrder
}

input HistoryStepCreateManyCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int!
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepCreateManyCreatedByUserInputEnvelope {
  data: [HistoryStepCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input HistoryStepCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int!
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepCreateManyProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepCreateManyProjectInputEnvelope {
  data: [HistoryStepCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input HistoryStepCreateNestedManyWithoutProjectInput {
  connect: [HistoryStepWhereUniqueInput!]
  connectOrCreate: [HistoryStepCreateOrConnectWithoutProjectInput!]
  create: [HistoryStepCreateWithoutProjectInput!]
  createMany: HistoryStepCreateManyProjectInputEnvelope
}

input HistoryStepCreateOrConnectWithoutCreatedByUserInput {
  create: HistoryStepUncheckedCreateWithoutCreatedByUserInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepCreateOrConnectWithoutProjectInput {
  create: HistoryStepUncheckedCreateWithoutProjectInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  project: ProjectCreateNestedOneWithoutHistoryStepInput!
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutHistoryStepCreatedByInput
  step: FieldSteps
  transitionAt: DateTimeISO
}

type HistoryStepGroupBy {
  _avg: HistoryStepAvgAggregate
  _count: HistoryStepCountAggregate
  _max: HistoryStepMaxAggregate
  _min: HistoryStepMinAggregate
  _sum: HistoryStepSumAggregate
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  projectId: Int!
  step: FieldSteps!
  transitionAt: DateTimeISO!
}

input HistoryStepListRelationFilter {
  every: HistoryStepWhereInput
  none: HistoryStepWhereInput
  some: HistoryStepWhereInput
}

type HistoryStepMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  step: SortOrder
  transitionAt: SortOrder
}

type HistoryStepMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  projectId: SortOrder
  step: SortOrder
  transitionAt: SortOrder
}

input HistoryStepOrderByRelationAggregateInput {
  _count: SortOrder
}

input HistoryStepOrderByWithAggregationInput {
  _avg: HistoryStepAvgOrderByAggregateInput
  _count: HistoryStepCountOrderByAggregateInput
  _max: HistoryStepMaxOrderByAggregateInput
  _min: HistoryStepMinOrderByAggregateInput
  _sum: HistoryStepSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  projectId: SortOrder
  step: SortOrder
  transitionAt: SortOrder
}

input HistoryStepOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  step: SortOrder
  transitionAt: SortOrder
}

enum HistoryStepScalarFieldEnum {
  createdAt
  createdBy
  id
  projectId
  step
  transitionAt
}

input HistoryStepScalarWhereInput {
  AND: [HistoryStepScalarWhereInput!]
  NOT: [HistoryStepScalarWhereInput!]
  OR: [HistoryStepScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  projectId: IntFilter
  step: EnumFieldStepsFilter
  transitionAt: DateTimeFilter
}

input HistoryStepScalarWhereWithAggregatesInput {
  AND: [HistoryStepScalarWhereWithAggregatesInput!]
  NOT: [HistoryStepScalarWhereWithAggregatesInput!]
  OR: [HistoryStepScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  step: EnumFieldStepsWithAggregatesFilter
  transitionAt: DateTimeWithAggregatesFilter
}

type HistoryStepSumAggregate {
  id: Int
  projectId: Int
}

input HistoryStepSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input HistoryStepUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  projectId: Int!
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [HistoryStepWhereUniqueInput!]
  connectOrCreate: [HistoryStepCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryStepCreateWithoutCreatedByUserInput!]
  createMany: HistoryStepCreateManyCreatedByUserInputEnvelope
}

input HistoryStepUncheckedCreateNestedManyWithoutProjectInput {
  connect: [HistoryStepWhereUniqueInput!]
  connectOrCreate: [HistoryStepCreateOrConnectWithoutProjectInput!]
  create: [HistoryStepCreateWithoutProjectInput!]
  createMany: HistoryStepCreateManyProjectInputEnvelope
}

input HistoryStepUncheckedCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int!
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  step: FieldSteps
  transitionAt: DateTimeISO
}

input HistoryStepUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUncheckedUpdateManyWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [HistoryStepWhereUniqueInput!]
  connectOrCreate: [HistoryStepCreateOrConnectWithoutCreatedByUserInput!]
  create: [HistoryStepCreateWithoutCreatedByUserInput!]
  createMany: HistoryStepCreateManyCreatedByUserInputEnvelope
  delete: [HistoryStepWhereUniqueInput!]
  deleteMany: [HistoryStepScalarWhereInput!]
  disconnect: [HistoryStepWhereUniqueInput!]
  set: [HistoryStepWhereUniqueInput!]
  update: [HistoryStepUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [HistoryStepUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [HistoryStepUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input HistoryStepUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [HistoryStepWhereUniqueInput!]
  connectOrCreate: [HistoryStepCreateOrConnectWithoutProjectInput!]
  create: [HistoryStepCreateWithoutProjectInput!]
  createMany: HistoryStepCreateManyProjectInputEnvelope
  delete: [HistoryStepWhereUniqueInput!]
  deleteMany: [HistoryStepScalarWhereInput!]
  disconnect: [HistoryStepWhereUniqueInput!]
  set: [HistoryStepWhereUniqueInput!]
  update: [HistoryStepUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [HistoryStepUpdateManyWithWhereWithoutProjectInput!]
  upsert: [HistoryStepUpsertWithWhereUniqueWithoutProjectInput!]
}

input HistoryStepUncheckedUpdateWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  step: EnumFieldStepsFieldUpdateOperationsInput
  transitionAt: DateTimeFieldUpdateOperationsInput
}

input HistoryStepUpdateManyWithWhereWithoutCreatedByUserInput {
  data: HistoryStepUncheckedUpdateManyWithoutCreatedByUserInput!
  where: HistoryStepScalarWhereInput!
}

input HistoryStepUpdateManyWithWhereWithoutProjectInput {
  data: HistoryStepUncheckedUpdateManyWithoutProjectInput!
  where: HistoryStepScalarWhereInput!
}

input HistoryStepUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: HistoryStepUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepUpdateWithWhereUniqueWithoutProjectInput {
  data: HistoryStepUncheckedUpdateWithoutProjectInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: HistoryStepUncheckedCreateWithoutCreatedByUserInput!
  update: HistoryStepUncheckedUpdateWithoutCreatedByUserInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepUpsertWithWhereUniqueWithoutProjectInput {
  create: HistoryStepUncheckedCreateWithoutProjectInput!
  update: HistoryStepUncheckedUpdateWithoutProjectInput!
  where: HistoryStepWhereUniqueInput!
}

input HistoryStepWhereInput {
  AND: [HistoryStepWhereInput!]
  NOT: [HistoryStepWhereInput!]
  OR: [HistoryStepWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  id: IntFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  step: EnumFieldStepsFilter
  transitionAt: DateTimeFilter
}

input HistoryStepWhereUniqueInput {
  AND: [HistoryStepWhereInput!]
  NOT: [HistoryStepWhereInput!]
  OR: [HistoryStepWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  id: Int
  project: ProjectRelationFilter
  projectId: IntFilter
  step: EnumFieldStepsFilter
  transitionAt: DateTimeFilter
}

input IClient {
  cnpj: String!
  email: String!
  name: String!
  password: String!
  sendEmail: Boolean
  type: String!
}

input IGeneratedTokenClient {
  uuid: String!
}

input ILaunchError {
  json: JSON!
}

input ILoginClient {
  email: String!
  password: String!
}

input InputCard {
  id: ID!
  order: Float!
}

input InputColumn {
  boardId: ID!
  card: [InputCard!]!
  id: ID!
  updatedBy: String
}

input InputHome {
  content: JSON
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Invest {
  id: Int!
  project(where: ProjectWhereInput): Project
  projectId: Int
  user: User!
  userUuid: String!
}

type InvestAvgAggregate {
  id: Float
  projectId: Float
}

input InvestAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type InvestCountAggregate {
  _all: Int!
  id: Int!
  projectId: Int!
  userUuid: Int!
}

input InvestCountOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  userUuid: SortOrder
}

input InvestCreateManyInput {
  id: Int
  projectId: Int
  userUuid: String!
}

input InvestCreateManyProjectInput {
  id: Int
  userUuid: String!
}

input InvestCreateManyProjectInputEnvelope {
  data: [InvestCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input InvestCreateManyUserInput {
  id: Int
  projectId: Int
}

input InvestCreateManyUserInputEnvelope {
  data: [InvestCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input InvestCreateNestedManyWithoutProjectInput {
  connect: [InvestWhereUniqueInput!]
  connectOrCreate: [InvestCreateOrConnectWithoutProjectInput!]
  create: [InvestCreateWithoutProjectInput!]
  createMany: InvestCreateManyProjectInputEnvelope
}

input InvestCreateOrConnectWithoutProjectInput {
  create: InvestUncheckedCreateWithoutProjectInput!
  where: InvestWhereUniqueInput!
}

input InvestCreateOrConnectWithoutUserInput {
  create: InvestUncheckedCreateWithoutUserInput!
  where: InvestWhereUniqueInput!
}

input InvestCreateWithoutProjectInput {
  user: UserCreateNestedOneWithoutInvestInput!
}

input InvestCreateWithoutUserInput {
  project: ProjectCreateNestedOneWithoutInvestInput
}

type InvestGroupBy {
  _avg: InvestAvgAggregate
  _count: InvestCountAggregate
  _max: InvestMaxAggregate
  _min: InvestMinAggregate
  _sum: InvestSumAggregate
  id: Int!
  projectId: Int
  userUuid: String!
}

input InvestListRelationFilter {
  every: InvestWhereInput
  none: InvestWhereInput
  some: InvestWhereInput
}

type InvestMaxAggregate {
  id: Int
  projectId: Int
  userUuid: String
}

input InvestMaxOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  userUuid: SortOrder
}

type InvestMinAggregate {
  id: Int
  projectId: Int
  userUuid: String
}

input InvestMinOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  userUuid: SortOrder
}

input InvestOrderByRelationAggregateInput {
  _count: SortOrder
}

input InvestOrderByWithAggregationInput {
  _avg: InvestAvgOrderByAggregateInput
  _count: InvestCountOrderByAggregateInput
  _max: InvestMaxOrderByAggregateInput
  _min: InvestMinOrderByAggregateInput
  _sum: InvestSumOrderByAggregateInput
  id: SortOrder
  projectId: SortOrderInput
  userUuid: SortOrder
}

input InvestOrderByWithRelationInput {
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrderInput
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum InvestScalarFieldEnum {
  id
  projectId
  userUuid
}

input InvestScalarWhereInput {
  AND: [InvestScalarWhereInput!]
  NOT: [InvestScalarWhereInput!]
  OR: [InvestScalarWhereInput!]
  id: IntFilter
  projectId: IntNullableFilter
  userUuid: UuidFilter
}

input InvestScalarWhereWithAggregatesInput {
  AND: [InvestScalarWhereWithAggregatesInput!]
  NOT: [InvestScalarWhereWithAggregatesInput!]
  OR: [InvestScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  projectId: IntNullableWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type InvestSumAggregate {
  id: Int
  projectId: Int
}

input InvestSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input InvestUncheckedCreateInput {
  id: Int
  projectId: Int
  userUuid: String!
}

input InvestUncheckedCreateNestedManyWithoutProjectInput {
  connect: [InvestWhereUniqueInput!]
  connectOrCreate: [InvestCreateOrConnectWithoutProjectInput!]
  create: [InvestCreateWithoutProjectInput!]
  createMany: InvestCreateManyProjectInputEnvelope
}

input InvestUncheckedCreateNestedManyWithoutUserInput {
  connect: [InvestWhereUniqueInput!]
  connectOrCreate: [InvestCreateOrConnectWithoutUserInput!]
  create: [InvestCreateWithoutUserInput!]
  createMany: InvestCreateManyUserInputEnvelope
}

input InvestUncheckedCreateWithoutProjectInput {
  id: Int
  userUuid: String!
}

input InvestUncheckedCreateWithoutUserInput {
  id: Int
  projectId: Int
}

input InvestUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input InvestUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input InvestUncheckedUpdateManyWithoutProjectInput {
  id: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input InvestUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [InvestWhereUniqueInput!]
  connectOrCreate: [InvestCreateOrConnectWithoutProjectInput!]
  create: [InvestCreateWithoutProjectInput!]
  createMany: InvestCreateManyProjectInputEnvelope
  delete: [InvestWhereUniqueInput!]
  deleteMany: [InvestScalarWhereInput!]
  disconnect: [InvestWhereUniqueInput!]
  set: [InvestWhereUniqueInput!]
  update: [InvestUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [InvestUpdateManyWithWhereWithoutProjectInput!]
  upsert: [InvestUpsertWithWhereUniqueWithoutProjectInput!]
}

input InvestUncheckedUpdateManyWithoutUserInput {
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
}

input InvestUncheckedUpdateManyWithoutUserNestedInput {
  connect: [InvestWhereUniqueInput!]
  connectOrCreate: [InvestCreateOrConnectWithoutUserInput!]
  create: [InvestCreateWithoutUserInput!]
  createMany: InvestCreateManyUserInputEnvelope
  delete: [InvestWhereUniqueInput!]
  deleteMany: [InvestScalarWhereInput!]
  disconnect: [InvestWhereUniqueInput!]
  set: [InvestWhereUniqueInput!]
  update: [InvestUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [InvestUpdateManyWithWhereWithoutUserInput!]
  upsert: [InvestUpsertWithWhereUniqueWithoutUserInput!]
}

input InvestUncheckedUpdateWithoutProjectInput {
  id: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input InvestUncheckedUpdateWithoutUserInput {
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
}

input InvestUpdateManyWithWhereWithoutProjectInput {
  data: InvestUncheckedUpdateManyWithoutProjectInput!
  where: InvestScalarWhereInput!
}

input InvestUpdateManyWithWhereWithoutUserInput {
  data: InvestUncheckedUpdateManyWithoutUserInput!
  where: InvestScalarWhereInput!
}

input InvestUpdateWithWhereUniqueWithoutProjectInput {
  data: InvestUncheckedUpdateWithoutProjectInput!
  where: InvestWhereUniqueInput!
}

input InvestUpdateWithWhereUniqueWithoutUserInput {
  data: InvestUncheckedUpdateWithoutUserInput!
  where: InvestWhereUniqueInput!
}

input InvestUpsertWithWhereUniqueWithoutProjectInput {
  create: InvestUncheckedCreateWithoutProjectInput!
  update: InvestUncheckedUpdateWithoutProjectInput!
  where: InvestWhereUniqueInput!
}

input InvestUpsertWithWhereUniqueWithoutUserInput {
  create: InvestUncheckedCreateWithoutUserInput!
  update: InvestUncheckedUpdateWithoutUserInput!
  where: InvestWhereUniqueInput!
}

input InvestWhereInput {
  AND: [InvestWhereInput!]
  NOT: [InvestWhereInput!]
  OR: [InvestWhereInput!]
  id: IntFilter
  project: ProjectNullableRelationFilter
  projectId: IntNullableFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input InvestWhereUniqueInput {
  AND: [InvestWhereInput!]
  NOT: [InvestWhereInput!]
  OR: [InvestWhereInput!]
  id: Int
  project: ProjectNullableRelationFilter
  projectId: IntNullableFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type JobFunction {
  _count: JobFunctionCount
  createdAt: DateTimeISO!
  deliverys: Int!
  id: Int!
  name: String!
  primitiveStrength(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): [PrimitiveStreenght!]!
  updatedAt: DateTimeISO!
  userJobFunction(cursor: UserJobFunctionWhereUniqueInput, distinct: [UserJobFunctionScalarFieldEnum!], orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): [UserJobFunction!]!
}

type JobFunctionAvgAggregate {
  deliverys: Float
  id: Float
}

input JobFunctionAvgOrderByAggregateInput {
  deliverys: SortOrder
  id: SortOrder
}

type JobFunctionCount {
  primitiveStrength(where: PrimitiveStreenghtWhereInput): Int!
  userJobFunction(where: UserJobFunctionWhereInput): Int!
}

type JobFunctionCountAggregate {
  _all: Int!
  createdAt: Int!
  deliverys: Int!
  id: Int!
  name: Int!
  updatedAt: Int!
}

input JobFunctionCountOrderByAggregateInput {
  createdAt: SortOrder
  deliverys: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input JobFunctionCreateManyInput {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String!
  updatedAt: DateTimeISO
}

input JobFunctionCreateNestedOneWithoutPrimitiveStrengthInput {
  connect: JobFunctionWhereUniqueInput
  connectOrCreate: JobFunctionCreateOrConnectWithoutPrimitiveStrengthInput
  create: JobFunctionUncheckedCreateWithoutPrimitiveStrengthInput
}

input JobFunctionCreateNestedOneWithoutUserJobFunctionInput {
  connect: JobFunctionWhereUniqueInput
  connectOrCreate: JobFunctionCreateOrConnectWithoutUserJobFunctionInput
  create: JobFunctionUncheckedCreateWithoutUserJobFunctionInput
}

input JobFunctionCreateOrConnectWithoutPrimitiveStrengthInput {
  create: JobFunctionUncheckedCreateWithoutPrimitiveStrengthInput!
  where: JobFunctionWhereUniqueInput!
}

input JobFunctionCreateOrConnectWithoutUserJobFunctionInput {
  create: JobFunctionUncheckedCreateWithoutUserJobFunctionInput!
  where: JobFunctionWhereUniqueInput!
}

type JobFunctionGroupBy {
  _avg: JobFunctionAvgAggregate
  _count: JobFunctionCountAggregate
  _max: JobFunctionMaxAggregate
  _min: JobFunctionMinAggregate
  _sum: JobFunctionSumAggregate
  createdAt: DateTimeISO!
  deliverys: Int!
  id: Int!
  name: String!
  updatedAt: DateTimeISO!
}

type JobFunctionMaxAggregate {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input JobFunctionMaxOrderByAggregateInput {
  createdAt: SortOrder
  deliverys: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

type JobFunctionMinAggregate {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input JobFunctionMinOrderByAggregateInput {
  createdAt: SortOrder
  deliverys: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input JobFunctionOrderByWithAggregationInput {
  _avg: JobFunctionAvgOrderByAggregateInput
  _count: JobFunctionCountOrderByAggregateInput
  _max: JobFunctionMaxOrderByAggregateInput
  _min: JobFunctionMinOrderByAggregateInput
  _sum: JobFunctionSumOrderByAggregateInput
  createdAt: SortOrder
  deliverys: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input JobFunctionOrderByWithRelationInput {
  createdAt: SortOrder
  deliverys: SortOrder
  id: SortOrder
  name: SortOrder
  primitiveStrength: PrimitiveStreenghtOrderByRelationAggregateInput
  updatedAt: SortOrder
  userJobFunction: UserJobFunctionOrderByRelationAggregateInput
}

input JobFunctionRelationFilter {
  is: JobFunctionWhereInput
  isNot: JobFunctionWhereInput
}

enum JobFunctionScalarFieldEnum {
  createdAt
  deliverys
  id
  name
  updatedAt
}

input JobFunctionScalarWhereWithAggregatesInput {
  AND: [JobFunctionScalarWhereWithAggregatesInput!]
  NOT: [JobFunctionScalarWhereWithAggregatesInput!]
  OR: [JobFunctionScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  deliverys: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type JobFunctionSumAggregate {
  deliverys: Int
  id: Int
}

input JobFunctionSumOrderByAggregateInput {
  deliverys: SortOrder
  id: SortOrder
}

input JobFunctionUncheckedCreateInput {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String!
  primitiveStrength: PrimitiveStreenghtUncheckedCreateNestedManyWithoutJobFunctionInput
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutJobFunctionInput
}

input JobFunctionUncheckedCreateWithoutPrimitiveStrengthInput {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String!
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutJobFunctionInput
}

input JobFunctionUncheckedCreateWithoutUserJobFunctionInput {
  createdAt: DateTimeISO
  deliverys: Int
  id: Int
  name: String!
  primitiveStrength: PrimitiveStreenghtUncheckedCreateNestedManyWithoutJobFunctionInput
  updatedAt: DateTimeISO
}

input JobFunctionUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deliverys: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  primitiveStrength: PrimitiveStreenghtUncheckedUpdateManyWithoutJobFunctionNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userJobFunction: UserJobFunctionUncheckedUpdateManyWithoutJobFunctionNestedInput
}

input JobFunctionUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  deliverys: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input JobFunctionWhereInput {
  AND: [JobFunctionWhereInput!]
  NOT: [JobFunctionWhereInput!]
  OR: [JobFunctionWhereInput!]
  createdAt: DateTimeFilter
  deliverys: IntFilter
  id: IntFilter
  name: StringFilter
  primitiveStrength: PrimitiveStreenghtListRelationFilter
  updatedAt: DateTimeFilter
  userJobFunction: UserJobFunctionListRelationFilter
}

input JobFunctionWhereUniqueInput {
  AND: [JobFunctionWhereInput!]
  NOT: [JobFunctionWhereInput!]
  OR: [JobFunctionWhereInput!]
  createdAt: DateTimeFilter
  deliverys: IntFilter
  id: Int
  name: String
  primitiveStrength: PrimitiveStreenghtListRelationFilter
  updatedAt: DateTimeFilter
  userJobFunction: UserJobFunctionListRelationFilter
}

input JsonFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedJsonFilter
  _min: NestedJsonFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Kr {
  cratedBy: String!
  createdAt: DateTimeISO!
  createdByUser: User!
  id: Int!
  objective: Objective!
  objectiveId: Int!
  progress: Float!
  target: Float!
  title: String!
  user: User!
  userUuid: String!
}

type KrAvgAggregate {
  id: Float
  objectiveId: Float
  progress: Float
  target: Float
}

input KrAvgOrderByAggregateInput {
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
}

type KrCommentProject {
  comments: JSON!
  createdAt: DateTimeISO!
  createdBy: String!
  id: Int!
  krId: Int!
  krProject: OkrProject!
  user: User!
}

type KrCommentProjectAvgAggregate {
  id: Float
  krId: Float
}

input KrCommentProjectAvgOrderByAggregateInput {
  id: SortOrder
  krId: SortOrder
}

type KrCommentProjectCountAggregate {
  _all: Int!
  comments: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  krId: Int!
}

input KrCommentProjectCountOrderByAggregateInput {
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
}

input KrCommentProjectCreateManyInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  id: Int
  krId: Int!
}

input KrCommentProjectCreateManyKrProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  id: Int
}

input KrCommentProjectCreateManyKrProjectInputEnvelope {
  data: [KrCommentProjectCreateManyKrProjectInput!]!
  skipDuplicates: Boolean
}

input KrCommentProjectCreateManyUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  id: Int
  krId: Int!
}

input KrCommentProjectCreateManyUserInputEnvelope {
  data: [KrCommentProjectCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input KrCommentProjectCreateNestedManyWithoutKrProjectInput {
  connect: [KrCommentProjectWhereUniqueInput!]
  connectOrCreate: [KrCommentProjectCreateOrConnectWithoutKrProjectInput!]
  create: [KrCommentProjectCreateWithoutKrProjectInput!]
  createMany: KrCommentProjectCreateManyKrProjectInputEnvelope
}

input KrCommentProjectCreateOrConnectWithoutKrProjectInput {
  create: KrCommentProjectUncheckedCreateWithoutKrProjectInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectCreateOrConnectWithoutUserInput {
  create: KrCommentProjectUncheckedCreateWithoutUserInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectCreateWithoutKrProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  user: UserCreateNestedOneWithoutKrCommentProjectInput!
}

input KrCommentProjectCreateWithoutUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  krProject: OkrProjectCreateNestedOneWithoutKrCommentsInput!
}

type KrCommentProjectGroupBy {
  _avg: KrCommentProjectAvgAggregate
  _count: KrCommentProjectCountAggregate
  _max: KrCommentProjectMaxAggregate
  _min: KrCommentProjectMinAggregate
  _sum: KrCommentProjectSumAggregate
  comments: JSON!
  createdAt: DateTimeISO!
  createdBy: String!
  id: Int!
  krId: Int!
}

input KrCommentProjectListRelationFilter {
  every: KrCommentProjectWhereInput
  none: KrCommentProjectWhereInput
  some: KrCommentProjectWhereInput
}

type KrCommentProjectMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int
}

input KrCommentProjectMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
}

type KrCommentProjectMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int
}

input KrCommentProjectMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
}

input KrCommentProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input KrCommentProjectOrderByWithAggregationInput {
  _avg: KrCommentProjectAvgOrderByAggregateInput
  _count: KrCommentProjectCountOrderByAggregateInput
  _max: KrCommentProjectMaxOrderByAggregateInput
  _min: KrCommentProjectMinOrderByAggregateInput
  _sum: KrCommentProjectSumOrderByAggregateInput
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
}

input KrCommentProjectOrderByWithRelationInput {
  comments: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
  krProject: OkrProjectOrderByWithRelationInput
  user: UserOrderByWithRelationInput
}

enum KrCommentProjectScalarFieldEnum {
  comments
  createdAt
  createdBy
  id
  krId
}

input KrCommentProjectScalarWhereInput {
  AND: [KrCommentProjectScalarWhereInput!]
  NOT: [KrCommentProjectScalarWhereInput!]
  OR: [KrCommentProjectScalarWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  id: IntFilter
  krId: IntFilter
}

input KrCommentProjectScalarWhereWithAggregatesInput {
  AND: [KrCommentProjectScalarWhereWithAggregatesInput!]
  NOT: [KrCommentProjectScalarWhereWithAggregatesInput!]
  OR: [KrCommentProjectScalarWhereWithAggregatesInput!]
  comments: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidWithAggregatesFilter
  id: IntWithAggregatesFilter
  krId: IntWithAggregatesFilter
}

type KrCommentProjectSumAggregate {
  id: Int
  krId: Int
}

input KrCommentProjectSumOrderByAggregateInput {
  id: SortOrder
  krId: SortOrder
}

input KrCommentProjectUncheckedCreateInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  id: Int
  krId: Int!
}

input KrCommentProjectUncheckedCreateNestedManyWithoutKrProjectInput {
  connect: [KrCommentProjectWhereUniqueInput!]
  connectOrCreate: [KrCommentProjectCreateOrConnectWithoutKrProjectInput!]
  create: [KrCommentProjectCreateWithoutKrProjectInput!]
  createMany: KrCommentProjectCreateManyKrProjectInputEnvelope
}

input KrCommentProjectUncheckedCreateNestedManyWithoutUserInput {
  connect: [KrCommentProjectWhereUniqueInput!]
  connectOrCreate: [KrCommentProjectCreateOrConnectWithoutUserInput!]
  create: [KrCommentProjectCreateWithoutUserInput!]
  createMany: KrCommentProjectCreateManyUserInputEnvelope
}

input KrCommentProjectUncheckedCreateWithoutKrProjectInput {
  comments: JSON!
  createdAt: DateTimeISO
  createdBy: String!
  id: Int
}

input KrCommentProjectUncheckedCreateWithoutUserInput {
  comments: JSON!
  createdAt: DateTimeISO
  id: Int
  krId: Int!
}

input KrCommentProjectUncheckedUpdateInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
}

input KrCommentProjectUncheckedUpdateManyInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
}

input KrCommentProjectUncheckedUpdateManyWithoutKrProjectInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input KrCommentProjectUncheckedUpdateManyWithoutKrProjectNestedInput {
  connect: [KrCommentProjectWhereUniqueInput!]
  connectOrCreate: [KrCommentProjectCreateOrConnectWithoutKrProjectInput!]
  create: [KrCommentProjectCreateWithoutKrProjectInput!]
  createMany: KrCommentProjectCreateManyKrProjectInputEnvelope
  delete: [KrCommentProjectWhereUniqueInput!]
  deleteMany: [KrCommentProjectScalarWhereInput!]
  disconnect: [KrCommentProjectWhereUniqueInput!]
  set: [KrCommentProjectWhereUniqueInput!]
  update: [KrCommentProjectUpdateWithWhereUniqueWithoutKrProjectInput!]
  updateMany: [KrCommentProjectUpdateManyWithWhereWithoutKrProjectInput!]
  upsert: [KrCommentProjectUpsertWithWhereUniqueWithoutKrProjectInput!]
}

input KrCommentProjectUncheckedUpdateManyWithoutUserInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
}

input KrCommentProjectUncheckedUpdateManyWithoutUserNestedInput {
  connect: [KrCommentProjectWhereUniqueInput!]
  connectOrCreate: [KrCommentProjectCreateOrConnectWithoutUserInput!]
  create: [KrCommentProjectCreateWithoutUserInput!]
  createMany: KrCommentProjectCreateManyUserInputEnvelope
  delete: [KrCommentProjectWhereUniqueInput!]
  deleteMany: [KrCommentProjectScalarWhereInput!]
  disconnect: [KrCommentProjectWhereUniqueInput!]
  set: [KrCommentProjectWhereUniqueInput!]
  update: [KrCommentProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [KrCommentProjectUpdateManyWithWhereWithoutUserInput!]
  upsert: [KrCommentProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input KrCommentProjectUncheckedUpdateWithoutKrProjectInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input KrCommentProjectUncheckedUpdateWithoutUserInput {
  comments: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
}

input KrCommentProjectUpdateManyWithWhereWithoutKrProjectInput {
  data: KrCommentProjectUncheckedUpdateManyWithoutKrProjectInput!
  where: KrCommentProjectScalarWhereInput!
}

input KrCommentProjectUpdateManyWithWhereWithoutUserInput {
  data: KrCommentProjectUncheckedUpdateManyWithoutUserInput!
  where: KrCommentProjectScalarWhereInput!
}

input KrCommentProjectUpdateWithWhereUniqueWithoutKrProjectInput {
  data: KrCommentProjectUncheckedUpdateWithoutKrProjectInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectUpdateWithWhereUniqueWithoutUserInput {
  data: KrCommentProjectUncheckedUpdateWithoutUserInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectUpsertWithWhereUniqueWithoutKrProjectInput {
  create: KrCommentProjectUncheckedCreateWithoutKrProjectInput!
  update: KrCommentProjectUncheckedUpdateWithoutKrProjectInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectUpsertWithWhereUniqueWithoutUserInput {
  create: KrCommentProjectUncheckedCreateWithoutUserInput!
  update: KrCommentProjectUncheckedUpdateWithoutUserInput!
  where: KrCommentProjectWhereUniqueInput!
}

input KrCommentProjectWhereInput {
  AND: [KrCommentProjectWhereInput!]
  NOT: [KrCommentProjectWhereInput!]
  OR: [KrCommentProjectWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  id: IntFilter
  krId: IntFilter
  krProject: OkrProjectRelationFilter
  user: UserRelationFilter
}

input KrCommentProjectWhereUniqueInput {
  AND: [KrCommentProjectWhereInput!]
  NOT: [KrCommentProjectWhereInput!]
  OR: [KrCommentProjectWhereInput!]
  comments: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  id: Int
  krId: IntFilter
  krProject: OkrProjectRelationFilter
  user: UserRelationFilter
}

type KrCountAggregate {
  _all: Int!
  cratedBy: Int!
  createdAt: Int!
  id: Int!
  objectiveId: Int!
  progress: Int!
  target: Int!
  title: Int!
  userUuid: Int!
}

input KrCountOrderByAggregateInput {
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
  title: SortOrder
  userUuid: SortOrder
}

input KrCreateManyCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrCreateManyCreatedByUserInputEnvelope {
  data: [KrCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input KrCreateManyInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrCreateManyObjectiveInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrCreateManyObjectiveInputEnvelope {
  data: [KrCreateManyObjectiveInput!]!
  skipDuplicates: Boolean
}

input KrCreateManyUserInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
}

input KrCreateManyUserInputEnvelope {
  data: [KrCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input KrCreateNestedManyWithoutObjectiveInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutObjectiveInput!]
  create: [KrCreateWithoutObjectiveInput!]
  createMany: KrCreateManyObjectiveInputEnvelope
}

input KrCreateOrConnectWithoutCreatedByUserInput {
  create: KrUncheckedCreateWithoutCreatedByUserInput!
  where: KrWhereUniqueInput!
}

input KrCreateOrConnectWithoutObjectiveInput {
  create: KrUncheckedCreateWithoutObjectiveInput!
  where: KrWhereUniqueInput!
}

input KrCreateOrConnectWithoutUserInput {
  create: KrUncheckedCreateWithoutUserInput!
  where: KrWhereUniqueInput!
}

input KrCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  objective: ObjectiveCreateNestedOneWithoutKrInput!
  progress: Float
  target: Float
  title: String!
  user: UserCreateNestedOneWithoutKrInput!
}

input KrCreateWithoutObjectiveInput {
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutKrCreatedByInput!
  progress: Float
  target: Float
  title: String!
  user: UserCreateNestedOneWithoutKrInput!
}

input KrCreateWithoutUserInput {
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutKrCreatedByInput!
  objective: ObjectiveCreateNestedOneWithoutKrInput!
  progress: Float
  target: Float
  title: String!
}

type KrGroupBy {
  _avg: KrAvgAggregate
  _count: KrCountAggregate
  _max: KrMaxAggregate
  _min: KrMinAggregate
  _sum: KrSumAggregate
  cratedBy: String!
  createdAt: DateTimeISO!
  id: Int!
  objectiveId: Int!
  progress: Float!
  target: Float!
  title: String!
  userUuid: String!
}

input KrListRelationFilter {
  every: KrWhereInput
  none: KrWhereInput
  some: KrWhereInput
}

type KrMaxAggregate {
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int
  progress: Float
  target: Float
  title: String
  userUuid: String
}

input KrMaxOrderByAggregateInput {
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
  title: SortOrder
  userUuid: SortOrder
}

type KrMinAggregate {
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int
  progress: Float
  target: Float
  title: String
  userUuid: String
}

input KrMinOrderByAggregateInput {
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
  title: SortOrder
  userUuid: SortOrder
}

input KrOrderByRelationAggregateInput {
  _count: SortOrder
}

input KrOrderByWithAggregationInput {
  _avg: KrAvgOrderByAggregateInput
  _count: KrCountOrderByAggregateInput
  _max: KrMaxOrderByAggregateInput
  _min: KrMinOrderByAggregateInput
  _sum: KrSumOrderByAggregateInput
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
  title: SortOrder
  userUuid: SortOrder
}

input KrOrderByWithRelationInput {
  cratedBy: SortOrder
  createdAt: SortOrder
  createdByUser: UserOrderByWithRelationInput
  id: SortOrder
  objective: ObjectiveOrderByWithRelationInput
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
  title: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum KrScalarFieldEnum {
  cratedBy
  createdAt
  id
  objectiveId
  progress
  target
  title
  userUuid
}

input KrScalarWhereInput {
  AND: [KrScalarWhereInput!]
  NOT: [KrScalarWhereInput!]
  OR: [KrScalarWhereInput!]
  cratedBy: UuidFilter
  createdAt: DateTimeFilter
  id: IntFilter
  objectiveId: IntFilter
  progress: FloatFilter
  target: FloatFilter
  title: StringFilter
  userUuid: UuidFilter
}

input KrScalarWhereWithAggregatesInput {
  AND: [KrScalarWhereWithAggregatesInput!]
  NOT: [KrScalarWhereWithAggregatesInput!]
  OR: [KrScalarWhereWithAggregatesInput!]
  cratedBy: UuidWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  objectiveId: IntWithAggregatesFilter
  progress: FloatWithAggregatesFilter
  target: FloatWithAggregatesFilter
  title: StringWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type KrSumAggregate {
  id: Int
  objectiveId: Int
  progress: Float
  target: Float
}

input KrSumOrderByAggregateInput {
  id: SortOrder
  objectiveId: SortOrder
  progress: SortOrder
  target: SortOrder
}

input KrUncheckedCreateInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutCreatedByUserInput!]
  create: [KrCreateWithoutCreatedByUserInput!]
  createMany: KrCreateManyCreatedByUserInputEnvelope
}

input KrUncheckedCreateNestedManyWithoutObjectiveInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutObjectiveInput!]
  create: [KrCreateWithoutObjectiveInput!]
  createMany: KrCreateManyObjectiveInputEnvelope
}

input KrUncheckedCreateNestedManyWithoutUserInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutUserInput!]
  create: [KrCreateWithoutUserInput!]
  createMany: KrCreateManyUserInputEnvelope
}

input KrUncheckedCreateWithoutCreatedByUserInput {
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrUncheckedCreateWithoutObjectiveInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  progress: Float
  target: Float
  title: String!
  userUuid: String!
}

input KrUncheckedCreateWithoutUserInput {
  cratedBy: String!
  createdAt: DateTimeISO
  id: Int
  objectiveId: Int!
  progress: Float
  target: Float
  title: String!
}

input KrUncheckedUpdateInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateManyInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateManyWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutCreatedByUserInput!]
  create: [KrCreateWithoutCreatedByUserInput!]
  createMany: KrCreateManyCreatedByUserInputEnvelope
  delete: [KrWhereUniqueInput!]
  deleteMany: [KrScalarWhereInput!]
  disconnect: [KrWhereUniqueInput!]
  set: [KrWhereUniqueInput!]
  update: [KrUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [KrUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [KrUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input KrUncheckedUpdateManyWithoutObjectiveInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateManyWithoutObjectiveNestedInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutObjectiveInput!]
  create: [KrCreateWithoutObjectiveInput!]
  createMany: KrCreateManyObjectiveInputEnvelope
  delete: [KrWhereUniqueInput!]
  deleteMany: [KrScalarWhereInput!]
  disconnect: [KrWhereUniqueInput!]
  set: [KrWhereUniqueInput!]
  update: [KrUpdateWithWhereUniqueWithoutObjectiveInput!]
  updateMany: [KrUpdateManyWithWhereWithoutObjectiveInput!]
  upsert: [KrUpsertWithWhereUniqueWithoutObjectiveInput!]
}

input KrUncheckedUpdateManyWithoutUserInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateManyWithoutUserNestedInput {
  connect: [KrWhereUniqueInput!]
  connectOrCreate: [KrCreateOrConnectWithoutUserInput!]
  create: [KrCreateWithoutUserInput!]
  createMany: KrCreateManyUserInputEnvelope
  delete: [KrWhereUniqueInput!]
  deleteMany: [KrScalarWhereInput!]
  disconnect: [KrWhereUniqueInput!]
  set: [KrWhereUniqueInput!]
  update: [KrUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [KrUpdateManyWithWhereWithoutUserInput!]
  upsert: [KrUpsertWithWhereUniqueWithoutUserInput!]
}

input KrUncheckedUpdateWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateWithoutObjectiveInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input KrUncheckedUpdateWithoutUserInput {
  cratedBy: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input KrUpdateManyWithWhereWithoutCreatedByUserInput {
  data: KrUncheckedUpdateManyWithoutCreatedByUserInput!
  where: KrScalarWhereInput!
}

input KrUpdateManyWithWhereWithoutObjectiveInput {
  data: KrUncheckedUpdateManyWithoutObjectiveInput!
  where: KrScalarWhereInput!
}

input KrUpdateManyWithWhereWithoutUserInput {
  data: KrUncheckedUpdateManyWithoutUserInput!
  where: KrScalarWhereInput!
}

input KrUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: KrUncheckedUpdateWithoutCreatedByUserInput!
  where: KrWhereUniqueInput!
}

input KrUpdateWithWhereUniqueWithoutObjectiveInput {
  data: KrUncheckedUpdateWithoutObjectiveInput!
  where: KrWhereUniqueInput!
}

input KrUpdateWithWhereUniqueWithoutUserInput {
  data: KrUncheckedUpdateWithoutUserInput!
  where: KrWhereUniqueInput!
}

input KrUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: KrUncheckedCreateWithoutCreatedByUserInput!
  update: KrUncheckedUpdateWithoutCreatedByUserInput!
  where: KrWhereUniqueInput!
}

input KrUpsertWithWhereUniqueWithoutObjectiveInput {
  create: KrUncheckedCreateWithoutObjectiveInput!
  update: KrUncheckedUpdateWithoutObjectiveInput!
  where: KrWhereUniqueInput!
}

input KrUpsertWithWhereUniqueWithoutUserInput {
  create: KrUncheckedCreateWithoutUserInput!
  update: KrUncheckedUpdateWithoutUserInput!
  where: KrWhereUniqueInput!
}

input KrWhereInput {
  AND: [KrWhereInput!]
  NOT: [KrWhereInput!]
  OR: [KrWhereInput!]
  cratedBy: UuidFilter
  createdAt: DateTimeFilter
  createdByUser: UserRelationFilter
  id: IntFilter
  objective: ObjectiveRelationFilter
  objectiveId: IntFilter
  progress: FloatFilter
  target: FloatFilter
  title: StringFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input KrWhereUniqueInput {
  AND: [KrWhereInput!]
  NOT: [KrWhereInput!]
  OR: [KrWhereInput!]
  cratedBy: UuidFilter
  createdAt: DateTimeFilter
  createdByUser: UserRelationFilter
  id: Int
  objective: ObjectiveRelationFilter
  objectiveId: IntFilter
  progress: FloatFilter
  target: FloatFilter
  title: StringFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input LoginInput {
  email: String!
  password: String!
  userName: String
}

input LoginInputMindforge {
  email: String!
  password: String!
  userName: String
}

type Mutation {
  createManyAcessHistoryUser(data: [AcessHistoryUserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyArchives(data: [ArchivesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBoard(data: [BoardCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBoardMenbership(data: [BoardMenbershipCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCard(data: [CardCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCardAssignment(data: [CardAssignmentCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCardComment(data: [CardCommentCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCardMovement(data: [CardMovementCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCardTags(data: [CardTagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyClient(data: [ClientCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyColumn(data: [ColumnCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCommentProject(data: [CommentProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCsat(data: [CsatCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyField(data: [FieldCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyFieldColumn(data: [FieldColumnCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyFieldsValue(data: [FieldsValueCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGroup(data: [GroupCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGroupMenbership(data: [GroupMenbershipCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGroupUser(data: [GroupUserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyHistoryFlag(data: [HistoryFlagCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyHistoryMonthlyRecurringRevenue(data: [HistoryMonthlyRecurringRevenueCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyHistoryStep(data: [HistoryStepCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInvest(data: [InvestCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyJobFunction(data: [JobFunctionCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyKr(data: [KrCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyKrCommentProject(data: [KrCommentProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNotfy(data: [NotfyCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyObjective(data: [ObjectiveCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOkrObjectiveProject(data: [OkrObjectiveProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOkrProject(data: [OkrProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOkrProjectHistory(data: [OkrProjectHistoryCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOrganization(data: [OrganizationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPermission(data: [PermissionCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPipefyProject(data: [PipefyProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPrimitiveFields(data: [PrimitiveFieldsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPrimitiveStreenght(data: [PrimitiveStreenghtCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProject(data: [ProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProjectManager(data: [ProjectManagerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProjectsBoards(data: [ProjectsBoardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyQnp(data: [QnpCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReceivedClient(data: [ReceivedClientCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySelfStructure(data: [SelfStructureCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyServiceLevelAgreement(data: [ServiceLevelAgreementCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyStep(data: [StepCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTag(data: [TagCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTask(data: [TaskCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTeam(data: [TeamCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyThrowErrorFront(data: [ThrowErrorFrontCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTokenFirebase(data: [TokenFirebaseCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUser(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUserJobFunction(data: [UserJobFunctionCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUserNotfy(data: [UserNotfyCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUserOrganization(data: [UserOrganizationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUserStep(data: [UserStepCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUserTeam(data: [UserTeamCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyViewedCommentProject(data: [ViewedCommentProjectCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAcessHistoryUser(data: AcessHistoryUserUncheckedCreateInput!): AcessHistoryUser!
  createOneArchives(data: ArchivesUncheckedCreateInput!): Archives!
  createOneBoard(data: BoardUncheckedCreateInput!): Board!
  createOneBoardMenbership(data: BoardMenbershipUncheckedCreateInput!): BoardMenbership!
  createOneCard(data: CardUncheckedCreateInput!): Card!
  createOneCardAssignment(data: CardAssignmentUncheckedCreateInput!): CardAssignment!
  createOneCardComment(data: CardCommentUncheckedCreateInput!): CardComment!
  createOneCardMovement(data: CardMovementUncheckedCreateInput!): CardMovement!
  createOneCardTags(data: CardTagsUncheckedCreateInput!): CardTags!
  createOneClient(data: ClientUncheckedCreateInput!): Client!
  createOneColumn(data: ColumnUncheckedCreateInput!): Column!
  createOneCommentProject(data: CommentProjectUncheckedCreateInput!): CommentProject!
  createOneCsat(data: CsatUncheckedCreateInput!): Csat!
  createOneField(data: FieldUncheckedCreateInput!): Field!
  createOneFieldColumn(data: FieldColumnUncheckedCreateInput!): FieldColumn!
  createOneFieldsValue(data: FieldsValueUncheckedCreateInput!): FieldsValue!
  createOneGroup(data: GroupUncheckedCreateInput!): Group!
  createOneGroupMenbership(data: GroupMenbershipUncheckedCreateInput!): GroupMenbership!
  createOneGroupUser(data: GroupUserUncheckedCreateInput!): GroupUser!
  createOneHistoryFlag(data: HistoryFlagUncheckedCreateInput!): HistoryFlag!
  createOneHistoryMonthlyRecurringRevenue(data: HistoryMonthlyRecurringRevenueUncheckedCreateInput!): HistoryMonthlyRecurringRevenue!
  createOneHistoryStep(data: HistoryStepUncheckedCreateInput!): HistoryStep!
  createOneInvest(data: InvestUncheckedCreateInput!): Invest!
  createOneJobFunction(data: JobFunctionUncheckedCreateInput!): JobFunction!
  createOneKr(data: KrUncheckedCreateInput!): Kr!
  createOneKrCommentProject(data: KrCommentProjectUncheckedCreateInput!): KrCommentProject!
  createOneNotfy(data: NotfyUncheckedCreateInput!): Notfy!
  createOneObjective(data: ObjectiveUncheckedCreateInput!): Objective!
  createOneOkrObjectiveProject(data: OkrObjectiveProjectUncheckedCreateInput!): OkrObjectiveProject!
  createOneOkrProject(data: OkrProjectUncheckedCreateInput!): OkrProject!
  createOneOkrProjectHistory(data: OkrProjectHistoryUncheckedCreateInput!): OkrProjectHistory!
  createOneOrganization(data: OrganizationUncheckedCreateInput!): Organization!
  createOnePermission(data: PermissionUncheckedCreateInput!): Permission!
  createOnePipefyProject(data: PipefyProjectUncheckedCreateInput!): PipefyProject!
  createOnePrimitiveFields(data: PrimitiveFieldsUncheckedCreateInput!): PrimitiveFields!
  createOnePrimitiveStreenght(data: PrimitiveStreenghtUncheckedCreateInput!): PrimitiveStreenght!
  createOneProject(data: ProjectUncheckedCreateInput!): Project!
  createOneProjectManager(data: ProjectManagerUncheckedCreateInput!): ProjectManager!
  createOneProjectsBoards(data: ProjectsBoardsUncheckedCreateInput!): ProjectsBoards!
  createOneQnp(data: QnpUncheckedCreateInput!): Qnp!
  createOneReceivedClient(data: ReceivedClientUncheckedCreateInput!): ReceivedClient!
  createOneSelfStructure(data: SelfStructureUncheckedCreateInput!): SelfStructure!
  createOneServiceLevelAgreement(data: ServiceLevelAgreementUncheckedCreateInput!): ServiceLevelAgreement!
  createOneStep(data: StepUncheckedCreateInput!): Step!
  createOneTag(data: TagUncheckedCreateInput!): Tag!
  createOneTask(data: TaskUncheckedCreateInput!): Task!
  createOneTeam(data: TeamUncheckedCreateInput!): Team!
  createOneThrowErrorFront(data: ThrowErrorFrontUncheckedCreateInput!): ThrowErrorFront!
  createOneTokenFirebase(data: TokenFirebaseUncheckedCreateInput!): TokenFirebase!
  createOneUser(data: UserUncheckedCreateInput!): User!
  createOneUserJobFunction(data: UserJobFunctionUncheckedCreateInput!): UserJobFunction!
  createOneUserNotfy(data: UserNotfyUncheckedCreateInput!): UserNotfy!
  createOneUserOrganization(data: UserOrganizationUncheckedCreateInput!): UserOrganization!
  createOneUserStep(data: UserStepUncheckedCreateInput!): UserStep!
  createOneUserTeam(data: UserTeamUncheckedCreateInput!): UserTeam!
  createOneViewedCommentProject(data: ViewedCommentProjectUncheckedCreateInput!): ViewedCommentProject!
  deleteManyAcessHistoryUser(where: AcessHistoryUserWhereInput): AffectedRowsOutput!
  deleteManyArchives(where: ArchivesWhereInput): AffectedRowsOutput!
  deleteManyBoard(where: BoardWhereInput): AffectedRowsOutput!
  deleteManyBoardMenbership(where: BoardMenbershipWhereInput): AffectedRowsOutput!
  deleteManyCard(where: CardWhereInput): AffectedRowsOutput!
  deleteManyCardAssignment(where: CardAssignmentWhereInput): AffectedRowsOutput!
  deleteManyCardComment(where: CardCommentWhereInput): AffectedRowsOutput!
  deleteManyCardMovement(where: CardMovementWhereInput): AffectedRowsOutput!
  deleteManyCardTags(where: CardTagsWhereInput): AffectedRowsOutput!
  deleteManyClient(where: ClientWhereInput): AffectedRowsOutput!
  deleteManyColumn(where: ColumnWhereInput): AffectedRowsOutput!
  deleteManyCommentProject(where: CommentProjectWhereInput): AffectedRowsOutput!
  deleteManyCsat(where: CsatWhereInput): AffectedRowsOutput!
  deleteManyField(where: FieldWhereInput): AffectedRowsOutput!
  deleteManyFieldColumn(where: FieldColumnWhereInput): AffectedRowsOutput!
  deleteManyFieldsValue(where: FieldsValueWhereInput): AffectedRowsOutput!
  deleteManyGroup(where: GroupWhereInput): AffectedRowsOutput!
  deleteManyGroupMenbership(where: GroupMenbershipWhereInput): AffectedRowsOutput!
  deleteManyGroupUser(where: GroupUserWhereInput): AffectedRowsOutput!
  deleteManyHistoryFlag(where: HistoryFlagWhereInput): AffectedRowsOutput!
  deleteManyHistoryMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereInput): AffectedRowsOutput!
  deleteManyHistoryStep(where: HistoryStepWhereInput): AffectedRowsOutput!
  deleteManyInvest(where: InvestWhereInput): AffectedRowsOutput!
  deleteManyJobFunction(where: JobFunctionWhereInput): AffectedRowsOutput!
  deleteManyKr(where: KrWhereInput): AffectedRowsOutput!
  deleteManyKrCommentProject(where: KrCommentProjectWhereInput): AffectedRowsOutput!
  deleteManyNotfy(where: NotfyWhereInput): AffectedRowsOutput!
  deleteManyObjective(where: ObjectiveWhereInput): AffectedRowsOutput!
  deleteManyOkrObjectiveProject(where: OkrObjectiveProjectWhereInput): AffectedRowsOutput!
  deleteManyOkrProject(where: OkrProjectWhereInput): AffectedRowsOutput!
  deleteManyOkrProjectHistory(where: OkrProjectHistoryWhereInput): AffectedRowsOutput!
  deleteManyOrganization(where: OrganizationWhereInput): AffectedRowsOutput!
  deleteManyPermission(where: PermissionWhereInput): AffectedRowsOutput!
  deleteManyPipefyProject(where: PipefyProjectWhereInput): AffectedRowsOutput!
  deleteManyPrimitiveFields(where: PrimitiveFieldsWhereInput): AffectedRowsOutput!
  deleteManyPrimitiveStreenght(where: PrimitiveStreenghtWhereInput): AffectedRowsOutput!
  deleteManyProject(where: ProjectWhereInput): AffectedRowsOutput!
  deleteManyProjectManager(where: ProjectManagerWhereInput): AffectedRowsOutput!
  deleteManyProjectsBoards(where: ProjectsBoardsWhereInput): AffectedRowsOutput!
  deleteManyQnp(where: QnpWhereInput): AffectedRowsOutput!
  deleteManyReceivedClient(where: ReceivedClientWhereInput): AffectedRowsOutput!
  deleteManySelfStructure(where: SelfStructureWhereInput): AffectedRowsOutput!
  deleteManyServiceLevelAgreement(where: ServiceLevelAgreementWhereInput): AffectedRowsOutput!
  deleteManyStep(where: StepWhereInput): AffectedRowsOutput!
  deleteManyTag(where: TagWhereInput): AffectedRowsOutput!
  deleteManyTask(where: TaskWhereInput): AffectedRowsOutput!
  deleteManyTeam(where: TeamWhereInput): AffectedRowsOutput!
  deleteManyThrowErrorFront(where: ThrowErrorFrontWhereInput): AffectedRowsOutput!
  deleteManyTokenFirebase(where: TokenFirebaseWhereInput): AffectedRowsOutput!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteManyUserJobFunction(where: UserJobFunctionWhereInput): AffectedRowsOutput!
  deleteManyUserNotfy(where: UserNotfyWhereInput): AffectedRowsOutput!
  deleteManyUserOrganization(where: UserOrganizationWhereInput): AffectedRowsOutput!
  deleteManyUserStep(where: UserStepWhereInput): AffectedRowsOutput!
  deleteManyUserTeam(where: UserTeamWhereInput): AffectedRowsOutput!
  deleteManyViewedCommentProject(where: ViewedCommentProjectWhereInput): AffectedRowsOutput!
  deleteOneAcessHistoryUser(where: AcessHistoryUserWhereUniqueInput!): AcessHistoryUser
  deleteOneArchives(where: ArchivesWhereUniqueInput!): Archives
  deleteOneBoard(where: BoardWhereUniqueInput!): Board
  deleteOneBoardMenbership(where: BoardMenbershipWhereUniqueInput!): BoardMenbership
  deleteOneCard(where: CardWhereUniqueInput!): Card
  deleteOneCardAssignment(where: CardAssignmentWhereUniqueInput!): CardAssignment
  deleteOneCardComment(where: CardCommentWhereUniqueInput!): CardComment
  deleteOneCardMovement(where: CardMovementWhereUniqueInput!): CardMovement
  deleteOneCardTags(where: CardTagsWhereUniqueInput!): CardTags
  deleteOneClient(where: ClientWhereUniqueInput!): Client
  deleteOneColumn(where: ColumnWhereUniqueInput!): Column
  deleteOneCommentProject(where: CommentProjectWhereUniqueInput!): CommentProject
  deleteOneCsat(where: CsatWhereUniqueInput!): Csat
  deleteOneField(where: FieldWhereUniqueInput!): Field
  deleteOneFieldColumn(where: FieldColumnWhereUniqueInput!): FieldColumn
  deleteOneFieldsValue(where: FieldsValueWhereUniqueInput!): FieldsValue
  deleteOneGroup(where: GroupWhereUniqueInput!): Group
  deleteOneGroupMenbership(where: GroupMenbershipWhereUniqueInput!): GroupMenbership
  deleteOneGroupUser(where: GroupUserWhereUniqueInput!): GroupUser
  deleteOneHistoryFlag(where: HistoryFlagWhereUniqueInput!): HistoryFlag
  deleteOneHistoryMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereUniqueInput!): HistoryMonthlyRecurringRevenue
  deleteOneHistoryStep(where: HistoryStepWhereUniqueInput!): HistoryStep
  deleteOneInvest(where: InvestWhereUniqueInput!): Invest
  deleteOneJobFunction(where: JobFunctionWhereUniqueInput!): JobFunction
  deleteOneKr(where: KrWhereUniqueInput!): Kr
  deleteOneKrCommentProject(where: KrCommentProjectWhereUniqueInput!): KrCommentProject
  deleteOneNotfy(where: NotfyWhereUniqueInput!): Notfy
  deleteOneObjective(where: ObjectiveWhereUniqueInput!): Objective
  deleteOneOkrObjectiveProject(where: OkrObjectiveProjectWhereUniqueInput!): OkrObjectiveProject
  deleteOneOkrProject(where: OkrProjectWhereUniqueInput!): OkrProject
  deleteOneOkrProjectHistory(where: OkrProjectHistoryWhereUniqueInput!): OkrProjectHistory
  deleteOneOrganization(where: OrganizationWhereUniqueInput!): Organization
  deleteOnePermission(where: PermissionWhereUniqueInput!): Permission
  deleteOnePipefyProject(where: PipefyProjectWhereUniqueInput!): PipefyProject
  deleteOnePrimitiveFields(where: PrimitiveFieldsWhereUniqueInput!): PrimitiveFields
  deleteOnePrimitiveStreenght(where: PrimitiveStreenghtWhereUniqueInput!): PrimitiveStreenght
  deleteOneProject(where: ProjectWhereUniqueInput!): Project
  deleteOneProjectManager(where: ProjectManagerWhereUniqueInput!): ProjectManager
  deleteOneProjectsBoards(where: ProjectsBoardsWhereUniqueInput!): ProjectsBoards
  deleteOneQnp(where: QnpWhereUniqueInput!): Qnp
  deleteOneReceivedClient(where: ReceivedClientWhereUniqueInput!): ReceivedClient
  deleteOneSelfStructure(where: SelfStructureWhereUniqueInput!): SelfStructure
  deleteOneServiceLevelAgreement(where: ServiceLevelAgreementWhereUniqueInput!): ServiceLevelAgreement
  deleteOneStep(where: StepWhereUniqueInput!): Step
  deleteOneTag(where: TagWhereUniqueInput!): Tag
  deleteOneTask(where: TaskWhereUniqueInput!): Task
  deleteOneTeam(where: TeamWhereUniqueInput!): Team
  deleteOneThrowErrorFront(where: ThrowErrorFrontWhereUniqueInput!): ThrowErrorFront
  deleteOneTokenFirebase(where: TokenFirebaseWhereUniqueInput!): TokenFirebase
  deleteOneUser(where: UserWhereUniqueInput!): User
  deleteOneUserJobFunction(where: UserJobFunctionWhereUniqueInput!): UserJobFunction
  deleteOneUserNotfy(where: UserNotfyWhereUniqueInput!): UserNotfy
  deleteOneUserOrganization(where: UserOrganizationWhereUniqueInput!): UserOrganization
  deleteOneUserStep(where: UserStepWhereUniqueInput!): UserStep
  deleteOneUserTeam(where: UserTeamWhereUniqueInput!): UserTeam
  deleteOneViewedCommentProject(where: ViewedCommentProjectWhereUniqueInput!): ViewedCommentProject
  forgotPasswordCustom(data: ForgotPassword!): UserTokenLogin!
  generatedTokenForClientCustom(data: IGeneratedTokenClient!): OGeneratedTokenClient!
  login(data: LoginInput!): UserTokenLogin!
  loginClientCustom(data: ILoginClient!): OLoginClient!
  loginMindforge(data: LoginInputMindforge!): UserToken!
  register(data: RegisterInputManual!): UserTokenLogin!
  registerClientCustom(data: IClient!): OutputClient!
  selfHome(data: InputHome!): OutputHome!
  sendStatusMovementCardCustom(data: cardProps!): Boolean!
  throwNewErrorCustom(data: ILaunchError!): Boolean!
  updateKanban(data: InputColumn!): OutputCard!
  updateManyAcessHistoryUser(data: AcessHistoryUserUncheckedUpdateManyInput!, where: AcessHistoryUserWhereInput): AffectedRowsOutput!
  updateManyArchives(data: ArchivesUncheckedUpdateManyInput!, where: ArchivesWhereInput): AffectedRowsOutput!
  updateManyBoard(data: BoardUncheckedUpdateManyInput!, where: BoardWhereInput): AffectedRowsOutput!
  updateManyBoardMenbership(data: BoardMenbershipUncheckedUpdateManyInput!, where: BoardMenbershipWhereInput): AffectedRowsOutput!
  updateManyCard(data: CardUncheckedUpdateManyInput!, where: CardWhereInput): AffectedRowsOutput!
  updateManyCardAssignment(data: CardAssignmentUncheckedUpdateManyInput!, where: CardAssignmentWhereInput): AffectedRowsOutput!
  updateManyCardComment(data: CardCommentUncheckedUpdateManyInput!, where: CardCommentWhereInput): AffectedRowsOutput!
  updateManyCardMovement(data: CardMovementUncheckedUpdateManyInput!, where: CardMovementWhereInput): AffectedRowsOutput!
  updateManyCardTags(data: CardTagsUncheckedUpdateManyInput!, where: CardTagsWhereInput): AffectedRowsOutput!
  updateManyClient(data: ClientUncheckedUpdateManyInput!, where: ClientWhereInput): AffectedRowsOutput!
  updateManyColumn(data: ColumnUncheckedUpdateManyInput!, where: ColumnWhereInput): AffectedRowsOutput!
  updateManyCommentProject(data: CommentProjectUncheckedUpdateManyInput!, where: CommentProjectWhereInput): AffectedRowsOutput!
  updateManyCsat(data: CsatUncheckedUpdateManyInput!, where: CsatWhereInput): AffectedRowsOutput!
  updateManyField(data: FieldUncheckedUpdateManyInput!, where: FieldWhereInput): AffectedRowsOutput!
  updateManyFieldColumn(data: FieldColumnUncheckedUpdateManyInput!, where: FieldColumnWhereInput): AffectedRowsOutput!
  updateManyFieldsValue(data: FieldsValueUncheckedUpdateManyInput!, where: FieldsValueWhereInput): AffectedRowsOutput!
  updateManyGroup(data: GroupUncheckedUpdateManyInput!, where: GroupWhereInput): AffectedRowsOutput!
  updateManyGroupMenbership(data: GroupMenbershipUncheckedUpdateManyInput!, where: GroupMenbershipWhereInput): AffectedRowsOutput!
  updateManyGroupUser(data: GroupUserUncheckedUpdateManyInput!, where: GroupUserWhereInput): AffectedRowsOutput!
  updateManyHistoryFlag(data: HistoryFlagUncheckedUpdateManyInput!, where: HistoryFlagWhereInput): AffectedRowsOutput!
  updateManyHistoryMonthlyRecurringRevenue(data: HistoryMonthlyRecurringRevenueUncheckedUpdateManyInput!, where: HistoryMonthlyRecurringRevenueWhereInput): AffectedRowsOutput!
  updateManyHistoryStep(data: HistoryStepUncheckedUpdateManyInput!, where: HistoryStepWhereInput): AffectedRowsOutput!
  updateManyInvest(data: InvestUncheckedUpdateManyInput!, where: InvestWhereInput): AffectedRowsOutput!
  updateManyJobFunction(data: JobFunctionUncheckedUpdateManyInput!, where: JobFunctionWhereInput): AffectedRowsOutput!
  updateManyKr(data: KrUncheckedUpdateManyInput!, where: KrWhereInput): AffectedRowsOutput!
  updateManyKrCommentProject(data: KrCommentProjectUncheckedUpdateManyInput!, where: KrCommentProjectWhereInput): AffectedRowsOutput!
  updateManyNotfy(data: NotfyUncheckedUpdateManyInput!, where: NotfyWhereInput): AffectedRowsOutput!
  updateManyObjective(data: ObjectiveUncheckedUpdateManyInput!, where: ObjectiveWhereInput): AffectedRowsOutput!
  updateManyOkrObjectiveProject(data: OkrObjectiveProjectUncheckedUpdateManyInput!, where: OkrObjectiveProjectWhereInput): AffectedRowsOutput!
  updateManyOkrProject(data: OkrProjectUncheckedUpdateManyInput!, where: OkrProjectWhereInput): AffectedRowsOutput!
  updateManyOkrProjectHistory(data: OkrProjectHistoryUncheckedUpdateManyInput!, where: OkrProjectHistoryWhereInput): AffectedRowsOutput!
  updateManyOrganization(data: OrganizationUncheckedUpdateManyInput!, where: OrganizationWhereInput): AffectedRowsOutput!
  updateManyPermission(data: PermissionUncheckedUpdateManyInput!, where: PermissionWhereInput): AffectedRowsOutput!
  updateManyPipefyProject(data: PipefyProjectUncheckedUpdateManyInput!, where: PipefyProjectWhereInput): AffectedRowsOutput!
  updateManyPrimitiveFields(data: PrimitiveFieldsUncheckedUpdateManyInput!, where: PrimitiveFieldsWhereInput): AffectedRowsOutput!
  updateManyPrimitiveStreenght(data: PrimitiveStreenghtUncheckedUpdateManyInput!, where: PrimitiveStreenghtWhereInput): AffectedRowsOutput!
  updateManyProject(data: ProjectUncheckedUpdateManyInput!, where: ProjectWhereInput): AffectedRowsOutput!
  updateManyProjectManager(data: ProjectManagerUncheckedUpdateManyInput!, where: ProjectManagerWhereInput): AffectedRowsOutput!
  updateManyProjectsBoards(data: ProjectsBoardsUncheckedUpdateManyInput!, where: ProjectsBoardsWhereInput): AffectedRowsOutput!
  updateManyQnp(data: QnpUncheckedUpdateManyInput!, where: QnpWhereInput): AffectedRowsOutput!
  updateManyReceivedClient(data: ReceivedClientUncheckedUpdateManyInput!, where: ReceivedClientWhereInput): AffectedRowsOutput!
  updateManySelfStructure(data: SelfStructureUncheckedUpdateManyInput!, where: SelfStructureWhereInput): AffectedRowsOutput!
  updateManyServiceLevelAgreement(data: ServiceLevelAgreementUncheckedUpdateManyInput!, where: ServiceLevelAgreementWhereInput): AffectedRowsOutput!
  updateManyStep(data: StepUncheckedUpdateManyInput!, where: StepWhereInput): AffectedRowsOutput!
  updateManyTag(data: TagUncheckedUpdateManyInput!, where: TagWhereInput): AffectedRowsOutput!
  updateManyTask(data: TaskUncheckedUpdateManyInput!, where: TaskWhereInput): AffectedRowsOutput!
  updateManyTeam(data: TeamUncheckedUpdateManyInput!, where: TeamWhereInput): AffectedRowsOutput!
  updateManyThrowErrorFront(data: ThrowErrorFrontUncheckedUpdateManyInput!, where: ThrowErrorFrontWhereInput): AffectedRowsOutput!
  updateManyTokenFirebase(data: TokenFirebaseUncheckedUpdateManyInput!, where: TokenFirebaseWhereInput): AffectedRowsOutput!
  updateManyUser(data: UserUncheckedUpdateManyInput!, where: UserWhereInput): AffectedRowsOutput!
  updateManyUserJobFunction(data: UserJobFunctionUncheckedUpdateManyInput!, where: UserJobFunctionWhereInput): AffectedRowsOutput!
  updateManyUserNotfy(data: UserNotfyUncheckedUpdateManyInput!, where: UserNotfyWhereInput): AffectedRowsOutput!
  updateManyUserOrganization(data: UserOrganizationUncheckedUpdateManyInput!, where: UserOrganizationWhereInput): AffectedRowsOutput!
  updateManyUserStep(data: UserStepUncheckedUpdateManyInput!, where: UserStepWhereInput): AffectedRowsOutput!
  updateManyUserTeam(data: UserTeamUncheckedUpdateManyInput!, where: UserTeamWhereInput): AffectedRowsOutput!
  updateManyViewedCommentProject(data: ViewedCommentProjectUncheckedUpdateManyInput!, where: ViewedCommentProjectWhereInput): AffectedRowsOutput!
  updateOneAcessHistoryUser(data: AcessHistoryUserUncheckedUpdateInput!, where: AcessHistoryUserWhereUniqueInput!): AcessHistoryUser
  updateOneArchives(data: ArchivesUncheckedUpdateInput!, where: ArchivesWhereUniqueInput!): Archives
  updateOneBoard(data: BoardUncheckedUpdateInput!, where: BoardWhereUniqueInput!): Board
  updateOneBoardMenbership(data: BoardMenbershipUncheckedUpdateInput!, where: BoardMenbershipWhereUniqueInput!): BoardMenbership
  updateOneCard(data: CardUncheckedUpdateInput!, where: CardWhereUniqueInput!): Card
  updateOneCardAssignment(data: CardAssignmentUncheckedUpdateInput!, where: CardAssignmentWhereUniqueInput!): CardAssignment
  updateOneCardComment(data: CardCommentUncheckedUpdateInput!, where: CardCommentWhereUniqueInput!): CardComment
  updateOneCardMovement(data: CardMovementUncheckedUpdateInput!, where: CardMovementWhereUniqueInput!): CardMovement
  updateOneCardTags(data: CardTagsUncheckedUpdateInput!, where: CardTagsWhereUniqueInput!): CardTags
  updateOneClient(data: ClientUncheckedUpdateInput!, where: ClientWhereUniqueInput!): Client
  updateOneColumn(data: ColumnUncheckedUpdateInput!, where: ColumnWhereUniqueInput!): Column
  updateOneCommentProject(data: CommentProjectUncheckedUpdateInput!, where: CommentProjectWhereUniqueInput!): CommentProject
  updateOneCsat(data: CsatUncheckedUpdateInput!, where: CsatWhereUniqueInput!): Csat
  updateOneField(data: FieldUncheckedUpdateInput!, where: FieldWhereUniqueInput!): Field
  updateOneFieldColumn(data: FieldColumnUncheckedUpdateInput!, where: FieldColumnWhereUniqueInput!): FieldColumn
  updateOneFieldsValue(data: FieldsValueUncheckedUpdateInput!, where: FieldsValueWhereUniqueInput!): FieldsValue
  updateOneGroup(data: GroupUncheckedUpdateInput!, where: GroupWhereUniqueInput!): Group
  updateOneGroupMenbership(data: GroupMenbershipUncheckedUpdateInput!, where: GroupMenbershipWhereUniqueInput!): GroupMenbership
  updateOneGroupUser(data: GroupUserUncheckedUpdateInput!, where: GroupUserWhereUniqueInput!): GroupUser
  updateOneHistoryCard: Boolean!
  updateOneHistoryFlag(data: HistoryFlagUncheckedUpdateInput!, where: HistoryFlagWhereUniqueInput!): HistoryFlag
  updateOneHistoryMonthlyRecurringRevenue(data: HistoryMonthlyRecurringRevenueUncheckedUpdateInput!, where: HistoryMonthlyRecurringRevenueWhereUniqueInput!): HistoryMonthlyRecurringRevenue
  updateOneHistoryStep(data: HistoryStepUncheckedUpdateInput!, where: HistoryStepWhereUniqueInput!): HistoryStep
  updateOneInvest(data: InvestUncheckedUpdateInput!, where: InvestWhereUniqueInput!): Invest
  updateOneJobFunction(data: JobFunctionUncheckedUpdateInput!, where: JobFunctionWhereUniqueInput!): JobFunction
  updateOneKr(data: KrUncheckedUpdateInput!, where: KrWhereUniqueInput!): Kr
  updateOneKrCommentProject(data: KrCommentProjectUncheckedUpdateInput!, where: KrCommentProjectWhereUniqueInput!): KrCommentProject
  updateOneNotfy(data: NotfyUncheckedUpdateInput!, where: NotfyWhereUniqueInput!): Notfy
  updateOneObjective(data: ObjectiveUncheckedUpdateInput!, where: ObjectiveWhereUniqueInput!): Objective
  updateOneOkrObjectiveProject(data: OkrObjectiveProjectUncheckedUpdateInput!, where: OkrObjectiveProjectWhereUniqueInput!): OkrObjectiveProject
  updateOneOkrProject(data: OkrProjectUncheckedUpdateInput!, where: OkrProjectWhereUniqueInput!): OkrProject
  updateOneOkrProjectHistory(data: OkrProjectHistoryUncheckedUpdateInput!, where: OkrProjectHistoryWhereUniqueInput!): OkrProjectHistory
  updateOneOrganization(data: OrganizationUncheckedUpdateInput!, where: OrganizationWhereUniqueInput!): Organization
  updateOnePermission(data: PermissionUncheckedUpdateInput!, where: PermissionWhereUniqueInput!): Permission
  updateOnePipefyProject(data: PipefyProjectUncheckedUpdateInput!, where: PipefyProjectWhereUniqueInput!): PipefyProject
  updateOnePrimitiveFields(data: PrimitiveFieldsUncheckedUpdateInput!, where: PrimitiveFieldsWhereUniqueInput!): PrimitiveFields
  updateOnePrimitiveStreenght(data: PrimitiveStreenghtUncheckedUpdateInput!, where: PrimitiveStreenghtWhereUniqueInput!): PrimitiveStreenght
  updateOneProject(data: ProjectUncheckedUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateOneProjectManager(data: ProjectManagerUncheckedUpdateInput!, where: ProjectManagerWhereUniqueInput!): ProjectManager
  updateOneProjectsBoards(data: ProjectsBoardsUncheckedUpdateInput!, where: ProjectsBoardsWhereUniqueInput!): ProjectsBoards
  updateOneQnp(data: QnpUncheckedUpdateInput!, where: QnpWhereUniqueInput!): Qnp
  updateOneReceivedClient(data: ReceivedClientUncheckedUpdateInput!, where: ReceivedClientWhereUniqueInput!): ReceivedClient
  updateOneSelfStructure(data: SelfStructureUncheckedUpdateInput!, where: SelfStructureWhereUniqueInput!): SelfStructure
  updateOneServiceLevelAgreement(data: ServiceLevelAgreementUncheckedUpdateInput!, where: ServiceLevelAgreementWhereUniqueInput!): ServiceLevelAgreement
  updateOneStep(data: StepUncheckedUpdateInput!, where: StepWhereUniqueInput!): Step
  updateOneTag(data: TagUncheckedUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateOneTask(data: TaskUncheckedUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateOneTeam(data: TeamUncheckedUpdateInput!, where: TeamWhereUniqueInput!): Team
  updateOneThrowErrorFront(data: ThrowErrorFrontUncheckedUpdateInput!, where: ThrowErrorFrontWhereUniqueInput!): ThrowErrorFront
  updateOneTokenFirebase(data: TokenFirebaseUncheckedUpdateInput!, where: TokenFirebaseWhereUniqueInput!): TokenFirebase
  updateOneUser(data: UserUncheckedUpdateInput!, where: UserWhereUniqueInput!): User
  updateOneUserJobFunction(data: UserJobFunctionUncheckedUpdateInput!, where: UserJobFunctionWhereUniqueInput!): UserJobFunction
  updateOneUserNotfy(data: UserNotfyUncheckedUpdateInput!, where: UserNotfyWhereUniqueInput!): UserNotfy
  updateOneUserOrganization(data: UserOrganizationUncheckedUpdateInput!, where: UserOrganizationWhereUniqueInput!): UserOrganization
  updateOneUserStep(data: UserStepUncheckedUpdateInput!, where: UserStepWhereUniqueInput!): UserStep
  updateOneUserTeam(data: UserTeamUncheckedUpdateInput!, where: UserTeamWhereUniqueInput!): UserTeam
  updateOneViewedCommentProject(data: ViewedCommentProjectUncheckedUpdateInput!, where: ViewedCommentProjectWhereUniqueInput!): ViewedCommentProject
  updateUserCustom(data: ChangeUser!): UserTokenLogin!
  upsertOneAcessHistoryUser(create: AcessHistoryUserUncheckedCreateInput!, update: AcessHistoryUserUncheckedUpdateInput!, where: AcessHistoryUserWhereUniqueInput!): AcessHistoryUser!
  upsertOneArchives(create: ArchivesUncheckedCreateInput!, update: ArchivesUncheckedUpdateInput!, where: ArchivesWhereUniqueInput!): Archives!
  upsertOneBoard(create: BoardUncheckedCreateInput!, update: BoardUncheckedUpdateInput!, where: BoardWhereUniqueInput!): Board!
  upsertOneBoardMenbership(create: BoardMenbershipUncheckedCreateInput!, update: BoardMenbershipUncheckedUpdateInput!, where: BoardMenbershipWhereUniqueInput!): BoardMenbership!
  upsertOneCard(create: CardUncheckedCreateInput!, update: CardUncheckedUpdateInput!, where: CardWhereUniqueInput!): Card!
  upsertOneCardAssignment(create: CardAssignmentUncheckedCreateInput!, update: CardAssignmentUncheckedUpdateInput!, where: CardAssignmentWhereUniqueInput!): CardAssignment!
  upsertOneCardComment(create: CardCommentUncheckedCreateInput!, update: CardCommentUncheckedUpdateInput!, where: CardCommentWhereUniqueInput!): CardComment!
  upsertOneCardMovement(create: CardMovementUncheckedCreateInput!, update: CardMovementUncheckedUpdateInput!, where: CardMovementWhereUniqueInput!): CardMovement!
  upsertOneCardTags(create: CardTagsUncheckedCreateInput!, update: CardTagsUncheckedUpdateInput!, where: CardTagsWhereUniqueInput!): CardTags!
  upsertOneClient(create: ClientUncheckedCreateInput!, update: ClientUncheckedUpdateInput!, where: ClientWhereUniqueInput!): Client!
  upsertOneColumn(create: ColumnUncheckedCreateInput!, update: ColumnUncheckedUpdateInput!, where: ColumnWhereUniqueInput!): Column!
  upsertOneCommentProject(create: CommentProjectUncheckedCreateInput!, update: CommentProjectUncheckedUpdateInput!, where: CommentProjectWhereUniqueInput!): CommentProject!
  upsertOneCsat(create: CsatUncheckedCreateInput!, update: CsatUncheckedUpdateInput!, where: CsatWhereUniqueInput!): Csat!
  upsertOneField(create: FieldUncheckedCreateInput!, update: FieldUncheckedUpdateInput!, where: FieldWhereUniqueInput!): Field!
  upsertOneFieldColumn(create: FieldColumnUncheckedCreateInput!, update: FieldColumnUncheckedUpdateInput!, where: FieldColumnWhereUniqueInput!): FieldColumn!
  upsertOneFieldsValue(create: FieldsValueUncheckedCreateInput!, update: FieldsValueUncheckedUpdateInput!, where: FieldsValueWhereUniqueInput!): FieldsValue!
  upsertOneGroup(create: GroupUncheckedCreateInput!, update: GroupUncheckedUpdateInput!, where: GroupWhereUniqueInput!): Group!
  upsertOneGroupMenbership(create: GroupMenbershipUncheckedCreateInput!, update: GroupMenbershipUncheckedUpdateInput!, where: GroupMenbershipWhereUniqueInput!): GroupMenbership!
  upsertOneGroupUser(create: GroupUserUncheckedCreateInput!, update: GroupUserUncheckedUpdateInput!, where: GroupUserWhereUniqueInput!): GroupUser!
  upsertOneHistoryFlag(create: HistoryFlagUncheckedCreateInput!, update: HistoryFlagUncheckedUpdateInput!, where: HistoryFlagWhereUniqueInput!): HistoryFlag!
  upsertOneHistoryMonthlyRecurringRevenue(create: HistoryMonthlyRecurringRevenueUncheckedCreateInput!, update: HistoryMonthlyRecurringRevenueUncheckedUpdateInput!, where: HistoryMonthlyRecurringRevenueWhereUniqueInput!): HistoryMonthlyRecurringRevenue!
  upsertOneHistoryStep(create: HistoryStepUncheckedCreateInput!, update: HistoryStepUncheckedUpdateInput!, where: HistoryStepWhereUniqueInput!): HistoryStep!
  upsertOneInvest(create: InvestUncheckedCreateInput!, update: InvestUncheckedUpdateInput!, where: InvestWhereUniqueInput!): Invest!
  upsertOneJobFunction(create: JobFunctionUncheckedCreateInput!, update: JobFunctionUncheckedUpdateInput!, where: JobFunctionWhereUniqueInput!): JobFunction!
  upsertOneKr(create: KrUncheckedCreateInput!, update: KrUncheckedUpdateInput!, where: KrWhereUniqueInput!): Kr!
  upsertOneKrCommentProject(create: KrCommentProjectUncheckedCreateInput!, update: KrCommentProjectUncheckedUpdateInput!, where: KrCommentProjectWhereUniqueInput!): KrCommentProject!
  upsertOneNotfy(create: NotfyUncheckedCreateInput!, update: NotfyUncheckedUpdateInput!, where: NotfyWhereUniqueInput!): Notfy!
  upsertOneObjective(create: ObjectiveUncheckedCreateInput!, update: ObjectiveUncheckedUpdateInput!, where: ObjectiveWhereUniqueInput!): Objective!
  upsertOneOkrObjectiveProject(create: OkrObjectiveProjectUncheckedCreateInput!, update: OkrObjectiveProjectUncheckedUpdateInput!, where: OkrObjectiveProjectWhereUniqueInput!): OkrObjectiveProject!
  upsertOneOkrProject(create: OkrProjectUncheckedCreateInput!, update: OkrProjectUncheckedUpdateInput!, where: OkrProjectWhereUniqueInput!): OkrProject!
  upsertOneOkrProjectHistory(create: OkrProjectHistoryUncheckedCreateInput!, update: OkrProjectHistoryUncheckedUpdateInput!, where: OkrProjectHistoryWhereUniqueInput!): OkrProjectHistory!
  upsertOneOrganization(create: OrganizationUncheckedCreateInput!, update: OrganizationUncheckedUpdateInput!, where: OrganizationWhereUniqueInput!): Organization!
  upsertOnePermission(create: PermissionUncheckedCreateInput!, update: PermissionUncheckedUpdateInput!, where: PermissionWhereUniqueInput!): Permission!
  upsertOnePipefyProject(create: PipefyProjectUncheckedCreateInput!, update: PipefyProjectUncheckedUpdateInput!, where: PipefyProjectWhereUniqueInput!): PipefyProject!
  upsertOnePrimitiveFields(create: PrimitiveFieldsUncheckedCreateInput!, update: PrimitiveFieldsUncheckedUpdateInput!, where: PrimitiveFieldsWhereUniqueInput!): PrimitiveFields!
  upsertOnePrimitiveStreenght(create: PrimitiveStreenghtUncheckedCreateInput!, update: PrimitiveStreenghtUncheckedUpdateInput!, where: PrimitiveStreenghtWhereUniqueInput!): PrimitiveStreenght!
  upsertOneProject(create: ProjectUncheckedCreateInput!, update: ProjectUncheckedUpdateInput!, where: ProjectWhereUniqueInput!): Project!
  upsertOneProjectManager(create: ProjectManagerUncheckedCreateInput!, update: ProjectManagerUncheckedUpdateInput!, where: ProjectManagerWhereUniqueInput!): ProjectManager!
  upsertOneProjectsBoards(create: ProjectsBoardsUncheckedCreateInput!, update: ProjectsBoardsUncheckedUpdateInput!, where: ProjectsBoardsWhereUniqueInput!): ProjectsBoards!
  upsertOneQnp(create: QnpUncheckedCreateInput!, update: QnpUncheckedUpdateInput!, where: QnpWhereUniqueInput!): Qnp!
  upsertOneReceivedClient(create: ReceivedClientUncheckedCreateInput!, update: ReceivedClientUncheckedUpdateInput!, where: ReceivedClientWhereUniqueInput!): ReceivedClient!
  upsertOneSelfStructure(create: SelfStructureUncheckedCreateInput!, update: SelfStructureUncheckedUpdateInput!, where: SelfStructureWhereUniqueInput!): SelfStructure!
  upsertOneServiceLevelAgreement(create: ServiceLevelAgreementUncheckedCreateInput!, update: ServiceLevelAgreementUncheckedUpdateInput!, where: ServiceLevelAgreementWhereUniqueInput!): ServiceLevelAgreement!
  upsertOneStep(create: StepUncheckedCreateInput!, update: StepUncheckedUpdateInput!, where: StepWhereUniqueInput!): Step!
  upsertOneTag(create: TagUncheckedCreateInput!, update: TagUncheckedUpdateInput!, where: TagWhereUniqueInput!): Tag!
  upsertOneTask(create: TaskUncheckedCreateInput!, update: TaskUncheckedUpdateInput!, where: TaskWhereUniqueInput!): Task!
  upsertOneTeam(create: TeamUncheckedCreateInput!, update: TeamUncheckedUpdateInput!, where: TeamWhereUniqueInput!): Team!
  upsertOneThrowErrorFront(create: ThrowErrorFrontUncheckedCreateInput!, update: ThrowErrorFrontUncheckedUpdateInput!, where: ThrowErrorFrontWhereUniqueInput!): ThrowErrorFront!
  upsertOneTokenFirebase(create: TokenFirebaseUncheckedCreateInput!, update: TokenFirebaseUncheckedUpdateInput!, where: TokenFirebaseWhereUniqueInput!): TokenFirebase!
  upsertOneUser(create: UserUncheckedCreateInput!, update: UserUncheckedUpdateInput!, where: UserWhereUniqueInput!): User!
  upsertOneUserJobFunction(create: UserJobFunctionUncheckedCreateInput!, update: UserJobFunctionUncheckedUpdateInput!, where: UserJobFunctionWhereUniqueInput!): UserJobFunction!
  upsertOneUserNotfy(create: UserNotfyUncheckedCreateInput!, update: UserNotfyUncheckedUpdateInput!, where: UserNotfyWhereUniqueInput!): UserNotfy!
  upsertOneUserOrganization(create: UserOrganizationUncheckedCreateInput!, update: UserOrganizationUncheckedUpdateInput!, where: UserOrganizationWhereUniqueInput!): UserOrganization!
  upsertOneUserStep(create: UserStepUncheckedCreateInput!, update: UserStepUncheckedUpdateInput!, where: UserStepWhereUniqueInput!): UserStep!
  upsertOneUserTeam(create: UserTeamUncheckedCreateInput!, update: UserTeamUncheckedUpdateInput!, where: UserTeamWhereUniqueInput!): UserTeam!
  upsertOneViewedCommentProject(create: ViewedCommentProjectUncheckedCreateInput!, update: ViewedCommentProjectUncheckedUpdateInput!, where: ViewedCommentProjectWhereUniqueInput!): ViewedCommentProject!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input NestedEnumFieldFlagsFilter {
  equals: FieldFlags
  in: [FieldFlags!]
  not: NestedEnumFieldFlagsFilter
  notIn: [FieldFlags!]
}

input NestedEnumFieldFlagsWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldFlagsFilter
  _min: NestedEnumFieldFlagsFilter
  equals: FieldFlags
  in: [FieldFlags!]
  not: NestedEnumFieldFlagsWithAggregatesFilter
  notIn: [FieldFlags!]
}

input NestedEnumFieldStepsFilter {
  equals: FieldSteps
  in: [FieldSteps!]
  not: NestedEnumFieldStepsFilter
  notIn: [FieldSteps!]
}

input NestedEnumFieldStepsWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldStepsFilter
  _min: NestedEnumFieldStepsFilter
  equals: FieldSteps
  in: [FieldSteps!]
  not: NestedEnumFieldStepsWithAggregatesFilter
  notIn: [FieldSteps!]
}

input NestedEnumFieldTypeFilter {
  equals: FieldType
  in: [FieldType!]
  not: NestedEnumFieldTypeFilter
  notIn: [FieldType!]
}

input NestedEnumFieldTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFieldTypeFilter
  _min: NestedEnumFieldTypeFilter
  equals: FieldType
  in: [FieldType!]
  not: NestedEnumFieldTypeWithAggregatesFilter
  notIn: [FieldType!]
}

input NestedEnumTypeServiceFilter {
  equals: TypeService
  in: [TypeService!]
  not: NestedEnumTypeServiceFilter
  notIn: [TypeService!]
}

input NestedEnumTypeServiceWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumTypeServiceFilter
  _min: NestedEnumTypeServiceFilter
  equals: TypeService
  in: [TypeService!]
  not: NestedEnumTypeServiceWithAggregatesFilter
  notIn: [TypeService!]
}

input NestedEnumroleFilter {
  equals: role
  in: [role!]
  not: NestedEnumroleFilter
  notIn: [role!]
}

input NestedEnumroleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumroleFilter
  _min: NestedEnumroleFilter
  equals: role
  in: [role!]
  not: NestedEnumroleWithAggregatesFilter
  notIn: [role!]
}

input NestedEnumtypeFileFilter {
  equals: typeFile
  in: [typeFile!]
  not: NestedEnumtypeFileFilter
  notIn: [typeFile!]
}

input NestedEnumtypeFileWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeFileFilter
  _min: NestedEnumtypeFileFilter
  equals: typeFile
  in: [typeFile!]
  not: NestedEnumtypeFileWithAggregatesFilter
  notIn: [typeFile!]
}

input NestedEnumtypeFlagsCommentProjectFilter {
  equals: typeFlagsCommentProject
  in: [typeFlagsCommentProject!]
  not: NestedEnumtypeFlagsCommentProjectFilter
  notIn: [typeFlagsCommentProject!]
}

input NestedEnumtypeFlagsCommentProjectWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeFlagsCommentProjectFilter
  _min: NestedEnumtypeFlagsCommentProjectFilter
  equals: typeFlagsCommentProject
  in: [typeFlagsCommentProject!]
  not: NestedEnumtypeFlagsCommentProjectWithAggregatesFilter
  notIn: [typeFlagsCommentProject!]
}

input NestedEnumtypeNotfyFilter {
  equals: typeNotfy
  in: [typeNotfy!]
  not: NestedEnumtypeNotfyFilter
  notIn: [typeNotfy!]
}

input NestedEnumtypeNotfyWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeNotfyFilter
  _min: NestedEnumtypeNotfyFilter
  equals: typeNotfy
  in: [typeNotfy!]
  not: NestedEnumtypeNotfyWithAggregatesFilter
  notIn: [typeNotfy!]
}

input NestedEnumtypeUserFilter {
  equals: typeUser
  in: [typeUser!]
  not: NestedEnumtypeUserFilter
  notIn: [typeUser!]
}

input NestedEnumtypeUserWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumtypeUserFilter
  _min: NestedEnumtypeUserFilter
  equals: typeUser
  in: [typeUser!]
  not: NestedEnumtypeUserWithAggregatesFilter
  notIn: [typeUser!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedFloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedJsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedUuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidFilter
  notIn: [String!]
}

input NestedUuidNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidNullableFilter
  notIn: [String!]
}

input NestedUuidNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidNullableWithAggregatesFilter
  notIn: [String!]
}

input NestedUuidWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidWithAggregatesFilter
  notIn: [String!]
}

type Notfy {
  _count: NotfyCount
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO!
  createdByUser(where: UserWhereInput): User
  id: Int!
  type: typeNotfy!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedByUser(where: UserWhereInput): User
  user(cursor: UserNotfyWhereUniqueInput, distinct: [UserNotfyScalarFieldEnum!], orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): [UserNotfy!]!
}

type NotfyAvgAggregate {
  id: Float
}

input NotfyAvgOrderByAggregateInput {
  id: SortOrder
}

type NotfyCount {
  user(where: UserNotfyWhereInput): Int!
}

type NotfyCountAggregate {
  _all: Int!
  appointment: Int!
  content: Int!
  cratedBy: Int!
  createdAt: Int!
  id: Int!
  type: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input NotfyCountOrderByAggregateInput {
  appointment: SortOrder
  content: SortOrder
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input NotfyCreateManyCreatedByUserInput {
  appointment: DateTimeISO
  content: String!
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedBy: String
}

input NotfyCreateManyCreatedByUserInputEnvelope {
  data: [NotfyCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input NotfyCreateManyInput {
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedBy: String
}

input NotfyCreateManyUpdatedByUserInput {
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
}

input NotfyCreateManyUpdatedByUserInputEnvelope {
  data: [NotfyCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input NotfyCreateNestedOneWithoutUserInput {
  connect: NotfyWhereUniqueInput
  connectOrCreate: NotfyCreateOrConnectWithoutUserInput
  create: NotfyUncheckedCreateWithoutUserInput
}

input NotfyCreateOrConnectWithoutCreatedByUserInput {
  create: NotfyUncheckedCreateWithoutCreatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyCreateOrConnectWithoutUpdatedByUserInput {
  create: NotfyUncheckedCreateWithoutUpdatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyCreateOrConnectWithoutUserInput {
  create: NotfyUncheckedCreateWithoutUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyCreateWithoutCreatedByUserInput {
  appointment: DateTimeISO
  content: String!
  createdAt: DateTimeISO
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutNotfyUpdateddByInput
  user: UserNotfyCreateNestedManyWithoutNotfyInput
}

input NotfyCreateWithoutUpdatedByUserInput {
  appointment: DateTimeISO
  content: String!
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutNotfyCreatedByInput
  type: typeNotfy!
  updatedAt: DateTimeISO
  user: UserNotfyCreateNestedManyWithoutNotfyInput
}

type NotfyGroupBy {
  _avg: NotfyAvgAggregate
  _count: NotfyCountAggregate
  _max: NotfyMaxAggregate
  _min: NotfyMinAggregate
  _sum: NotfySumAggregate
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO!
  id: Int!
  type: typeNotfy!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input NotfyListRelationFilter {
  every: NotfyWhereInput
  none: NotfyWhereInput
  some: NotfyWhereInput
}

type NotfyMaxAggregate {
  appointment: DateTimeISO
  content: String
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy
  updatedAt: DateTimeISO
  updatedBy: String
}

input NotfyMaxOrderByAggregateInput {
  appointment: SortOrder
  content: SortOrder
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type NotfyMinAggregate {
  appointment: DateTimeISO
  content: String
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy
  updatedAt: DateTimeISO
  updatedBy: String
}

input NotfyMinOrderByAggregateInput {
  appointment: SortOrder
  content: SortOrder
  cratedBy: SortOrder
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input NotfyOrderByRelationAggregateInput {
  _count: SortOrder
}

input NotfyOrderByWithAggregationInput {
  _avg: NotfyAvgOrderByAggregateInput
  _count: NotfyCountOrderByAggregateInput
  _max: NotfyMaxOrderByAggregateInput
  _min: NotfyMinOrderByAggregateInput
  _sum: NotfySumOrderByAggregateInput
  appointment: SortOrderInput
  content: SortOrder
  cratedBy: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input NotfyOrderByWithRelationInput {
  appointment: SortOrderInput
  content: SortOrder
  cratedBy: SortOrderInput
  createdAt: SortOrder
  createdByUser: UserOrderByWithRelationInput
  id: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedByUser: UserOrderByWithRelationInput
  user: UserNotfyOrderByRelationAggregateInput
}

input NotfyRelationFilter {
  is: NotfyWhereInput
  isNot: NotfyWhereInput
}

enum NotfyScalarFieldEnum {
  appointment
  content
  cratedBy
  createdAt
  id
  type
  updatedAt
  updatedBy
}

input NotfyScalarWhereInput {
  AND: [NotfyScalarWhereInput!]
  NOT: [NotfyScalarWhereInput!]
  OR: [NotfyScalarWhereInput!]
  appointment: DateTimeNullableFilter
  content: StringFilter
  cratedBy: UuidNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  type: EnumtypeNotfyFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input NotfyScalarWhereWithAggregatesInput {
  AND: [NotfyScalarWhereWithAggregatesInput!]
  NOT: [NotfyScalarWhereWithAggregatesInput!]
  OR: [NotfyScalarWhereWithAggregatesInput!]
  appointment: DateTimeNullableWithAggregatesFilter
  content: StringWithAggregatesFilter
  cratedBy: UuidNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  type: EnumtypeNotfyWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type NotfySumAggregate {
  id: Int
}

input NotfySumOrderByAggregateInput {
  id: SortOrder
}

input NotfyUncheckedCreateInput {
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedBy: String
  user: UserNotfyUncheckedCreateNestedManyWithoutNotfyInput
}

input NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [NotfyWhereUniqueInput!]
  connectOrCreate: [NotfyCreateOrConnectWithoutCreatedByUserInput!]
  create: [NotfyCreateWithoutCreatedByUserInput!]
  createMany: NotfyCreateManyCreatedByUserInputEnvelope
}

input NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [NotfyWhereUniqueInput!]
  connectOrCreate: [NotfyCreateOrConnectWithoutUpdatedByUserInput!]
  create: [NotfyCreateWithoutUpdatedByUserInput!]
  createMany: NotfyCreateManyUpdatedByUserInputEnvelope
}

input NotfyUncheckedCreateWithoutCreatedByUserInput {
  appointment: DateTimeISO
  content: String!
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedBy: String
  user: UserNotfyUncheckedCreateNestedManyWithoutNotfyInput
}

input NotfyUncheckedCreateWithoutUpdatedByUserInput {
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  user: UserNotfyUncheckedCreateNestedManyWithoutNotfyInput
}

input NotfyUncheckedCreateWithoutUserInput {
  appointment: DateTimeISO
  content: String!
  cratedBy: String
  createdAt: DateTimeISO
  id: Int
  type: typeNotfy!
  updatedAt: DateTimeISO
  updatedBy: String
}

input NotfyUncheckedUpdateInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  cratedBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
  user: UserNotfyUncheckedUpdateManyWithoutNotfyNestedInput
}

input NotfyUncheckedUpdateManyInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  cratedBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input NotfyUncheckedUpdateManyWithoutCreatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input NotfyUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [NotfyWhereUniqueInput!]
  connectOrCreate: [NotfyCreateOrConnectWithoutCreatedByUserInput!]
  create: [NotfyCreateWithoutCreatedByUserInput!]
  createMany: NotfyCreateManyCreatedByUserInputEnvelope
  delete: [NotfyWhereUniqueInput!]
  deleteMany: [NotfyScalarWhereInput!]
  disconnect: [NotfyWhereUniqueInput!]
  set: [NotfyWhereUniqueInput!]
  update: [NotfyUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [NotfyUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [NotfyUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input NotfyUncheckedUpdateManyWithoutUpdatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  cratedBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input NotfyUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [NotfyWhereUniqueInput!]
  connectOrCreate: [NotfyCreateOrConnectWithoutUpdatedByUserInput!]
  create: [NotfyCreateWithoutUpdatedByUserInput!]
  createMany: NotfyCreateManyUpdatedByUserInputEnvelope
  delete: [NotfyWhereUniqueInput!]
  deleteMany: [NotfyScalarWhereInput!]
  disconnect: [NotfyWhereUniqueInput!]
  set: [NotfyWhereUniqueInput!]
  update: [NotfyUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [NotfyUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [NotfyUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input NotfyUncheckedUpdateWithoutCreatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
  user: UserNotfyUncheckedUpdateManyWithoutNotfyNestedInput
}

input NotfyUncheckedUpdateWithoutUpdatedByUserInput {
  appointment: NullableDateTimeFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  cratedBy: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  type: EnumtypeNotfyFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserNotfyUncheckedUpdateManyWithoutNotfyNestedInput
}

input NotfyUpdateManyWithWhereWithoutCreatedByUserInput {
  data: NotfyUncheckedUpdateManyWithoutCreatedByUserInput!
  where: NotfyScalarWhereInput!
}

input NotfyUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: NotfyUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: NotfyScalarWhereInput!
}

input NotfyUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: NotfyUncheckedUpdateWithoutCreatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: NotfyUncheckedUpdateWithoutUpdatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: NotfyUncheckedCreateWithoutCreatedByUserInput!
  update: NotfyUncheckedUpdateWithoutCreatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: NotfyUncheckedCreateWithoutUpdatedByUserInput!
  update: NotfyUncheckedUpdateWithoutUpdatedByUserInput!
  where: NotfyWhereUniqueInput!
}

input NotfyWhereInput {
  AND: [NotfyWhereInput!]
  NOT: [NotfyWhereInput!]
  OR: [NotfyWhereInput!]
  appointment: DateTimeNullableFilter
  content: StringFilter
  cratedBy: UuidNullableFilter
  createdAt: DateTimeFilter
  createdByUser: UserNullableRelationFilter
  id: IntFilter
  type: EnumtypeNotfyFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
  user: UserNotfyListRelationFilter
}

input NotfyWhereUniqueInput {
  AND: [NotfyWhereInput!]
  NOT: [NotfyWhereInput!]
  OR: [NotfyWhereInput!]
  appointment: DateTimeNullableFilter
  content: StringFilter
  cratedBy: UuidNullableFilter
  createdAt: DateTimeFilter
  createdByUser: UserNullableRelationFilter
  id: Int
  type: EnumtypeNotfyFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
  user: UserNotfyListRelationFilter
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTimeISO
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type OGeneratedTokenClient {
  token: String
}

type OLoginClient {
  token: String!
  user: User!
}

type ObjectNotification {
  boardId: ID!
  message: String!
  user: User
  uuid: String!
}

type Objective {
  Kr(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): [Kr!]!
  _count: ObjectiveCount
  createdAt: DateTimeISO!
  createdBy: String!
  createdByUser: User!
  description: String!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String!
  updatedByUser: User!
}

type ObjectiveAvgAggregate {
  id: Float
}

input ObjectiveAvgOrderByAggregateInput {
  id: SortOrder
}

type ObjectiveCount {
  Kr(where: KrWhereInput): Int!
}

type ObjectiveCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  description: Int!
  id: Int!
  title: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input ObjectiveCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ObjectiveCreateManyCreatedByUserInput {
  createdAt: DateTimeISO
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String!
}

input ObjectiveCreateManyCreatedByUserInputEnvelope {
  data: [ObjectiveCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input ObjectiveCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String!
}

input ObjectiveCreateManyUpdatedByUserInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input ObjectiveCreateManyUpdatedByUserInputEnvelope {
  data: [ObjectiveCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input ObjectiveCreateNestedOneWithoutKrInput {
  connect: ObjectiveWhereUniqueInput
  connectOrCreate: ObjectiveCreateOrConnectWithoutKrInput
  create: ObjectiveUncheckedCreateWithoutKrInput
}

input ObjectiveCreateOrConnectWithoutCreatedByUserInput {
  create: ObjectiveUncheckedCreateWithoutCreatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveCreateOrConnectWithoutKrInput {
  create: ObjectiveUncheckedCreateWithoutKrInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveCreateOrConnectWithoutUpdatedByUserInput {
  create: ObjectiveUncheckedCreateWithoutUpdatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveCreateWithoutCreatedByUserInput {
  Kr: KrCreateNestedManyWithoutObjectiveInput
  createdAt: DateTimeISO
  description: String!
  title: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutObjectiveUpdatedByInput!
}

input ObjectiveCreateWithoutUpdatedByUserInput {
  Kr: KrCreateNestedManyWithoutObjectiveInput
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutObjectiveCreatedByInput!
  description: String!
  title: String!
  updatedAt: DateTimeISO
}

type ObjectiveGroupBy {
  _avg: ObjectiveAvgAggregate
  _count: ObjectiveCountAggregate
  _max: ObjectiveMaxAggregate
  _min: ObjectiveMinAggregate
  _sum: ObjectiveSumAggregate
  createdAt: DateTimeISO!
  createdBy: String!
  description: String!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
  updatedBy: String!
}

input ObjectiveListRelationFilter {
  every: ObjectiveWhereInput
  none: ObjectiveWhereInput
  some: ObjectiveWhereInput
}

type ObjectiveMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ObjectiveMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type ObjectiveMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  id: Int
  title: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ObjectiveMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ObjectiveOrderByRelationAggregateInput {
  _count: SortOrder
}

input ObjectiveOrderByWithAggregationInput {
  _avg: ObjectiveAvgOrderByAggregateInput
  _count: ObjectiveCountOrderByAggregateInput
  _max: ObjectiveMaxOrderByAggregateInput
  _min: ObjectiveMinOrderByAggregateInput
  _sum: ObjectiveSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ObjectiveOrderByWithRelationInput {
  Kr: KrOrderByRelationAggregateInput
  createdAt: SortOrder
  createdBy: SortOrder
  createdByUser: UserOrderByWithRelationInput
  description: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
  updatedByUser: UserOrderByWithRelationInput
}

input ObjectiveRelationFilter {
  is: ObjectiveWhereInput
  isNot: ObjectiveWhereInput
}

enum ObjectiveScalarFieldEnum {
  createdAt
  createdBy
  description
  id
  title
  updatedAt
  updatedBy
}

input ObjectiveScalarWhereInput {
  AND: [ObjectiveScalarWhereInput!]
  NOT: [ObjectiveScalarWhereInput!]
  OR: [ObjectiveScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  description: StringFilter
  id: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidFilter
}

input ObjectiveScalarWhereWithAggregatesInput {
  AND: [ObjectiveScalarWhereWithAggregatesInput!]
  NOT: [ObjectiveScalarWhereWithAggregatesInput!]
  OR: [ObjectiveScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidWithAggregatesFilter
  description: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidWithAggregatesFilter
}

type ObjectiveSumAggregate {
  id: Int
}

input ObjectiveSumOrderByAggregateInput {
  id: SortOrder
}

input ObjectiveUncheckedCreateInput {
  Kr: KrUncheckedCreateNestedManyWithoutObjectiveInput
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String!
}

input ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [ObjectiveWhereUniqueInput!]
  connectOrCreate: [ObjectiveCreateOrConnectWithoutCreatedByUserInput!]
  create: [ObjectiveCreateWithoutCreatedByUserInput!]
  createMany: ObjectiveCreateManyCreatedByUserInputEnvelope
}

input ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [ObjectiveWhereUniqueInput!]
  connectOrCreate: [ObjectiveCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ObjectiveCreateWithoutUpdatedByUserInput!]
  createMany: ObjectiveCreateManyUpdatedByUserInputEnvelope
}

input ObjectiveUncheckedCreateWithoutCreatedByUserInput {
  Kr: KrUncheckedCreateNestedManyWithoutObjectiveInput
  createdAt: DateTimeISO
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String!
}

input ObjectiveUncheckedCreateWithoutKrInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
  updatedBy: String!
}

input ObjectiveUncheckedCreateWithoutUpdatedByUserInput {
  Kr: KrUncheckedCreateNestedManyWithoutObjectiveInput
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input ObjectiveUncheckedUpdateInput {
  Kr: KrUncheckedUpdateManyWithoutObjectiveNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: StringFieldUpdateOperationsInput
}

input ObjectiveUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: StringFieldUpdateOperationsInput
}

input ObjectiveUncheckedUpdateManyWithoutCreatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: StringFieldUpdateOperationsInput
}

input ObjectiveUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [ObjectiveWhereUniqueInput!]
  connectOrCreate: [ObjectiveCreateOrConnectWithoutCreatedByUserInput!]
  create: [ObjectiveCreateWithoutCreatedByUserInput!]
  createMany: ObjectiveCreateManyCreatedByUserInputEnvelope
  delete: [ObjectiveWhereUniqueInput!]
  deleteMany: [ObjectiveScalarWhereInput!]
  disconnect: [ObjectiveWhereUniqueInput!]
  set: [ObjectiveWhereUniqueInput!]
  update: [ObjectiveUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [ObjectiveUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [ObjectiveUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input ObjectiveUncheckedUpdateManyWithoutUpdatedByUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ObjectiveUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [ObjectiveWhereUniqueInput!]
  connectOrCreate: [ObjectiveCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ObjectiveCreateWithoutUpdatedByUserInput!]
  createMany: ObjectiveCreateManyUpdatedByUserInputEnvelope
  delete: [ObjectiveWhereUniqueInput!]
  deleteMany: [ObjectiveScalarWhereInput!]
  disconnect: [ObjectiveWhereUniqueInput!]
  set: [ObjectiveWhereUniqueInput!]
  update: [ObjectiveUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [ObjectiveUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [ObjectiveUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input ObjectiveUncheckedUpdateWithoutCreatedByUserInput {
  Kr: KrUncheckedUpdateManyWithoutObjectiveNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: StringFieldUpdateOperationsInput
}

input ObjectiveUncheckedUpdateWithoutUpdatedByUserInput {
  Kr: KrUncheckedUpdateManyWithoutObjectiveNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ObjectiveUpdateManyWithWhereWithoutCreatedByUserInput {
  data: ObjectiveUncheckedUpdateManyWithoutCreatedByUserInput!
  where: ObjectiveScalarWhereInput!
}

input ObjectiveUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: ObjectiveUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: ObjectiveScalarWhereInput!
}

input ObjectiveUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: ObjectiveUncheckedUpdateWithoutCreatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: ObjectiveUncheckedUpdateWithoutUpdatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: ObjectiveUncheckedCreateWithoutCreatedByUserInput!
  update: ObjectiveUncheckedUpdateWithoutCreatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: ObjectiveUncheckedCreateWithoutUpdatedByUserInput!
  update: ObjectiveUncheckedUpdateWithoutUpdatedByUserInput!
  where: ObjectiveWhereUniqueInput!
}

input ObjectiveWhereInput {
  AND: [ObjectiveWhereInput!]
  Kr: KrListRelationFilter
  NOT: [ObjectiveWhereInput!]
  OR: [ObjectiveWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  createdByUser: UserRelationFilter
  description: StringFilter
  id: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidFilter
  updatedByUser: UserRelationFilter
}

input ObjectiveWhereUniqueInput {
  AND: [ObjectiveWhereInput!]
  Kr: KrListRelationFilter
  NOT: [ObjectiveWhereInput!]
  OR: [ObjectiveWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  createdByUser: UserRelationFilter
  description: StringFilter
  id: Int
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidFilter
  updatedByUser: UserRelationFilter
}

type OkrObjectiveProject {
  _count: OkrObjectiveProjectCount
  createdAt: DateTimeISO!
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO!
  id: Int!
  okr(cursor: OkrProjectWhereUniqueInput, distinct: [OkrProjectScalarFieldEnum!], orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): [OkrProject!]!
  project: Project!
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO!
  user: User!
}

type OkrObjectiveProjectAvgAggregate {
  id: Float
  projectId: Float
}

input OkrObjectiveProjectAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type OkrObjectiveProjectCount {
  okr(where: OkrProjectWhereInput): Int!
}

type OkrObjectiveProjectCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  description: Int!
  finishedAt: Int!
  id: Int!
  projectId: Int!
  title: Int!
  updatedAt: Int!
}

input OkrObjectiveProjectCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  finishedAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input OkrObjectiveProjectCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO
  id: Int
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectCreateManyProjectInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectCreateManyProjectInputEnvelope {
  data: [OkrObjectiveProjectCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input OkrObjectiveProjectCreateManyUserInput {
  createdAt: DateTimeISO
  description: String!
  finishedAt: DateTimeISO
  id: Int
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectCreateManyUserInputEnvelope {
  data: [OkrObjectiveProjectCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input OkrObjectiveProjectCreateNestedManyWithoutProjectInput {
  connect: [OkrObjectiveProjectWhereUniqueInput!]
  connectOrCreate: [OkrObjectiveProjectCreateOrConnectWithoutProjectInput!]
  create: [OkrObjectiveProjectCreateWithoutProjectInput!]
  createMany: OkrObjectiveProjectCreateManyProjectInputEnvelope
}

input OkrObjectiveProjectCreateNestedOneWithoutOkrInput {
  connect: OkrObjectiveProjectWhereUniqueInput
  connectOrCreate: OkrObjectiveProjectCreateOrConnectWithoutOkrInput
  create: OkrObjectiveProjectUncheckedCreateWithoutOkrInput
}

input OkrObjectiveProjectCreateOrConnectWithoutOkrInput {
  create: OkrObjectiveProjectUncheckedCreateWithoutOkrInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectCreateOrConnectWithoutProjectInput {
  create: OkrObjectiveProjectUncheckedCreateWithoutProjectInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectCreateOrConnectWithoutUserInput {
  create: OkrObjectiveProjectUncheckedCreateWithoutUserInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectCreateWithoutProjectInput {
  createdAt: DateTimeISO
  description: String!
  finishedAt: DateTimeISO
  okr: OkrProjectCreateNestedManyWithoutObjectiveInput
  title: String!
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutOkrObjectiveProjectInput!
}

input OkrObjectiveProjectCreateWithoutUserInput {
  createdAt: DateTimeISO
  description: String!
  finishedAt: DateTimeISO
  okr: OkrProjectCreateNestedManyWithoutObjectiveInput
  project: ProjectCreateNestedOneWithoutOkrObjectiveProjectInput!
  title: String!
  updatedAt: DateTimeISO
}

type OkrObjectiveProjectGroupBy {
  _avg: OkrObjectiveProjectAvgAggregate
  _count: OkrObjectiveProjectCountAggregate
  _max: OkrObjectiveProjectMaxAggregate
  _min: OkrObjectiveProjectMinAggregate
  _sum: OkrObjectiveProjectSumAggregate
  createdAt: DateTimeISO!
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO!
  id: Int!
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO!
}

input OkrObjectiveProjectListRelationFilter {
  every: OkrObjectiveProjectWhereInput
  none: OkrObjectiveProjectWhereInput
  some: OkrObjectiveProjectWhereInput
}

type OkrObjectiveProjectMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  finishedAt: DateTimeISO
  id: Int
  projectId: Int
  title: String
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  finishedAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type OkrObjectiveProjectMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  description: String
  finishedAt: DateTimeISO
  id: Int
  projectId: Int
  title: String
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  finishedAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input OkrObjectiveProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input OkrObjectiveProjectOrderByWithAggregationInput {
  _avg: OkrObjectiveProjectAvgOrderByAggregateInput
  _count: OkrObjectiveProjectCountOrderByAggregateInput
  _max: OkrObjectiveProjectMaxOrderByAggregateInput
  _min: OkrObjectiveProjectMinOrderByAggregateInput
  _sum: OkrObjectiveProjectSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  finishedAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input OkrObjectiveProjectOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrder
  description: SortOrder
  finishedAt: SortOrder
  id: SortOrder
  okr: OkrProjectOrderByRelationAggregateInput
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
}

input OkrObjectiveProjectRelationFilter {
  is: OkrObjectiveProjectWhereInput
  isNot: OkrObjectiveProjectWhereInput
}

enum OkrObjectiveProjectScalarFieldEnum {
  createdAt
  createdBy
  description
  finishedAt
  id
  projectId
  title
  updatedAt
}

input OkrObjectiveProjectScalarWhereInput {
  AND: [OkrObjectiveProjectScalarWhereInput!]
  NOT: [OkrObjectiveProjectScalarWhereInput!]
  OR: [OkrObjectiveProjectScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  description: StringFilter
  finishedAt: DateTimeFilter
  id: IntFilter
  projectId: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input OkrObjectiveProjectScalarWhereWithAggregatesInput {
  AND: [OkrObjectiveProjectScalarWhereWithAggregatesInput!]
  NOT: [OkrObjectiveProjectScalarWhereWithAggregatesInput!]
  OR: [OkrObjectiveProjectScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidWithAggregatesFilter
  description: StringWithAggregatesFilter
  finishedAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type OkrObjectiveProjectSumAggregate {
  id: Int
  projectId: Int
}

input OkrObjectiveProjectSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input OkrObjectiveProjectUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO
  id: Int
  okr: OkrProjectUncheckedCreateNestedManyWithoutObjectiveInput
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput {
  connect: [OkrObjectiveProjectWhereUniqueInput!]
  connectOrCreate: [OkrObjectiveProjectCreateOrConnectWithoutProjectInput!]
  create: [OkrObjectiveProjectCreateWithoutProjectInput!]
  createMany: OkrObjectiveProjectCreateManyProjectInputEnvelope
}

input OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput {
  connect: [OkrObjectiveProjectWhereUniqueInput!]
  connectOrCreate: [OkrObjectiveProjectCreateOrConnectWithoutUserInput!]
  create: [OkrObjectiveProjectCreateWithoutUserInput!]
  createMany: OkrObjectiveProjectCreateManyUserInputEnvelope
}

input OkrObjectiveProjectUncheckedCreateWithoutOkrInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO
  id: Int
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  createdBy: String!
  description: String!
  finishedAt: DateTimeISO
  id: Int
  okr: OkrProjectUncheckedCreateNestedManyWithoutObjectiveInput
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectUncheckedCreateWithoutUserInput {
  createdAt: DateTimeISO
  description: String!
  finishedAt: DateTimeISO
  id: Int
  okr: OkrProjectUncheckedCreateNestedManyWithoutObjectiveInput
  projectId: Int!
  title: String!
  updatedAt: DateTimeISO
}

input OkrObjectiveProjectUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  okr: OkrProjectUncheckedUpdateManyWithoutObjectiveNestedInput
  projectId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [OkrObjectiveProjectWhereUniqueInput!]
  connectOrCreate: [OkrObjectiveProjectCreateOrConnectWithoutProjectInput!]
  create: [OkrObjectiveProjectCreateWithoutProjectInput!]
  createMany: OkrObjectiveProjectCreateManyProjectInputEnvelope
  delete: [OkrObjectiveProjectWhereUniqueInput!]
  deleteMany: [OkrObjectiveProjectScalarWhereInput!]
  disconnect: [OkrObjectiveProjectWhereUniqueInput!]
  set: [OkrObjectiveProjectWhereUniqueInput!]
  update: [OkrObjectiveProjectUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [OkrObjectiveProjectUpdateManyWithWhereWithoutProjectInput!]
  upsert: [OkrObjectiveProjectUpsertWithWhereUniqueWithoutProjectInput!]
}

input OkrObjectiveProjectUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUncheckedUpdateManyWithoutUserNestedInput {
  connect: [OkrObjectiveProjectWhereUniqueInput!]
  connectOrCreate: [OkrObjectiveProjectCreateOrConnectWithoutUserInput!]
  create: [OkrObjectiveProjectCreateWithoutUserInput!]
  createMany: OkrObjectiveProjectCreateManyUserInputEnvelope
  delete: [OkrObjectiveProjectWhereUniqueInput!]
  deleteMany: [OkrObjectiveProjectScalarWhereInput!]
  disconnect: [OkrObjectiveProjectWhereUniqueInput!]
  set: [OkrObjectiveProjectWhereUniqueInput!]
  update: [OkrObjectiveProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OkrObjectiveProjectUpdateManyWithWhereWithoutUserInput!]
  upsert: [OkrObjectiveProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input OkrObjectiveProjectUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  okr: OkrProjectUncheckedUpdateManyWithoutObjectiveNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUncheckedUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  finishedAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  okr: OkrProjectUncheckedUpdateManyWithoutObjectiveNestedInput
  projectId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OkrObjectiveProjectUpdateManyWithWhereWithoutProjectInput {
  data: OkrObjectiveProjectUncheckedUpdateManyWithoutProjectInput!
  where: OkrObjectiveProjectScalarWhereInput!
}

input OkrObjectiveProjectUpdateManyWithWhereWithoutUserInput {
  data: OkrObjectiveProjectUncheckedUpdateManyWithoutUserInput!
  where: OkrObjectiveProjectScalarWhereInput!
}

input OkrObjectiveProjectUpdateWithWhereUniqueWithoutProjectInput {
  data: OkrObjectiveProjectUncheckedUpdateWithoutProjectInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectUpdateWithWhereUniqueWithoutUserInput {
  data: OkrObjectiveProjectUncheckedUpdateWithoutUserInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectUpsertWithWhereUniqueWithoutProjectInput {
  create: OkrObjectiveProjectUncheckedCreateWithoutProjectInput!
  update: OkrObjectiveProjectUncheckedUpdateWithoutProjectInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectUpsertWithWhereUniqueWithoutUserInput {
  create: OkrObjectiveProjectUncheckedCreateWithoutUserInput!
  update: OkrObjectiveProjectUncheckedUpdateWithoutUserInput!
  where: OkrObjectiveProjectWhereUniqueInput!
}

input OkrObjectiveProjectWhereInput {
  AND: [OkrObjectiveProjectWhereInput!]
  NOT: [OkrObjectiveProjectWhereInput!]
  OR: [OkrObjectiveProjectWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  description: StringFilter
  finishedAt: DateTimeFilter
  id: IntFilter
  okr: OkrProjectListRelationFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
}

input OkrObjectiveProjectWhereUniqueInput {
  AND: [OkrObjectiveProjectWhereInput!]
  NOT: [OkrObjectiveProjectWhereInput!]
  OR: [OkrObjectiveProjectWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidFilter
  description: StringFilter
  finishedAt: DateTimeFilter
  id: Int
  okr: OkrProjectListRelationFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
}

type OkrProject {
  _count: OkrProjectCount
  createdAt: DateTimeISO!
  createdBy: String
  finished: Boolean!
  id: Int!
  kr(cursor: OkrProjectHistoryWhereUniqueInput, distinct: [OkrProjectHistoryScalarFieldEnum!], orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): [OkrProjectHistory!]!
  krComments(cursor: KrCommentProjectWhereUniqueInput, distinct: [KrCommentProjectScalarFieldEnum!], orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): [KrCommentProject!]!
  objective: OkrObjectiveProject!
  objectiveId: Int!
  title: String!
  user(where: UserWhereInput): User
}

type OkrProjectAvgAggregate {
  id: Float
  objectiveId: Float
}

input OkrProjectAvgOrderByAggregateInput {
  id: SortOrder
  objectiveId: SortOrder
}

type OkrProjectCount {
  kr(where: OkrProjectHistoryWhereInput): Int!
  krComments(where: KrCommentProjectWhereInput): Int!
}

type OkrProjectCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  finished: Int!
  id: Int!
  objectiveId: Int!
  title: Int!
}

input OkrProjectCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  finished: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  title: SortOrder
}

input OkrProjectCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  objectiveId: Int!
  title: String!
}

input OkrProjectCreateManyObjectiveInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  title: String!
}

input OkrProjectCreateManyObjectiveInputEnvelope {
  data: [OkrProjectCreateManyObjectiveInput!]!
  skipDuplicates: Boolean
}

input OkrProjectCreateManyUserInput {
  createdAt: DateTimeISO
  finished: Boolean
  id: Int
  objectiveId: Int!
  title: String!
}

input OkrProjectCreateManyUserInputEnvelope {
  data: [OkrProjectCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input OkrProjectCreateNestedManyWithoutObjectiveInput {
  connect: [OkrProjectWhereUniqueInput!]
  connectOrCreate: [OkrProjectCreateOrConnectWithoutObjectiveInput!]
  create: [OkrProjectCreateWithoutObjectiveInput!]
  createMany: OkrProjectCreateManyObjectiveInputEnvelope
}

input OkrProjectCreateNestedOneWithoutKrCommentsInput {
  connect: OkrProjectWhereUniqueInput
  connectOrCreate: OkrProjectCreateOrConnectWithoutKrCommentsInput
  create: OkrProjectUncheckedCreateWithoutKrCommentsInput
}

input OkrProjectCreateNestedOneWithoutKrInput {
  connect: OkrProjectWhereUniqueInput
  connectOrCreate: OkrProjectCreateOrConnectWithoutKrInput
  create: OkrProjectUncheckedCreateWithoutKrInput
}

input OkrProjectCreateOrConnectWithoutKrCommentsInput {
  create: OkrProjectUncheckedCreateWithoutKrCommentsInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectCreateOrConnectWithoutKrInput {
  create: OkrProjectUncheckedCreateWithoutKrInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectCreateOrConnectWithoutObjectiveInput {
  create: OkrProjectUncheckedCreateWithoutObjectiveInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectCreateOrConnectWithoutUserInput {
  create: OkrProjectUncheckedCreateWithoutUserInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectCreateWithoutObjectiveInput {
  createdAt: DateTimeISO
  finished: Boolean
  kr: OkrProjectHistoryCreateNestedManyWithoutKrProjectInput
  krComments: KrCommentProjectCreateNestedManyWithoutKrProjectInput
  title: String!
  user: UserCreateNestedOneWithoutOkrProjectInput
}

input OkrProjectCreateWithoutUserInput {
  createdAt: DateTimeISO
  finished: Boolean
  kr: OkrProjectHistoryCreateNestedManyWithoutKrProjectInput
  krComments: KrCommentProjectCreateNestedManyWithoutKrProjectInput
  objective: OkrObjectiveProjectCreateNestedOneWithoutOkrInput!
  title: String!
}

type OkrProjectGroupBy {
  _avg: OkrProjectAvgAggregate
  _count: OkrProjectCountAggregate
  _max: OkrProjectMaxAggregate
  _min: OkrProjectMinAggregate
  _sum: OkrProjectSumAggregate
  createdAt: DateTimeISO!
  createdBy: String
  finished: Boolean!
  id: Int!
  objectiveId: Int!
  title: String!
}

type OkrProjectHistory {
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  krId: Int!
  krProject: OkrProject!
  progress: Float!
  target: Float!
  user(where: UserWhereInput): User
}

type OkrProjectHistoryAvgAggregate {
  id: Float
  krId: Float
  progress: Float
  target: Float
}

input OkrProjectHistoryAvgOrderByAggregateInput {
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

type OkrProjectHistoryCountAggregate {
  _all: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  krId: Int!
  progress: Int!
  target: Int!
}

input OkrProjectHistoryCountOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

input OkrProjectHistoryCreateManyInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int!
  progress: Float
  target: Float
}

input OkrProjectHistoryCreateManyKrProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  progress: Float
  target: Float
}

input OkrProjectHistoryCreateManyKrProjectInputEnvelope {
  data: [OkrProjectHistoryCreateManyKrProjectInput!]!
  skipDuplicates: Boolean
}

input OkrProjectHistoryCreateManyUserInput {
  createdAt: DateTimeISO
  id: Int
  krId: Int!
  progress: Float
  target: Float
}

input OkrProjectHistoryCreateManyUserInputEnvelope {
  data: [OkrProjectHistoryCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input OkrProjectHistoryCreateNestedManyWithoutKrProjectInput {
  connect: [OkrProjectHistoryWhereUniqueInput!]
  connectOrCreate: [OkrProjectHistoryCreateOrConnectWithoutKrProjectInput!]
  create: [OkrProjectHistoryCreateWithoutKrProjectInput!]
  createMany: OkrProjectHistoryCreateManyKrProjectInputEnvelope
}

input OkrProjectHistoryCreateOrConnectWithoutKrProjectInput {
  create: OkrProjectHistoryUncheckedCreateWithoutKrProjectInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryCreateOrConnectWithoutUserInput {
  create: OkrProjectHistoryUncheckedCreateWithoutUserInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryCreateWithoutKrProjectInput {
  createdAt: DateTimeISO
  progress: Float
  target: Float
  user: UserCreateNestedOneWithoutOkrProjectHistoryInput
}

input OkrProjectHistoryCreateWithoutUserInput {
  createdAt: DateTimeISO
  krProject: OkrProjectCreateNestedOneWithoutKrInput!
  progress: Float
  target: Float
}

type OkrProjectHistoryGroupBy {
  _avg: OkrProjectHistoryAvgAggregate
  _count: OkrProjectHistoryCountAggregate
  _max: OkrProjectHistoryMaxAggregate
  _min: OkrProjectHistoryMinAggregate
  _sum: OkrProjectHistorySumAggregate
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  krId: Int!
  progress: Float!
  target: Float!
}

input OkrProjectHistoryListRelationFilter {
  every: OkrProjectHistoryWhereInput
  none: OkrProjectHistoryWhereInput
  some: OkrProjectHistoryWhereInput
}

type OkrProjectHistoryMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int
  progress: Float
  target: Float
}

input OkrProjectHistoryMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

type OkrProjectHistoryMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int
  progress: Float
  target: Float
}

input OkrProjectHistoryMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

input OkrProjectHistoryOrderByRelationAggregateInput {
  _count: SortOrder
}

input OkrProjectHistoryOrderByWithAggregationInput {
  _avg: OkrProjectHistoryAvgOrderByAggregateInput
  _count: OkrProjectHistoryCountOrderByAggregateInput
  _max: OkrProjectHistoryMaxOrderByAggregateInput
  _min: OkrProjectHistoryMinOrderByAggregateInput
  _sum: OkrProjectHistorySumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

input OkrProjectHistoryOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  krId: SortOrder
  krProject: OkrProjectOrderByWithRelationInput
  progress: SortOrder
  target: SortOrder
  user: UserOrderByWithRelationInput
}

enum OkrProjectHistoryScalarFieldEnum {
  createdAt
  createdBy
  id
  krId
  progress
  target
}

input OkrProjectHistoryScalarWhereInput {
  AND: [OkrProjectHistoryScalarWhereInput!]
  NOT: [OkrProjectHistoryScalarWhereInput!]
  OR: [OkrProjectHistoryScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  krId: IntFilter
  progress: FloatFilter
  target: FloatFilter
}

input OkrProjectHistoryScalarWhereWithAggregatesInput {
  AND: [OkrProjectHistoryScalarWhereWithAggregatesInput!]
  NOT: [OkrProjectHistoryScalarWhereWithAggregatesInput!]
  OR: [OkrProjectHistoryScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  krId: IntWithAggregatesFilter
  progress: FloatWithAggregatesFilter
  target: FloatWithAggregatesFilter
}

type OkrProjectHistorySumAggregate {
  id: Int
  krId: Int
  progress: Float
  target: Float
}

input OkrProjectHistorySumOrderByAggregateInput {
  id: SortOrder
  krId: SortOrder
  progress: SortOrder
  target: SortOrder
}

input OkrProjectHistoryUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  krId: Int!
  progress: Float
  target: Float
}

input OkrProjectHistoryUncheckedCreateNestedManyWithoutKrProjectInput {
  connect: [OkrProjectHistoryWhereUniqueInput!]
  connectOrCreate: [OkrProjectHistoryCreateOrConnectWithoutKrProjectInput!]
  create: [OkrProjectHistoryCreateWithoutKrProjectInput!]
  createMany: OkrProjectHistoryCreateManyKrProjectInputEnvelope
}

input OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput {
  connect: [OkrProjectHistoryWhereUniqueInput!]
  connectOrCreate: [OkrProjectHistoryCreateOrConnectWithoutUserInput!]
  create: [OkrProjectHistoryCreateWithoutUserInput!]
  createMany: OkrProjectHistoryCreateManyUserInputEnvelope
}

input OkrProjectHistoryUncheckedCreateWithoutKrProjectInput {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  progress: Float
  target: Float
}

input OkrProjectHistoryUncheckedCreateWithoutUserInput {
  createdAt: DateTimeISO
  id: Int
  krId: Int!
  progress: Float
  target: Float
}

input OkrProjectHistoryUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectNestedInput {
  connect: [OkrProjectHistoryWhereUniqueInput!]
  connectOrCreate: [OkrProjectHistoryCreateOrConnectWithoutKrProjectInput!]
  create: [OkrProjectHistoryCreateWithoutKrProjectInput!]
  createMany: OkrProjectHistoryCreateManyKrProjectInputEnvelope
  delete: [OkrProjectHistoryWhereUniqueInput!]
  deleteMany: [OkrProjectHistoryScalarWhereInput!]
  disconnect: [OkrProjectHistoryWhereUniqueInput!]
  set: [OkrProjectHistoryWhereUniqueInput!]
  update: [OkrProjectHistoryUpdateWithWhereUniqueWithoutKrProjectInput!]
  updateMany: [OkrProjectHistoryUpdateManyWithWhereWithoutKrProjectInput!]
  upsert: [OkrProjectHistoryUpsertWithWhereUniqueWithoutKrProjectInput!]
}

input OkrProjectHistoryUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUncheckedUpdateManyWithoutUserNestedInput {
  connect: [OkrProjectHistoryWhereUniqueInput!]
  connectOrCreate: [OkrProjectHistoryCreateOrConnectWithoutUserInput!]
  create: [OkrProjectHistoryCreateWithoutUserInput!]
  createMany: OkrProjectHistoryCreateManyUserInputEnvelope
  delete: [OkrProjectHistoryWhereUniqueInput!]
  deleteMany: [OkrProjectHistoryScalarWhereInput!]
  disconnect: [OkrProjectHistoryWhereUniqueInput!]
  set: [OkrProjectHistoryWhereUniqueInput!]
  update: [OkrProjectHistoryUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OkrProjectHistoryUpdateManyWithWhereWithoutUserInput!]
  upsert: [OkrProjectHistoryUpsertWithWhereUniqueWithoutUserInput!]
}

input OkrProjectHistoryUncheckedUpdateWithoutKrProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUncheckedUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  krId: IntFieldUpdateOperationsInput
  progress: FloatFieldUpdateOperationsInput
  target: FloatFieldUpdateOperationsInput
}

input OkrProjectHistoryUpdateManyWithWhereWithoutKrProjectInput {
  data: OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectInput!
  where: OkrProjectHistoryScalarWhereInput!
}

input OkrProjectHistoryUpdateManyWithWhereWithoutUserInput {
  data: OkrProjectHistoryUncheckedUpdateManyWithoutUserInput!
  where: OkrProjectHistoryScalarWhereInput!
}

input OkrProjectHistoryUpdateWithWhereUniqueWithoutKrProjectInput {
  data: OkrProjectHistoryUncheckedUpdateWithoutKrProjectInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryUpdateWithWhereUniqueWithoutUserInput {
  data: OkrProjectHistoryUncheckedUpdateWithoutUserInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryUpsertWithWhereUniqueWithoutKrProjectInput {
  create: OkrProjectHistoryUncheckedCreateWithoutKrProjectInput!
  update: OkrProjectHistoryUncheckedUpdateWithoutKrProjectInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryUpsertWithWhereUniqueWithoutUserInput {
  create: OkrProjectHistoryUncheckedCreateWithoutUserInput!
  update: OkrProjectHistoryUncheckedUpdateWithoutUserInput!
  where: OkrProjectHistoryWhereUniqueInput!
}

input OkrProjectHistoryWhereInput {
  AND: [OkrProjectHistoryWhereInput!]
  NOT: [OkrProjectHistoryWhereInput!]
  OR: [OkrProjectHistoryWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  krId: IntFilter
  krProject: OkrProjectRelationFilter
  progress: FloatFilter
  target: FloatFilter
  user: UserNullableRelationFilter
}

input OkrProjectHistoryWhereUniqueInput {
  AND: [OkrProjectHistoryWhereInput!]
  NOT: [OkrProjectHistoryWhereInput!]
  OR: [OkrProjectHistoryWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: Int
  krId: IntFilter
  krProject: OkrProjectRelationFilter
  progress: FloatFilter
  target: FloatFilter
  user: UserNullableRelationFilter
}

input OkrProjectListRelationFilter {
  every: OkrProjectWhereInput
  none: OkrProjectWhereInput
  some: OkrProjectWhereInput
}

type OkrProjectMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  objectiveId: Int
  title: String
}

input OkrProjectMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  finished: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  title: SortOrder
}

type OkrProjectMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  objectiveId: Int
  title: String
}

input OkrProjectMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  finished: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  title: SortOrder
}

input OkrProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input OkrProjectOrderByWithAggregationInput {
  _avg: OkrProjectAvgOrderByAggregateInput
  _count: OkrProjectCountOrderByAggregateInput
  _max: OkrProjectMaxOrderByAggregateInput
  _min: OkrProjectMinOrderByAggregateInput
  _sum: OkrProjectSumOrderByAggregateInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  finished: SortOrder
  id: SortOrder
  objectiveId: SortOrder
  title: SortOrder
}

input OkrProjectOrderByWithRelationInput {
  createdAt: SortOrder
  createdBy: SortOrderInput
  finished: SortOrder
  id: SortOrder
  kr: OkrProjectHistoryOrderByRelationAggregateInput
  krComments: KrCommentProjectOrderByRelationAggregateInput
  objective: OkrObjectiveProjectOrderByWithRelationInput
  objectiveId: SortOrder
  title: SortOrder
  user: UserOrderByWithRelationInput
}

input OkrProjectRelationFilter {
  is: OkrProjectWhereInput
  isNot: OkrProjectWhereInput
}

enum OkrProjectScalarFieldEnum {
  createdAt
  createdBy
  finished
  id
  objectiveId
  title
}

input OkrProjectScalarWhereInput {
  AND: [OkrProjectScalarWhereInput!]
  NOT: [OkrProjectScalarWhereInput!]
  OR: [OkrProjectScalarWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  finished: BoolFilter
  id: IntFilter
  objectiveId: IntFilter
  title: StringFilter
}

input OkrProjectScalarWhereWithAggregatesInput {
  AND: [OkrProjectScalarWhereWithAggregatesInput!]
  NOT: [OkrProjectScalarWhereWithAggregatesInput!]
  OR: [OkrProjectScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  finished: BoolWithAggregatesFilter
  id: IntWithAggregatesFilter
  objectiveId: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
}

type OkrProjectSumAggregate {
  id: Int
  objectiveId: Int
}

input OkrProjectSumOrderByAggregateInput {
  id: SortOrder
  objectiveId: SortOrder
}

input OkrProjectUncheckedCreateInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  kr: OkrProjectHistoryUncheckedCreateNestedManyWithoutKrProjectInput
  krComments: KrCommentProjectUncheckedCreateNestedManyWithoutKrProjectInput
  objectiveId: Int!
  title: String!
}

input OkrProjectUncheckedCreateNestedManyWithoutObjectiveInput {
  connect: [OkrProjectWhereUniqueInput!]
  connectOrCreate: [OkrProjectCreateOrConnectWithoutObjectiveInput!]
  create: [OkrProjectCreateWithoutObjectiveInput!]
  createMany: OkrProjectCreateManyObjectiveInputEnvelope
}

input OkrProjectUncheckedCreateNestedManyWithoutUserInput {
  connect: [OkrProjectWhereUniqueInput!]
  connectOrCreate: [OkrProjectCreateOrConnectWithoutUserInput!]
  create: [OkrProjectCreateWithoutUserInput!]
  createMany: OkrProjectCreateManyUserInputEnvelope
}

input OkrProjectUncheckedCreateWithoutKrCommentsInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  kr: OkrProjectHistoryUncheckedCreateNestedManyWithoutKrProjectInput
  objectiveId: Int!
  title: String!
}

input OkrProjectUncheckedCreateWithoutKrInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  krComments: KrCommentProjectUncheckedCreateNestedManyWithoutKrProjectInput
  objectiveId: Int!
  title: String!
}

input OkrProjectUncheckedCreateWithoutObjectiveInput {
  createdAt: DateTimeISO
  createdBy: String
  finished: Boolean
  id: Int
  kr: OkrProjectHistoryUncheckedCreateNestedManyWithoutKrProjectInput
  krComments: KrCommentProjectUncheckedCreateNestedManyWithoutKrProjectInput
  title: String!
}

input OkrProjectUncheckedCreateWithoutUserInput {
  createdAt: DateTimeISO
  finished: Boolean
  id: Int
  kr: OkrProjectHistoryUncheckedCreateNestedManyWithoutKrProjectInput
  krComments: KrCommentProjectUncheckedCreateNestedManyWithoutKrProjectInput
  objectiveId: Int!
  title: String!
}

input OkrProjectUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  kr: OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectNestedInput
  krComments: KrCommentProjectUncheckedUpdateManyWithoutKrProjectNestedInput
  objectiveId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUncheckedUpdateManyWithoutObjectiveInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUncheckedUpdateManyWithoutObjectiveNestedInput {
  connect: [OkrProjectWhereUniqueInput!]
  connectOrCreate: [OkrProjectCreateOrConnectWithoutObjectiveInput!]
  create: [OkrProjectCreateWithoutObjectiveInput!]
  createMany: OkrProjectCreateManyObjectiveInputEnvelope
  delete: [OkrProjectWhereUniqueInput!]
  deleteMany: [OkrProjectScalarWhereInput!]
  disconnect: [OkrProjectWhereUniqueInput!]
  set: [OkrProjectWhereUniqueInput!]
  update: [OkrProjectUpdateWithWhereUniqueWithoutObjectiveInput!]
  updateMany: [OkrProjectUpdateManyWithWhereWithoutObjectiveInput!]
  upsert: [OkrProjectUpsertWithWhereUniqueWithoutObjectiveInput!]
}

input OkrProjectUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  objectiveId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUncheckedUpdateManyWithoutUserNestedInput {
  connect: [OkrProjectWhereUniqueInput!]
  connectOrCreate: [OkrProjectCreateOrConnectWithoutUserInput!]
  create: [OkrProjectCreateWithoutUserInput!]
  createMany: OkrProjectCreateManyUserInputEnvelope
  delete: [OkrProjectWhereUniqueInput!]
  deleteMany: [OkrProjectScalarWhereInput!]
  disconnect: [OkrProjectWhereUniqueInput!]
  set: [OkrProjectWhereUniqueInput!]
  update: [OkrProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OkrProjectUpdateManyWithWhereWithoutUserInput!]
  upsert: [OkrProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input OkrProjectUncheckedUpdateWithoutObjectiveInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  kr: OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectNestedInput
  krComments: KrCommentProjectUncheckedUpdateManyWithoutKrProjectNestedInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUncheckedUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  kr: OkrProjectHistoryUncheckedUpdateManyWithoutKrProjectNestedInput
  krComments: KrCommentProjectUncheckedUpdateManyWithoutKrProjectNestedInput
  objectiveId: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input OkrProjectUpdateManyWithWhereWithoutObjectiveInput {
  data: OkrProjectUncheckedUpdateManyWithoutObjectiveInput!
  where: OkrProjectScalarWhereInput!
}

input OkrProjectUpdateManyWithWhereWithoutUserInput {
  data: OkrProjectUncheckedUpdateManyWithoutUserInput!
  where: OkrProjectScalarWhereInput!
}

input OkrProjectUpdateWithWhereUniqueWithoutObjectiveInput {
  data: OkrProjectUncheckedUpdateWithoutObjectiveInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectUpdateWithWhereUniqueWithoutUserInput {
  data: OkrProjectUncheckedUpdateWithoutUserInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectUpsertWithWhereUniqueWithoutObjectiveInput {
  create: OkrProjectUncheckedCreateWithoutObjectiveInput!
  update: OkrProjectUncheckedUpdateWithoutObjectiveInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectUpsertWithWhereUniqueWithoutUserInput {
  create: OkrProjectUncheckedCreateWithoutUserInput!
  update: OkrProjectUncheckedUpdateWithoutUserInput!
  where: OkrProjectWhereUniqueInput!
}

input OkrProjectWhereInput {
  AND: [OkrProjectWhereInput!]
  NOT: [OkrProjectWhereInput!]
  OR: [OkrProjectWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  finished: BoolFilter
  id: IntFilter
  kr: OkrProjectHistoryListRelationFilter
  krComments: KrCommentProjectListRelationFilter
  objective: OkrObjectiveProjectRelationFilter
  objectiveId: IntFilter
  title: StringFilter
  user: UserNullableRelationFilter
}

input OkrProjectWhereUniqueInput {
  AND: [OkrProjectWhereInput!]
  NOT: [OkrProjectWhereInput!]
  OR: [OkrProjectWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  finished: BoolFilter
  id: Int
  kr: OkrProjectHistoryListRelationFilter
  krComments: KrCommentProjectListRelationFilter
  objective: OkrObjectiveProjectRelationFilter
  objectiveId: IntFilter
  title: StringFilter
  user: UserNullableRelationFilter
}

type Organization {
  UserOrganization(cursor: UserOrganizationWhereUniqueInput, distinct: [UserOrganizationScalarFieldEnum!], orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): [UserOrganization!]!
  _count: OrganizationCount
  createdAt: DateTimeISO!
  id: Int!
  info: JSON
  name: String!
  updatedAt: DateTimeISO!
}

type OrganizationAvgAggregate {
  id: Float
}

input OrganizationAvgOrderByAggregateInput {
  id: SortOrder
}

type OrganizationCount {
  UserOrganization(where: UserOrganizationWhereInput): Int!
}

type OrganizationCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  info: Int!
  name: Int!
  updatedAt: Int!
}

input OrganizationCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  info: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input OrganizationCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  info: JSON
  name: String!
  updatedAt: DateTimeISO
}

input OrganizationCreateNestedOneWithoutUserOrganizationInput {
  connect: OrganizationWhereUniqueInput
  connectOrCreate: OrganizationCreateOrConnectWithoutUserOrganizationInput
  create: OrganizationUncheckedCreateWithoutUserOrganizationInput
}

input OrganizationCreateOrConnectWithoutUserOrganizationInput {
  create: OrganizationUncheckedCreateWithoutUserOrganizationInput!
  where: OrganizationWhereUniqueInput!
}

type OrganizationGroupBy {
  _avg: OrganizationAvgAggregate
  _count: OrganizationCountAggregate
  _max: OrganizationMaxAggregate
  _min: OrganizationMinAggregate
  _sum: OrganizationSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  info: JSON
  name: String!
  updatedAt: DateTimeISO!
}

type OrganizationMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input OrganizationMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

type OrganizationMinAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input OrganizationMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input OrganizationOrderByWithAggregationInput {
  _avg: OrganizationAvgOrderByAggregateInput
  _count: OrganizationCountOrderByAggregateInput
  _max: OrganizationMaxOrderByAggregateInput
  _min: OrganizationMinOrderByAggregateInput
  _sum: OrganizationSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  info: SortOrderInput
  name: SortOrder
  updatedAt: SortOrder
}

input OrganizationOrderByWithRelationInput {
  UserOrganization: UserOrganizationOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  info: SortOrderInput
  name: SortOrder
  updatedAt: SortOrder
}

input OrganizationRelationFilter {
  is: OrganizationWhereInput
  isNot: OrganizationWhereInput
}

enum OrganizationScalarFieldEnum {
  createdAt
  id
  info
  name
  updatedAt
}

input OrganizationScalarWhereWithAggregatesInput {
  AND: [OrganizationScalarWhereWithAggregatesInput!]
  NOT: [OrganizationScalarWhereWithAggregatesInput!]
  OR: [OrganizationScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  info: JsonNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type OrganizationSumAggregate {
  id: Int
}

input OrganizationSumOrderByAggregateInput {
  id: SortOrder
}

input OrganizationUncheckedCreateInput {
  UserOrganization: UserOrganizationUncheckedCreateNestedManyWithoutOrganizationInput
  createdAt: DateTimeISO
  id: Int
  info: JSON
  name: String!
  updatedAt: DateTimeISO
}

input OrganizationUncheckedCreateWithoutUserOrganizationInput {
  createdAt: DateTimeISO
  id: Int
  info: JSON
  name: String!
  updatedAt: DateTimeISO
}

input OrganizationUncheckedUpdateInput {
  UserOrganization: UserOrganizationUncheckedUpdateManyWithoutOrganizationNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  info: JSON
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrganizationUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  info: JSON
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OrganizationWhereInput {
  AND: [OrganizationWhereInput!]
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  UserOrganization: UserOrganizationListRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  info: JsonNullableFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input OrganizationWhereUniqueInput {
  AND: [OrganizationWhereInput!]
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  UserOrganization: UserOrganizationListRelationFilter
  createdAt: DateTimeFilter
  id: Int
  info: JsonNullableFilter
  name: String
  updatedAt: DateTimeFilter
}

type OutputCalendar {
  date: DateTimeISO!
  link: String!
  title: String!
}

type OutputCard {
  _count: Float
  message: Float
}

type OutputClient {
  message: String!
  pathUrl: String
}

type OutputHome {
  content: JSON!
}

type OutputHomeGameTeam {
  component: String!
  name: String!
  pathUrl: String!
  score: Int!
}

type OutputSelfTemplate {
  home: JSON!
  sideBar: JSON!
}

input PayloadComment {
  projectId: ID!
}

type Permission {
  delete: Boolean!
  group: Group!
  groupId: Int!
  id: Int!
  read: Boolean!
  update: Boolean!
  write: Boolean!
}

type PermissionAvgAggregate {
  groupId: Float
  id: Float
}

input PermissionAvgOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
}

type PermissionCountAggregate {
  _all: Int!
  delete: Int!
  groupId: Int!
  id: Int!
  read: Int!
  update: Int!
  write: Int!
}

input PermissionCountOrderByAggregateInput {
  delete: SortOrder
  groupId: SortOrder
  id: SortOrder
  read: SortOrder
  update: SortOrder
  write: SortOrder
}

input PermissionCreateManyInput {
  delete: Boolean
  groupId: Int!
  id: Int
  read: Boolean
  update: Boolean
  write: Boolean
}

input PermissionCreateNestedOneWithoutGroupInput {
  connect: PermissionWhereUniqueInput
  connectOrCreate: PermissionCreateOrConnectWithoutGroupInput
  create: PermissionUncheckedCreateWithoutGroupInput
}

input PermissionCreateOrConnectWithoutGroupInput {
  create: PermissionUncheckedCreateWithoutGroupInput!
  where: PermissionWhereUniqueInput!
}

type PermissionGroupBy {
  _avg: PermissionAvgAggregate
  _count: PermissionCountAggregate
  _max: PermissionMaxAggregate
  _min: PermissionMinAggregate
  _sum: PermissionSumAggregate
  delete: Boolean!
  groupId: Int!
  id: Int!
  read: Boolean!
  update: Boolean!
  write: Boolean!
}

type PermissionMaxAggregate {
  delete: Boolean
  groupId: Int
  id: Int
  read: Boolean
  update: Boolean
  write: Boolean
}

input PermissionMaxOrderByAggregateInput {
  delete: SortOrder
  groupId: SortOrder
  id: SortOrder
  read: SortOrder
  update: SortOrder
  write: SortOrder
}

type PermissionMinAggregate {
  delete: Boolean
  groupId: Int
  id: Int
  read: Boolean
  update: Boolean
  write: Boolean
}

input PermissionMinOrderByAggregateInput {
  delete: SortOrder
  groupId: SortOrder
  id: SortOrder
  read: SortOrder
  update: SortOrder
  write: SortOrder
}

input PermissionNullableRelationFilter {
  is: PermissionWhereInput
  isNot: PermissionWhereInput
}

input PermissionOrderByWithAggregationInput {
  _avg: PermissionAvgOrderByAggregateInput
  _count: PermissionCountOrderByAggregateInput
  _max: PermissionMaxOrderByAggregateInput
  _min: PermissionMinOrderByAggregateInput
  _sum: PermissionSumOrderByAggregateInput
  delete: SortOrder
  groupId: SortOrder
  id: SortOrder
  read: SortOrder
  update: SortOrder
  write: SortOrder
}

input PermissionOrderByWithRelationInput {
  delete: SortOrder
  group: GroupOrderByWithRelationInput
  groupId: SortOrder
  id: SortOrder
  read: SortOrder
  update: SortOrder
  write: SortOrder
}

enum PermissionScalarFieldEnum {
  delete
  groupId
  id
  read
  update
  write
}

input PermissionScalarWhereWithAggregatesInput {
  AND: [PermissionScalarWhereWithAggregatesInput!]
  NOT: [PermissionScalarWhereWithAggregatesInput!]
  OR: [PermissionScalarWhereWithAggregatesInput!]
  delete: BoolWithAggregatesFilter
  groupId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  read: BoolWithAggregatesFilter
  update: BoolWithAggregatesFilter
  write: BoolWithAggregatesFilter
}

type PermissionSumAggregate {
  groupId: Int
  id: Int
}

input PermissionSumOrderByAggregateInput {
  groupId: SortOrder
  id: SortOrder
}

input PermissionUncheckedCreateInput {
  delete: Boolean
  groupId: Int!
  id: Int
  read: Boolean
  update: Boolean
  write: Boolean
}

input PermissionUncheckedCreateNestedOneWithoutGroupInput {
  connect: PermissionWhereUniqueInput
  connectOrCreate: PermissionCreateOrConnectWithoutGroupInput
  create: PermissionUncheckedCreateWithoutGroupInput
}

input PermissionUncheckedCreateWithoutGroupInput {
  delete: Boolean
  id: Int
  read: Boolean
  update: Boolean
  write: Boolean
}

input PermissionUncheckedUpdateInput {
  delete: BoolFieldUpdateOperationsInput
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  read: BoolFieldUpdateOperationsInput
  update: BoolFieldUpdateOperationsInput
  write: BoolFieldUpdateOperationsInput
}

input PermissionUncheckedUpdateManyInput {
  delete: BoolFieldUpdateOperationsInput
  groupId: IntFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  read: BoolFieldUpdateOperationsInput
  update: BoolFieldUpdateOperationsInput
  write: BoolFieldUpdateOperationsInput
}

input PermissionUncheckedUpdateOneWithoutGroupNestedInput {
  connect: PermissionWhereUniqueInput
  connectOrCreate: PermissionCreateOrConnectWithoutGroupInput
  create: PermissionUncheckedCreateWithoutGroupInput
  delete: PermissionWhereInput
  disconnect: PermissionWhereInput
  update: PermissionUncheckedUpdateWithoutGroupInput
  upsert: PermissionUpsertWithoutGroupInput
}

input PermissionUncheckedUpdateWithoutGroupInput {
  delete: BoolFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  read: BoolFieldUpdateOperationsInput
  update: BoolFieldUpdateOperationsInput
  write: BoolFieldUpdateOperationsInput
}

input PermissionUpsertWithoutGroupInput {
  create: PermissionUncheckedCreateWithoutGroupInput!
  update: PermissionUncheckedUpdateWithoutGroupInput!
  where: PermissionWhereInput
}

input PermissionWhereInput {
  AND: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  delete: BoolFilter
  group: GroupRelationFilter
  groupId: IntFilter
  id: IntFilter
  read: BoolFilter
  update: BoolFilter
  write: BoolFilter
}

input PermissionWhereUniqueInput {
  AND: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  delete: BoolFilter
  group: GroupRelationFilter
  groupId: Int
  id: Int
  read: BoolFilter
  update: BoolFilter
  write: BoolFilter
}

type PipefyProject {
  id: Int!
  pipefyId: Int!
  project: Project!
  projectId: Int!
}

type PipefyProjectAvgAggregate {
  id: Float
  pipefyId: Float
  projectId: Float
}

input PipefyProjectAvgOrderByAggregateInput {
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

type PipefyProjectCountAggregate {
  _all: Int!
  id: Int!
  pipefyId: Int!
  projectId: Int!
}

input PipefyProjectCountOrderByAggregateInput {
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

input PipefyProjectCreateManyInput {
  id: Int
  pipefyId: Int!
  projectId: Int!
}

input PipefyProjectCreateManyProjectInput {
  id: Int
  pipefyId: Int!
}

input PipefyProjectCreateManyProjectInputEnvelope {
  data: [PipefyProjectCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input PipefyProjectCreateNestedManyWithoutProjectInput {
  connect: [PipefyProjectWhereUniqueInput!]
  connectOrCreate: [PipefyProjectCreateOrConnectWithoutProjectInput!]
  create: [PipefyProjectCreateWithoutProjectInput!]
  createMany: PipefyProjectCreateManyProjectInputEnvelope
}

input PipefyProjectCreateOrConnectWithoutProjectInput {
  create: PipefyProjectUncheckedCreateWithoutProjectInput!
  where: PipefyProjectWhereUniqueInput!
}

input PipefyProjectCreateWithoutProjectInput {
  pipefyId: Int!
}

type PipefyProjectGroupBy {
  _avg: PipefyProjectAvgAggregate
  _count: PipefyProjectCountAggregate
  _max: PipefyProjectMaxAggregate
  _min: PipefyProjectMinAggregate
  _sum: PipefyProjectSumAggregate
  id: Int!
  pipefyId: Int!
  projectId: Int!
}

input PipefyProjectListRelationFilter {
  every: PipefyProjectWhereInput
  none: PipefyProjectWhereInput
  some: PipefyProjectWhereInput
}

type PipefyProjectMaxAggregate {
  id: Int
  pipefyId: Int
  projectId: Int
}

input PipefyProjectMaxOrderByAggregateInput {
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

type PipefyProjectMinAggregate {
  id: Int
  pipefyId: Int
  projectId: Int
}

input PipefyProjectMinOrderByAggregateInput {
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

input PipefyProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input PipefyProjectOrderByWithAggregationInput {
  _avg: PipefyProjectAvgOrderByAggregateInput
  _count: PipefyProjectCountOrderByAggregateInput
  _max: PipefyProjectMaxOrderByAggregateInput
  _min: PipefyProjectMinOrderByAggregateInput
  _sum: PipefyProjectSumOrderByAggregateInput
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

input PipefyProjectOrderByWithRelationInput {
  id: SortOrder
  pipefyId: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
}

enum PipefyProjectScalarFieldEnum {
  id
  pipefyId
  projectId
}

input PipefyProjectScalarWhereInput {
  AND: [PipefyProjectScalarWhereInput!]
  NOT: [PipefyProjectScalarWhereInput!]
  OR: [PipefyProjectScalarWhereInput!]
  id: IntFilter
  pipefyId: IntFilter
  projectId: IntFilter
}

input PipefyProjectScalarWhereWithAggregatesInput {
  AND: [PipefyProjectScalarWhereWithAggregatesInput!]
  NOT: [PipefyProjectScalarWhereWithAggregatesInput!]
  OR: [PipefyProjectScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  pipefyId: IntWithAggregatesFilter
  projectId: IntWithAggregatesFilter
}

type PipefyProjectSumAggregate {
  id: Int
  pipefyId: Int
  projectId: Int
}

input PipefyProjectSumOrderByAggregateInput {
  id: SortOrder
  pipefyId: SortOrder
  projectId: SortOrder
}

input PipefyProjectUncheckedCreateInput {
  id: Int
  pipefyId: Int!
  projectId: Int!
}

input PipefyProjectUncheckedCreateNestedManyWithoutProjectInput {
  connect: [PipefyProjectWhereUniqueInput!]
  connectOrCreate: [PipefyProjectCreateOrConnectWithoutProjectInput!]
  create: [PipefyProjectCreateWithoutProjectInput!]
  createMany: PipefyProjectCreateManyProjectInputEnvelope
}

input PipefyProjectUncheckedCreateWithoutProjectInput {
  id: Int
  pipefyId: Int!
}

input PipefyProjectUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  pipefyId: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
}

input PipefyProjectUncheckedUpdateManyInput {
  id: IntFieldUpdateOperationsInput
  pipefyId: IntFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
}

input PipefyProjectUncheckedUpdateManyWithoutProjectInput {
  id: IntFieldUpdateOperationsInput
  pipefyId: IntFieldUpdateOperationsInput
}

input PipefyProjectUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [PipefyProjectWhereUniqueInput!]
  connectOrCreate: [PipefyProjectCreateOrConnectWithoutProjectInput!]
  create: [PipefyProjectCreateWithoutProjectInput!]
  createMany: PipefyProjectCreateManyProjectInputEnvelope
  delete: [PipefyProjectWhereUniqueInput!]
  deleteMany: [PipefyProjectScalarWhereInput!]
  disconnect: [PipefyProjectWhereUniqueInput!]
  set: [PipefyProjectWhereUniqueInput!]
  update: [PipefyProjectUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [PipefyProjectUpdateManyWithWhereWithoutProjectInput!]
  upsert: [PipefyProjectUpsertWithWhereUniqueWithoutProjectInput!]
}

input PipefyProjectUncheckedUpdateWithoutProjectInput {
  id: IntFieldUpdateOperationsInput
  pipefyId: IntFieldUpdateOperationsInput
}

input PipefyProjectUpdateManyWithWhereWithoutProjectInput {
  data: PipefyProjectUncheckedUpdateManyWithoutProjectInput!
  where: PipefyProjectScalarWhereInput!
}

input PipefyProjectUpdateWithWhereUniqueWithoutProjectInput {
  data: PipefyProjectUncheckedUpdateWithoutProjectInput!
  where: PipefyProjectWhereUniqueInput!
}

input PipefyProjectUpsertWithWhereUniqueWithoutProjectInput {
  create: PipefyProjectUncheckedCreateWithoutProjectInput!
  update: PipefyProjectUncheckedUpdateWithoutProjectInput!
  where: PipefyProjectWhereUniqueInput!
}

input PipefyProjectWhereInput {
  AND: [PipefyProjectWhereInput!]
  NOT: [PipefyProjectWhereInput!]
  OR: [PipefyProjectWhereInput!]
  id: IntFilter
  pipefyId: IntFilter
  project: ProjectRelationFilter
  projectId: IntFilter
}

input PipefyProjectWhereUniqueInput {
  AND: [PipefyProjectWhereInput!]
  NOT: [PipefyProjectWhereInput!]
  OR: [PipefyProjectWhereInput!]
  id: Int
  pipefyId: Int
  project: ProjectRelationFilter
  projectId: Int
}

type PrimitiveFields {
  _count: PrimitiveFieldsCount
  content: JSON!
  createdAt: DateTimeISO!
  field(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): [Field!]!
  fieldType: FieldType!
  id: Int!
}

type PrimitiveFieldsAvgAggregate {
  id: Float
}

input PrimitiveFieldsAvgOrderByAggregateInput {
  id: SortOrder
}

type PrimitiveFieldsCount {
  field(where: FieldWhereInput): Int!
}

type PrimitiveFieldsCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  fieldType: Int!
  id: Int!
}

input PrimitiveFieldsCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

input PrimitiveFieldsCreateManyInput {
  content: JSON!
  createdAt: DateTimeISO
  fieldType: FieldType!
  id: Int
}

input PrimitiveFieldsCreateNestedOneWithoutFieldInput {
  connect: PrimitiveFieldsWhereUniqueInput
  connectOrCreate: PrimitiveFieldsCreateOrConnectWithoutFieldInput
  create: PrimitiveFieldsUncheckedCreateWithoutFieldInput
}

input PrimitiveFieldsCreateOrConnectWithoutFieldInput {
  create: PrimitiveFieldsUncheckedCreateWithoutFieldInput!
  where: PrimitiveFieldsWhereUniqueInput!
}

type PrimitiveFieldsGroupBy {
  _avg: PrimitiveFieldsAvgAggregate
  _count: PrimitiveFieldsCountAggregate
  _max: PrimitiveFieldsMaxAggregate
  _min: PrimitiveFieldsMinAggregate
  _sum: PrimitiveFieldsSumAggregate
  content: JSON!
  createdAt: DateTimeISO!
  fieldType: FieldType!
  id: Int!
}

type PrimitiveFieldsMaxAggregate {
  createdAt: DateTimeISO
  fieldType: FieldType
  id: Int
}

input PrimitiveFieldsMaxOrderByAggregateInput {
  createdAt: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

type PrimitiveFieldsMinAggregate {
  createdAt: DateTimeISO
  fieldType: FieldType
  id: Int
}

input PrimitiveFieldsMinOrderByAggregateInput {
  createdAt: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

input PrimitiveFieldsOrderByWithAggregationInput {
  _avg: PrimitiveFieldsAvgOrderByAggregateInput
  _count: PrimitiveFieldsCountOrderByAggregateInput
  _max: PrimitiveFieldsMaxOrderByAggregateInput
  _min: PrimitiveFieldsMinOrderByAggregateInput
  _sum: PrimitiveFieldsSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  fieldType: SortOrder
  id: SortOrder
}

input PrimitiveFieldsOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  field: FieldOrderByRelationAggregateInput
  fieldType: SortOrder
  id: SortOrder
}

input PrimitiveFieldsRelationFilter {
  is: PrimitiveFieldsWhereInput
  isNot: PrimitiveFieldsWhereInput
}

enum PrimitiveFieldsScalarFieldEnum {
  content
  createdAt
  fieldType
  id
}

input PrimitiveFieldsScalarWhereWithAggregatesInput {
  AND: [PrimitiveFieldsScalarWhereWithAggregatesInput!]
  NOT: [PrimitiveFieldsScalarWhereWithAggregatesInput!]
  OR: [PrimitiveFieldsScalarWhereWithAggregatesInput!]
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  fieldType: EnumFieldTypeWithAggregatesFilter
  id: IntWithAggregatesFilter
}

type PrimitiveFieldsSumAggregate {
  id: Int
}

input PrimitiveFieldsSumOrderByAggregateInput {
  id: SortOrder
}

input PrimitiveFieldsUncheckedCreateInput {
  content: JSON!
  createdAt: DateTimeISO
  field: FieldUncheckedCreateNestedManyWithoutPrimitiveInput
  fieldType: FieldType!
  id: Int
}

input PrimitiveFieldsUncheckedCreateWithoutFieldInput {
  content: JSON!
  createdAt: DateTimeISO
  fieldType: FieldType!
  id: Int
}

input PrimitiveFieldsUncheckedUpdateInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  field: FieldUncheckedUpdateManyWithoutPrimitiveNestedInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input PrimitiveFieldsUncheckedUpdateManyInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  fieldType: EnumFieldTypeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input PrimitiveFieldsWhereInput {
  AND: [PrimitiveFieldsWhereInput!]
  NOT: [PrimitiveFieldsWhereInput!]
  OR: [PrimitiveFieldsWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  field: FieldListRelationFilter
  fieldType: EnumFieldTypeFilter
  id: IntFilter
}

input PrimitiveFieldsWhereUniqueInput {
  AND: [PrimitiveFieldsWhereInput!]
  NOT: [PrimitiveFieldsWhereInput!]
  OR: [PrimitiveFieldsWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  field: FieldListRelationFilter
  fieldType: FieldType
  id: Int
}

type PrimitiveStreenght {
  content: JSON!
  createdAt: DateTimeISO!
  createdBy: String
  createdUser(where: UserWhereInput): User
  id: Int!
  jobFunction: JobFunction!
  jobFunctionId: Int!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedUser(where: UserWhereInput): User
}

type PrimitiveStreenghtAvgAggregate {
  id: Float
  jobFunctionId: Float
}

input PrimitiveStreenghtAvgOrderByAggregateInput {
  id: SortOrder
  jobFunctionId: SortOrder
}

type PrimitiveStreenghtCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  createdBy: Int!
  id: Int!
  jobFunctionId: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input PrimitiveStreenghtCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  jobFunctionId: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input PrimitiveStreenghtCreateManyCreatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtCreateManyCreatedUserInputEnvelope {
  data: [PrimitiveStreenghtCreateManyCreatedUserInput!]!
  skipDuplicates: Boolean
}

input PrimitiveStreenghtCreateManyInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtCreateManyJobFunctionInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtCreateManyJobFunctionInputEnvelope {
  data: [PrimitiveStreenghtCreateManyJobFunctionInput!]!
  skipDuplicates: Boolean
}

input PrimitiveStreenghtCreateManyUpdatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
}

input PrimitiveStreenghtCreateManyUpdatedUserInputEnvelope {
  data: [PrimitiveStreenghtCreateManyUpdatedUserInput!]!
  skipDuplicates: Boolean
}

input PrimitiveStreenghtCreateOrConnectWithoutCreatedUserInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutCreatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtCreateOrConnectWithoutJobFunctionInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutJobFunctionInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtCreateOrConnectWithoutUpdatedUserInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutUpdatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtCreateWithoutCreatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  jobFunction: JobFunctionCreateNestedOneWithoutPrimitiveStrengthInput!
  updatedAt: DateTimeISO
  updatedUser: UserCreateNestedOneWithoutPrimitiveStreenghtUpdatedByInput
}

input PrimitiveStreenghtCreateWithoutJobFunctionInput {
  content: JSON
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutPrimitiveStreenghtCreatedByInput
  updatedAt: DateTimeISO
  updatedUser: UserCreateNestedOneWithoutPrimitiveStreenghtUpdatedByInput
}

input PrimitiveStreenghtCreateWithoutUpdatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  createdUser: UserCreateNestedOneWithoutPrimitiveStreenghtCreatedByInput
  jobFunction: JobFunctionCreateNestedOneWithoutPrimitiveStrengthInput!
  updatedAt: DateTimeISO
}

type PrimitiveStreenghtGroupBy {
  _avg: PrimitiveStreenghtAvgAggregate
  _count: PrimitiveStreenghtCountAggregate
  _max: PrimitiveStreenghtMaxAggregate
  _min: PrimitiveStreenghtMinAggregate
  _sum: PrimitiveStreenghtSumAggregate
  content: JSON!
  createdAt: DateTimeISO!
  createdBy: String
  id: Int!
  jobFunctionId: Int!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input PrimitiveStreenghtListRelationFilter {
  every: PrimitiveStreenghtWhereInput
  none: PrimitiveStreenghtWhereInput
  some: PrimitiveStreenghtWhereInput
}

type PrimitiveStreenghtMaxAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtMaxOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  jobFunctionId: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type PrimitiveStreenghtMinAggregate {
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtMinOrderByAggregateInput {
  createdAt: SortOrder
  createdBy: SortOrder
  id: SortOrder
  jobFunctionId: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input PrimitiveStreenghtOrderByRelationAggregateInput {
  _count: SortOrder
}

input PrimitiveStreenghtOrderByWithAggregationInput {
  _avg: PrimitiveStreenghtAvgOrderByAggregateInput
  _count: PrimitiveStreenghtCountOrderByAggregateInput
  _max: PrimitiveStreenghtMaxOrderByAggregateInput
  _min: PrimitiveStreenghtMinOrderByAggregateInput
  _sum: PrimitiveStreenghtSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  id: SortOrder
  jobFunctionId: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input PrimitiveStreenghtOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdUser: UserOrderByWithRelationInput
  id: SortOrder
  jobFunction: JobFunctionOrderByWithRelationInput
  jobFunctionId: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedUser: UserOrderByWithRelationInput
}

enum PrimitiveStreenghtScalarFieldEnum {
  content
  createdAt
  createdBy
  id
  jobFunctionId
  updatedAt
  updatedBy
}

input PrimitiveStreenghtScalarWhereInput {
  AND: [PrimitiveStreenghtScalarWhereInput!]
  NOT: [PrimitiveStreenghtScalarWhereInput!]
  OR: [PrimitiveStreenghtScalarWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  id: IntFilter
  jobFunctionId: IntFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input PrimitiveStreenghtScalarWhereWithAggregatesInput {
  AND: [PrimitiveStreenghtScalarWhereWithAggregatesInput!]
  NOT: [PrimitiveStreenghtScalarWhereWithAggregatesInput!]
  OR: [PrimitiveStreenghtScalarWhereWithAggregatesInput!]
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  jobFunctionId: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type PrimitiveStreenghtSumAggregate {
  id: Int
  jobFunctionId: Int
}

input PrimitiveStreenghtSumOrderByAggregateInput {
  id: SortOrder
  jobFunctionId: SortOrder
}

input PrimitiveStreenghtUncheckedCreateInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutCreatedUserInput!]
  create: [PrimitiveStreenghtCreateWithoutCreatedUserInput!]
  createMany: PrimitiveStreenghtCreateManyCreatedUserInputEnvelope
}

input PrimitiveStreenghtUncheckedCreateNestedManyWithoutJobFunctionInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutJobFunctionInput!]
  create: [PrimitiveStreenghtCreateWithoutJobFunctionInput!]
  createMany: PrimitiveStreenghtCreateManyJobFunctionInputEnvelope
}

input PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutUpdatedUserInput!]
  create: [PrimitiveStreenghtCreateWithoutUpdatedUserInput!]
  createMany: PrimitiveStreenghtCreateManyUpdatedUserInputEnvelope
}

input PrimitiveStreenghtUncheckedCreateWithoutCreatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtUncheckedCreateWithoutJobFunctionInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  updatedAt: DateTimeISO
  updatedBy: String
}

input PrimitiveStreenghtUncheckedCreateWithoutUpdatedUserInput {
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  id: Int
  jobFunctionId: Int!
  updatedAt: DateTimeISO
}

input PrimitiveStreenghtUncheckedUpdateInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateManyInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutCreatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutCreatedUserNestedInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutCreatedUserInput!]
  create: [PrimitiveStreenghtCreateWithoutCreatedUserInput!]
  createMany: PrimitiveStreenghtCreateManyCreatedUserInputEnvelope
  delete: [PrimitiveStreenghtWhereUniqueInput!]
  deleteMany: [PrimitiveStreenghtScalarWhereInput!]
  disconnect: [PrimitiveStreenghtWhereUniqueInput!]
  set: [PrimitiveStreenghtWhereUniqueInput!]
  update: [PrimitiveStreenghtUpdateWithWhereUniqueWithoutCreatedUserInput!]
  updateMany: [PrimitiveStreenghtUpdateManyWithWhereWithoutCreatedUserInput!]
  upsert: [PrimitiveStreenghtUpsertWithWhereUniqueWithoutCreatedUserInput!]
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutJobFunctionInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutJobFunctionNestedInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutJobFunctionInput!]
  create: [PrimitiveStreenghtCreateWithoutJobFunctionInput!]
  createMany: PrimitiveStreenghtCreateManyJobFunctionInputEnvelope
  delete: [PrimitiveStreenghtWhereUniqueInput!]
  deleteMany: [PrimitiveStreenghtScalarWhereInput!]
  disconnect: [PrimitiveStreenghtWhereUniqueInput!]
  set: [PrimitiveStreenghtWhereUniqueInput!]
  update: [PrimitiveStreenghtUpdateWithWhereUniqueWithoutJobFunctionInput!]
  updateMany: [PrimitiveStreenghtUpdateManyWithWhereWithoutJobFunctionInput!]
  upsert: [PrimitiveStreenghtUpsertWithWhereUniqueWithoutJobFunctionInput!]
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutUpdatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateManyWithoutUpdatedUserNestedInput {
  connect: [PrimitiveStreenghtWhereUniqueInput!]
  connectOrCreate: [PrimitiveStreenghtCreateOrConnectWithoutUpdatedUserInput!]
  create: [PrimitiveStreenghtCreateWithoutUpdatedUserInput!]
  createMany: PrimitiveStreenghtCreateManyUpdatedUserInputEnvelope
  delete: [PrimitiveStreenghtWhereUniqueInput!]
  deleteMany: [PrimitiveStreenghtScalarWhereInput!]
  disconnect: [PrimitiveStreenghtWhereUniqueInput!]
  set: [PrimitiveStreenghtWhereUniqueInput!]
  update: [PrimitiveStreenghtUpdateWithWhereUniqueWithoutUpdatedUserInput!]
  updateMany: [PrimitiveStreenghtUpdateManyWithWhereWithoutUpdatedUserInput!]
  upsert: [PrimitiveStreenghtUpsertWithWhereUniqueWithoutUpdatedUserInput!]
}

input PrimitiveStreenghtUncheckedUpdateWithoutCreatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateWithoutJobFunctionInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input PrimitiveStreenghtUncheckedUpdateWithoutUpdatedUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  jobFunctionId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PrimitiveStreenghtUpdateManyWithWhereWithoutCreatedUserInput {
  data: PrimitiveStreenghtUncheckedUpdateManyWithoutCreatedUserInput!
  where: PrimitiveStreenghtScalarWhereInput!
}

input PrimitiveStreenghtUpdateManyWithWhereWithoutJobFunctionInput {
  data: PrimitiveStreenghtUncheckedUpdateManyWithoutJobFunctionInput!
  where: PrimitiveStreenghtScalarWhereInput!
}

input PrimitiveStreenghtUpdateManyWithWhereWithoutUpdatedUserInput {
  data: PrimitiveStreenghtUncheckedUpdateManyWithoutUpdatedUserInput!
  where: PrimitiveStreenghtScalarWhereInput!
}

input PrimitiveStreenghtUpdateWithWhereUniqueWithoutCreatedUserInput {
  data: PrimitiveStreenghtUncheckedUpdateWithoutCreatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtUpdateWithWhereUniqueWithoutJobFunctionInput {
  data: PrimitiveStreenghtUncheckedUpdateWithoutJobFunctionInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtUpdateWithWhereUniqueWithoutUpdatedUserInput {
  data: PrimitiveStreenghtUncheckedUpdateWithoutUpdatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtUpsertWithWhereUniqueWithoutCreatedUserInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutCreatedUserInput!
  update: PrimitiveStreenghtUncheckedUpdateWithoutCreatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtUpsertWithWhereUniqueWithoutJobFunctionInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutJobFunctionInput!
  update: PrimitiveStreenghtUncheckedUpdateWithoutJobFunctionInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtUpsertWithWhereUniqueWithoutUpdatedUserInput {
  create: PrimitiveStreenghtUncheckedCreateWithoutUpdatedUserInput!
  update: PrimitiveStreenghtUncheckedUpdateWithoutUpdatedUserInput!
  where: PrimitiveStreenghtWhereUniqueInput!
}

input PrimitiveStreenghtWhereInput {
  AND: [PrimitiveStreenghtWhereInput!]
  NOT: [PrimitiveStreenghtWhereInput!]
  OR: [PrimitiveStreenghtWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  id: IntFilter
  jobFunction: JobFunctionRelationFilter
  jobFunctionId: IntFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

input PrimitiveStreenghtWhereUniqueInput {
  AND: [PrimitiveStreenghtWhereInput!]
  NOT: [PrimitiveStreenghtWhereInput!]
  OR: [PrimitiveStreenghtWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdUser: UserNullableRelationFilter
  id: Int
  jobFunction: JobFunctionRelationFilter
  jobFunctionId: IntFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedUser: UserNullableRelationFilter
}

type Project {
  HistoryFlag(cursor: HistoryFlagWhereUniqueInput, distinct: [HistoryFlagScalarFieldEnum!], orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): [HistoryFlag!]!
  _count: ProjectCount
  address: String!
  archives(cursor: ArchivesWhereUniqueInput, distinct: [ArchivesScalarFieldEnum!], orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): [Archives!]!
  city: String!
  client(where: ClientWhereInput): Client
  clientId: Int
  cnpj: String!
  commentProject(cursor: CommentProjectWhereUniqueInput, distinct: [CommentProjectScalarFieldEnum!], orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): [CommentProject!]!
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  createdByUser(where: UserWhereInput): User
  enable: Boolean!
  fantasyName: String!
  historyMonthlyRecurringRevenue(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, distinct: [HistoryMonthlyRecurringRevenueScalarFieldEnum!], orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): [HistoryMonthlyRecurringRevenue!]!
  historyStep(cursor: HistoryStepWhereUniqueInput, distinct: [HistoryStepScalarFieldEnum!], orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): [HistoryStep!]!
  id: Int!
  initialDateContract: DateTimeISO!
  invest(cursor: InvestWhereUniqueInput, distinct: [InvestScalarFieldEnum!], orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): [Invest!]!
  name: String!
  okrObjectiveProject(cursor: OkrObjectiveProjectWhereUniqueInput, distinct: [OkrObjectiveProjectScalarFieldEnum!], orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): [OkrObjectiveProject!]!
  pipefy(cursor: PipefyProjectWhereUniqueInput, distinct: [PipefyProjectScalarFieldEnum!], orderBy: [PipefyProjectOrderByWithRelationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): [PipefyProject!]!
  profileUrl: String!
  projectManager(cursor: ProjectManagerWhereUniqueInput, distinct: [ProjectManagerScalarFieldEnum!], orderBy: [ProjectManagerOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): [ProjectManager!]!
  projectsBoards(cursor: ProjectsBoardsWhereUniqueInput, distinct: [ProjectsBoardsScalarFieldEnum!], orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): [ProjectsBoards!]!
  sla(cursor: ServiceLevelAgreementWhereUniqueInput, distinct: [ServiceLevelAgreementScalarFieldEnum!], orderBy: [ServiceLevelAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): [ServiceLevelAgreement!]!
  state: String!
  updatedAt: DateTimeISO!
  updatedBy: String
  updatedByUser(where: UserWhereInput): User
  viewedCommentProject(cursor: ViewedCommentProjectWhereUniqueInput, distinct: [ViewedCommentProjectScalarFieldEnum!], orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): [ViewedCommentProject!]!
}

type ProjectAvgAggregate {
  clientId: Float
  id: Float
}

input ProjectAvgOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

type ProjectCount {
  HistoryFlag(where: HistoryFlagWhereInput): Int!
  archives(where: ArchivesWhereInput): Int!
  commentProject(where: CommentProjectWhereInput): Int!
  historyMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereInput): Int!
  historyStep(where: HistoryStepWhereInput): Int!
  invest(where: InvestWhereInput): Int!
  okrObjectiveProject(where: OkrObjectiveProjectWhereInput): Int!
  pipefy(where: PipefyProjectWhereInput): Int!
  projectManager(where: ProjectManagerWhereInput): Int!
  projectsBoards(where: ProjectsBoardsWhereInput): Int!
  sla(where: ServiceLevelAgreementWhereInput): Int!
  viewedCommentProject(where: ViewedCommentProjectWhereInput): Int!
}

type ProjectCountAggregate {
  _all: Int!
  address: Int!
  city: Int!
  clientId: Int!
  cnpj: Int!
  content: Int!
  createdAt: Int!
  createdBy: Int!
  enable: Int!
  fantasyName: Int!
  id: Int!
  initialDateContract: Int!
  name: Int!
  profileUrl: Int!
  state: Int!
  updatedAt: Int!
  updatedBy: Int!
}

input ProjectCountOrderByAggregateInput {
  address: SortOrder
  city: SortOrder
  clientId: SortOrder
  cnpj: SortOrder
  content: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  enable: SortOrder
  fantasyName: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  name: SortOrder
  profileUrl: SortOrder
  state: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ProjectCreateManyClientInput {
  address: String!
  city: String!
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  id: Int
  initialDateContract: DateTimeISO
  name: String!
  profileUrl: String
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectCreateManyClientInputEnvelope {
  data: [ProjectCreateManyClientInput!]!
  skipDuplicates: Boolean
}

input ProjectCreateManyCreatedByUserInput {
  address: String!
  city: String!
  clientId: Int
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO
  enable: Boolean
  fantasyName: String!
  id: Int
  initialDateContract: DateTimeISO
  name: String!
  profileUrl: String
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectCreateManyCreatedByUserInputEnvelope {
  data: [ProjectCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input ProjectCreateManyInput {
  address: String!
  city: String!
  clientId: Int
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  id: Int
  initialDateContract: DateTimeISO
  name: String!
  profileUrl: String
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectCreateManyUpdatedByUserInput {
  address: String!
  city: String!
  clientId: Int
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  id: Int
  initialDateContract: DateTimeISO
  name: String!
  profileUrl: String
  state: String!
  updatedAt: DateTimeISO
}

input ProjectCreateManyUpdatedByUserInputEnvelope {
  data: [ProjectCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input ProjectCreateNestedManyWithoutClientInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutClientInput!]
  create: [ProjectCreateWithoutClientInput!]
  createMany: ProjectCreateManyClientInputEnvelope
}

input ProjectCreateNestedOneWithoutArchivesInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutArchivesInput
  create: ProjectUncheckedCreateWithoutArchivesInput
}

input ProjectCreateNestedOneWithoutCommentProjectInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutCommentProjectInput
  create: ProjectUncheckedCreateWithoutCommentProjectInput
}

input ProjectCreateNestedOneWithoutHistoryFlagInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutHistoryFlagInput
  create: ProjectUncheckedCreateWithoutHistoryFlagInput
}

input ProjectCreateNestedOneWithoutHistoryMonthlyRecurringRevenueInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutHistoryMonthlyRecurringRevenueInput
  create: ProjectUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput
}

input ProjectCreateNestedOneWithoutHistoryStepInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutHistoryStepInput
  create: ProjectUncheckedCreateWithoutHistoryStepInput
}

input ProjectCreateNestedOneWithoutInvestInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutInvestInput
  create: ProjectUncheckedCreateWithoutInvestInput
}

input ProjectCreateNestedOneWithoutOkrObjectiveProjectInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutOkrObjectiveProjectInput
  create: ProjectUncheckedCreateWithoutOkrObjectiveProjectInput
}

input ProjectCreateNestedOneWithoutProjectsBoardsInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutProjectsBoardsInput
  create: ProjectUncheckedCreateWithoutProjectsBoardsInput
}

input ProjectCreateNestedOneWithoutViewedCommentProjectInput {
  connect: ProjectWhereUniqueInput
  connectOrCreate: ProjectCreateOrConnectWithoutViewedCommentProjectInput
  create: ProjectUncheckedCreateWithoutViewedCommentProjectInput
}

input ProjectCreateOrConnectWithoutArchivesInput {
  create: ProjectUncheckedCreateWithoutArchivesInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutClientInput {
  create: ProjectUncheckedCreateWithoutClientInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutCommentProjectInput {
  create: ProjectUncheckedCreateWithoutCommentProjectInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutCreatedByUserInput {
  create: ProjectUncheckedCreateWithoutCreatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutHistoryFlagInput {
  create: ProjectUncheckedCreateWithoutHistoryFlagInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutHistoryMonthlyRecurringRevenueInput {
  create: ProjectUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutHistoryStepInput {
  create: ProjectUncheckedCreateWithoutHistoryStepInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutInvestInput {
  create: ProjectUncheckedCreateWithoutInvestInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutOkrObjectiveProjectInput {
  create: ProjectUncheckedCreateWithoutOkrObjectiveProjectInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutProjectsBoardsInput {
  create: ProjectUncheckedCreateWithoutProjectsBoardsInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutUpdatedByUserInput {
  create: ProjectUncheckedCreateWithoutUpdatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateOrConnectWithoutViewedCommentProjectInput {
  create: ProjectUncheckedCreateWithoutViewedCommentProjectInput!
  where: ProjectWhereUniqueInput!
}

input ProjectCreateWithoutClientInput {
  HistoryFlag: HistoryFlagCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesCreateNestedManyWithoutProjectInput
  city: String!
  cnpj: String!
  commentProject: CommentProjectCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutProjectCreatedByInput
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepCreateNestedManyWithoutProjectInput
  initialDateContract: DateTimeISO
  invest: InvestCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutProjectUpdatedByInput
  viewedCommentProject: ViewedCommentProjectCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutCreatedByUserInput {
  HistoryFlag: HistoryFlagCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesCreateNestedManyWithoutProjectInput
  city: String!
  client: ClientCreateNestedOneWithoutProjectInput
  cnpj: String!
  commentProject: CommentProjectCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepCreateNestedManyWithoutProjectInput
  initialDateContract: DateTimeISO
  invest: InvestCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedByUser: UserCreateNestedOneWithoutProjectUpdatedByInput
  viewedCommentProject: ViewedCommentProjectCreateNestedManyWithoutProjectInput
}

input ProjectCreateWithoutUpdatedByUserInput {
  HistoryFlag: HistoryFlagCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesCreateNestedManyWithoutProjectInput
  city: String!
  client: ClientCreateNestedOneWithoutProjectInput
  cnpj: String!
  commentProject: CommentProjectCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdByUser: UserCreateNestedOneWithoutProjectCreatedByInput
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepCreateNestedManyWithoutProjectInput
  initialDateContract: DateTimeISO
  invest: InvestCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  viewedCommentProject: ViewedCommentProjectCreateNestedManyWithoutProjectInput
}

type ProjectGroupBy {
  _avg: ProjectAvgAggregate
  _count: ProjectCountAggregate
  _max: ProjectMaxAggregate
  _min: ProjectMinAggregate
  _sum: ProjectSumAggregate
  address: String!
  city: String!
  clientId: Int
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO!
  createdBy: String
  enable: Boolean!
  fantasyName: String!
  id: Int!
  initialDateContract: DateTimeISO!
  name: String!
  profileUrl: String!
  state: String!
  updatedAt: DateTimeISO!
  updatedBy: String
}

input ProjectListRelationFilter {
  every: ProjectWhereInput
  none: ProjectWhereInput
  some: ProjectWhereInput
}

type ProjectManager {
  createdAt: DateTimeISO!
  id: Int!
  project(where: ProjectWhereInput): Project
  projectId: Int
  updatedAt: DateTimeISO!
  userUuid: String!
}

type ProjectManagerAvgAggregate {
  id: Float
  projectId: Float
}

input ProjectManagerAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

type ProjectManagerCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  projectId: Int!
  updatedAt: Int!
  userUuid: Int!
}

input ProjectManagerCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input ProjectManagerCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input ProjectManagerCreateManyProjectInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input ProjectManagerCreateManyProjectInputEnvelope {
  data: [ProjectManagerCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input ProjectManagerCreateNestedManyWithoutProjectInput {
  connect: [ProjectManagerWhereUniqueInput!]
  connectOrCreate: [ProjectManagerCreateOrConnectWithoutProjectInput!]
  create: [ProjectManagerCreateWithoutProjectInput!]
  createMany: ProjectManagerCreateManyProjectInputEnvelope
}

input ProjectManagerCreateOrConnectWithoutProjectInput {
  create: ProjectManagerUncheckedCreateWithoutProjectInput!
  where: ProjectManagerWhereUniqueInput!
}

input ProjectManagerCreateWithoutProjectInput {
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
  userUuid: String!
}

type ProjectManagerGroupBy {
  _avg: ProjectManagerAvgAggregate
  _count: ProjectManagerCountAggregate
  _max: ProjectManagerMaxAggregate
  _min: ProjectManagerMinAggregate
  _sum: ProjectManagerSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  projectId: Int
  updatedAt: DateTimeISO!
  userUuid: String!
}

input ProjectManagerListRelationFilter {
  every: ProjectManagerWhereInput
  none: ProjectManagerWhereInput
  some: ProjectManagerWhereInput
}

type ProjectManagerMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input ProjectManagerMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type ProjectManagerMinAggregate {
  createdAt: DateTimeISO
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input ProjectManagerMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input ProjectManagerOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProjectManagerOrderByWithAggregationInput {
  _avg: ProjectManagerAvgOrderByAggregateInput
  _count: ProjectManagerCountOrderByAggregateInput
  _max: ProjectManagerMaxOrderByAggregateInput
  _min: ProjectManagerMinOrderByAggregateInput
  _sum: ProjectManagerSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  projectId: SortOrderInput
  updatedAt: SortOrder
  userUuid: SortOrder
}

input ProjectManagerOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrderInput
  updatedAt: SortOrder
  userUuid: SortOrder
}

enum ProjectManagerScalarFieldEnum {
  createdAt
  id
  projectId
  updatedAt
  userUuid
}

input ProjectManagerScalarWhereInput {
  AND: [ProjectManagerScalarWhereInput!]
  NOT: [ProjectManagerScalarWhereInput!]
  OR: [ProjectManagerScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  projectId: IntNullableFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input ProjectManagerScalarWhereWithAggregatesInput {
  AND: [ProjectManagerScalarWhereWithAggregatesInput!]
  NOT: [ProjectManagerScalarWhereWithAggregatesInput!]
  OR: [ProjectManagerScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  projectId: IntNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type ProjectManagerSumAggregate {
  id: Int
  projectId: Int
}

input ProjectManagerSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
}

input ProjectManagerUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input ProjectManagerUncheckedCreateNestedManyWithoutProjectInput {
  connect: [ProjectManagerWhereUniqueInput!]
  connectOrCreate: [ProjectManagerCreateOrConnectWithoutProjectInput!]
  create: [ProjectManagerCreateWithoutProjectInput!]
  createMany: ProjectManagerCreateManyProjectInputEnvelope
}

input ProjectManagerUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input ProjectManagerUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input ProjectManagerUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  projectId: NullableIntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input ProjectManagerUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input ProjectManagerUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [ProjectManagerWhereUniqueInput!]
  connectOrCreate: [ProjectManagerCreateOrConnectWithoutProjectInput!]
  create: [ProjectManagerCreateWithoutProjectInput!]
  createMany: ProjectManagerCreateManyProjectInputEnvelope
  delete: [ProjectManagerWhereUniqueInput!]
  deleteMany: [ProjectManagerScalarWhereInput!]
  disconnect: [ProjectManagerWhereUniqueInput!]
  set: [ProjectManagerWhereUniqueInput!]
  update: [ProjectManagerUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ProjectManagerUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ProjectManagerUpsertWithWhereUniqueWithoutProjectInput!]
}

input ProjectManagerUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input ProjectManagerUpdateManyWithWhereWithoutProjectInput {
  data: ProjectManagerUncheckedUpdateManyWithoutProjectInput!
  where: ProjectManagerScalarWhereInput!
}

input ProjectManagerUpdateWithWhereUniqueWithoutProjectInput {
  data: ProjectManagerUncheckedUpdateWithoutProjectInput!
  where: ProjectManagerWhereUniqueInput!
}

input ProjectManagerUpsertWithWhereUniqueWithoutProjectInput {
  create: ProjectManagerUncheckedCreateWithoutProjectInput!
  update: ProjectManagerUncheckedUpdateWithoutProjectInput!
  where: ProjectManagerWhereUniqueInput!
}

input ProjectManagerWhereInput {
  AND: [ProjectManagerWhereInput!]
  NOT: [ProjectManagerWhereInput!]
  OR: [ProjectManagerWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  project: ProjectNullableRelationFilter
  projectId: IntNullableFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input ProjectManagerWhereUniqueInput {
  AND: [ProjectManagerWhereInput!]
  NOT: [ProjectManagerWhereInput!]
  OR: [ProjectManagerWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  project: ProjectNullableRelationFilter
  projectId: IntNullableFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

type ProjectMaxAggregate {
  address: String
  city: String
  clientId: Int
  cnpj: String
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String
  id: Int
  initialDateContract: DateTimeISO
  name: String
  profileUrl: String
  state: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectMaxOrderByAggregateInput {
  address: SortOrder
  city: SortOrder
  clientId: SortOrder
  cnpj: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  enable: SortOrder
  fantasyName: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  name: SortOrder
  profileUrl: SortOrder
  state: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

type ProjectMinAggregate {
  address: String
  city: String
  clientId: Int
  cnpj: String
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String
  id: Int
  initialDateContract: DateTimeISO
  name: String
  profileUrl: String
  state: String
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectMinOrderByAggregateInput {
  address: SortOrder
  city: SortOrder
  clientId: SortOrder
  cnpj: SortOrder
  createdAt: SortOrder
  createdBy: SortOrder
  enable: SortOrder
  fantasyName: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  name: SortOrder
  profileUrl: SortOrder
  state: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrder
}

input ProjectNullableRelationFilter {
  is: ProjectWhereInput
  isNot: ProjectWhereInput
}

input ProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProjectOrderByWithAggregationInput {
  _avg: ProjectAvgOrderByAggregateInput
  _count: ProjectCountOrderByAggregateInput
  _max: ProjectMaxOrderByAggregateInput
  _min: ProjectMinOrderByAggregateInput
  _sum: ProjectSumOrderByAggregateInput
  address: SortOrder
  city: SortOrder
  clientId: SortOrderInput
  cnpj: SortOrder
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  enable: SortOrder
  fantasyName: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  name: SortOrder
  profileUrl: SortOrder
  state: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
}

input ProjectOrderByWithRelationInput {
  HistoryFlag: HistoryFlagOrderByRelationAggregateInput
  address: SortOrder
  archives: ArchivesOrderByRelationAggregateInput
  city: SortOrder
  client: ClientOrderByWithRelationInput
  clientId: SortOrderInput
  cnpj: SortOrder
  commentProject: CommentProjectOrderByRelationAggregateInput
  content: SortOrderInput
  createdAt: SortOrder
  createdBy: SortOrderInput
  createdByUser: UserOrderByWithRelationInput
  enable: SortOrder
  fantasyName: SortOrder
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueOrderByRelationAggregateInput
  historyStep: HistoryStepOrderByRelationAggregateInput
  id: SortOrder
  initialDateContract: SortOrder
  invest: InvestOrderByRelationAggregateInput
  name: SortOrder
  okrObjectiveProject: OkrObjectiveProjectOrderByRelationAggregateInput
  pipefy: PipefyProjectOrderByRelationAggregateInput
  profileUrl: SortOrder
  projectManager: ProjectManagerOrderByRelationAggregateInput
  projectsBoards: ProjectsBoardsOrderByRelationAggregateInput
  sla: ServiceLevelAgreementOrderByRelationAggregateInput
  state: SortOrder
  updatedAt: SortOrder
  updatedBy: SortOrderInput
  updatedByUser: UserOrderByWithRelationInput
  viewedCommentProject: ViewedCommentProjectOrderByRelationAggregateInput
}

input ProjectRelationFilter {
  is: ProjectWhereInput
  isNot: ProjectWhereInput
}

enum ProjectScalarFieldEnum {
  address
  city
  clientId
  cnpj
  content
  createdAt
  createdBy
  enable
  fantasyName
  id
  initialDateContract
  name
  profileUrl
  state
  updatedAt
  updatedBy
}

input ProjectScalarWhereInput {
  AND: [ProjectScalarWhereInput!]
  NOT: [ProjectScalarWhereInput!]
  OR: [ProjectScalarWhereInput!]
  address: StringFilter
  city: StringFilter
  clientId: IntNullableFilter
  cnpj: StringFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  enable: BoolFilter
  fantasyName: StringFilter
  id: IntFilter
  initialDateContract: DateTimeFilter
  name: StringFilter
  profileUrl: StringFilter
  state: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
}

input ProjectScalarWhereWithAggregatesInput {
  AND: [ProjectScalarWhereWithAggregatesInput!]
  NOT: [ProjectScalarWhereWithAggregatesInput!]
  OR: [ProjectScalarWhereWithAggregatesInput!]
  address: StringWithAggregatesFilter
  city: StringWithAggregatesFilter
  clientId: IntNullableWithAggregatesFilter
  cnpj: StringWithAggregatesFilter
  content: JsonNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  createdBy: UuidNullableWithAggregatesFilter
  enable: BoolWithAggregatesFilter
  fantasyName: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  initialDateContract: DateTimeWithAggregatesFilter
  name: StringWithAggregatesFilter
  profileUrl: StringWithAggregatesFilter
  state: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  updatedBy: UuidNullableWithAggregatesFilter
}

type ProjectSumAggregate {
  clientId: Int
  id: Int
}

input ProjectSumOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

input ProjectUncheckedCreateInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateNestedManyWithoutClientInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutClientInput!]
  create: [ProjectCreateWithoutClientInput!]
  createMany: ProjectCreateManyClientInputEnvelope
}

input ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutCreatedByUserInput!]
  create: [ProjectCreateWithoutCreatedByUserInput!]
  createMany: ProjectCreateManyCreatedByUserInputEnvelope
}

input ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ProjectCreateWithoutUpdatedByUserInput!]
  createMany: ProjectCreateManyUpdatedByUserInputEnvelope
}

input ProjectUncheckedCreateWithoutArchivesInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutClientInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutCommentProjectInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutCreatedByUserInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutHistoryFlagInput {
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutHistoryStepInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutInvestInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutOkrObjectiveProjectInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutProjectsBoardsInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutUpdatedByUserInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput
}

input ProjectUncheckedCreateWithoutViewedCommentProjectInput {
  HistoryFlag: HistoryFlagUncheckedCreateNestedManyWithoutProjectInput
  address: String!
  archives: ArchivesUncheckedCreateNestedManyWithoutProjectInput
  city: String!
  clientId: Int
  cnpj: String!
  commentProject: CommentProjectUncheckedCreateNestedManyWithoutProjectInput
  content: JSON
  createdAt: DateTimeISO
  createdBy: String
  enable: Boolean
  fantasyName: String!
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutProjectInput
  historyStep: HistoryStepUncheckedCreateNestedManyWithoutProjectInput
  id: Int
  initialDateContract: DateTimeISO
  invest: InvestUncheckedCreateNestedManyWithoutProjectInput
  name: String!
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutProjectInput
  pipefy: PipefyProjectUncheckedCreateNestedManyWithoutProjectInput
  profileUrl: String
  projectManager: ProjectManagerUncheckedCreateNestedManyWithoutProjectInput
  projectsBoards: ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput
  sla: ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput
  state: String!
  updatedAt: DateTimeISO
  updatedBy: String
}

input ProjectUncheckedUpdateInput {
  HistoryFlag: HistoryFlagUncheckedUpdateManyWithoutProjectNestedInput
  address: StringFieldUpdateOperationsInput
  archives: ArchivesUncheckedUpdateManyWithoutProjectNestedInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  commentProject: CommentProjectUncheckedUpdateManyWithoutProjectNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectNestedInput
  historyStep: HistoryStepUncheckedUpdateManyWithoutProjectNestedInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  invest: InvestUncheckedUpdateManyWithoutProjectNestedInput
  name: StringFieldUpdateOperationsInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedUpdateManyWithoutProjectNestedInput
  pipefy: PipefyProjectUncheckedUpdateManyWithoutProjectNestedInput
  profileUrl: StringFieldUpdateOperationsInput
  projectManager: ProjectManagerUncheckedUpdateManyWithoutProjectNestedInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutProjectNestedInput
  sla: ServiceLevelAgreementUncheckedUpdateManyWithoutProjectNestedInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
  viewedCommentProject: ViewedCommentProjectUncheckedUpdateManyWithoutProjectNestedInput
}

input ProjectUncheckedUpdateManyInput {
  address: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profileUrl: StringFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ProjectUncheckedUpdateManyWithoutClientInput {
  address: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profileUrl: StringFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ProjectUncheckedUpdateManyWithoutClientNestedInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutClientInput!]
  create: [ProjectCreateWithoutClientInput!]
  createMany: ProjectCreateManyClientInputEnvelope
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutClientInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutClientInput!]
}

input ProjectUncheckedUpdateManyWithoutCreatedByUserInput {
  address: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profileUrl: StringFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
}

input ProjectUncheckedUpdateManyWithoutCreatedByUserNestedInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutCreatedByUserInput!]
  create: [ProjectCreateWithoutCreatedByUserInput!]
  createMany: ProjectCreateManyCreatedByUserInputEnvelope
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutCreatedByUserInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutCreatedByUserInput!]
}

input ProjectUncheckedUpdateManyWithoutUpdatedByUserInput {
  address: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profileUrl: StringFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ProjectUncheckedUpdateManyWithoutUpdatedByUserNestedInput {
  connect: [ProjectWhereUniqueInput!]
  connectOrCreate: [ProjectCreateOrConnectWithoutUpdatedByUserInput!]
  create: [ProjectCreateWithoutUpdatedByUserInput!]
  createMany: ProjectCreateManyUpdatedByUserInputEnvelope
  delete: [ProjectWhereUniqueInput!]
  deleteMany: [ProjectScalarWhereInput!]
  disconnect: [ProjectWhereUniqueInput!]
  set: [ProjectWhereUniqueInput!]
  update: [ProjectUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [ProjectUpdateManyWithWhereWithoutUpdatedByUserInput!]
  upsert: [ProjectUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
}

input ProjectUncheckedUpdateWithoutClientInput {
  HistoryFlag: HistoryFlagUncheckedUpdateManyWithoutProjectNestedInput
  address: StringFieldUpdateOperationsInput
  archives: ArchivesUncheckedUpdateManyWithoutProjectNestedInput
  city: StringFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  commentProject: CommentProjectUncheckedUpdateManyWithoutProjectNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectNestedInput
  historyStep: HistoryStepUncheckedUpdateManyWithoutProjectNestedInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  invest: InvestUncheckedUpdateManyWithoutProjectNestedInput
  name: StringFieldUpdateOperationsInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedUpdateManyWithoutProjectNestedInput
  pipefy: PipefyProjectUncheckedUpdateManyWithoutProjectNestedInput
  profileUrl: StringFieldUpdateOperationsInput
  projectManager: ProjectManagerUncheckedUpdateManyWithoutProjectNestedInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutProjectNestedInput
  sla: ServiceLevelAgreementUncheckedUpdateManyWithoutProjectNestedInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
  viewedCommentProject: ViewedCommentProjectUncheckedUpdateManyWithoutProjectNestedInput
}

input ProjectUncheckedUpdateWithoutCreatedByUserInput {
  HistoryFlag: HistoryFlagUncheckedUpdateManyWithoutProjectNestedInput
  address: StringFieldUpdateOperationsInput
  archives: ArchivesUncheckedUpdateManyWithoutProjectNestedInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  commentProject: CommentProjectUncheckedUpdateManyWithoutProjectNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectNestedInput
  historyStep: HistoryStepUncheckedUpdateManyWithoutProjectNestedInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  invest: InvestUncheckedUpdateManyWithoutProjectNestedInput
  name: StringFieldUpdateOperationsInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedUpdateManyWithoutProjectNestedInput
  pipefy: PipefyProjectUncheckedUpdateManyWithoutProjectNestedInput
  profileUrl: StringFieldUpdateOperationsInput
  projectManager: ProjectManagerUncheckedUpdateManyWithoutProjectNestedInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutProjectNestedInput
  sla: ServiceLevelAgreementUncheckedUpdateManyWithoutProjectNestedInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  updatedBy: NullableStringFieldUpdateOperationsInput
  viewedCommentProject: ViewedCommentProjectUncheckedUpdateManyWithoutProjectNestedInput
}

input ProjectUncheckedUpdateWithoutUpdatedByUserInput {
  HistoryFlag: HistoryFlagUncheckedUpdateManyWithoutProjectNestedInput
  address: StringFieldUpdateOperationsInput
  archives: ArchivesUncheckedUpdateManyWithoutProjectNestedInput
  city: StringFieldUpdateOperationsInput
  clientId: NullableIntFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  commentProject: CommentProjectUncheckedUpdateManyWithoutProjectNestedInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  createdBy: NullableStringFieldUpdateOperationsInput
  enable: BoolFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutProjectNestedInput
  historyStep: HistoryStepUncheckedUpdateManyWithoutProjectNestedInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: DateTimeFieldUpdateOperationsInput
  invest: InvestUncheckedUpdateManyWithoutProjectNestedInput
  name: StringFieldUpdateOperationsInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedUpdateManyWithoutProjectNestedInput
  pipefy: PipefyProjectUncheckedUpdateManyWithoutProjectNestedInput
  profileUrl: StringFieldUpdateOperationsInput
  projectManager: ProjectManagerUncheckedUpdateManyWithoutProjectNestedInput
  projectsBoards: ProjectsBoardsUncheckedUpdateManyWithoutProjectNestedInput
  sla: ServiceLevelAgreementUncheckedUpdateManyWithoutProjectNestedInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  viewedCommentProject: ViewedCommentProjectUncheckedUpdateManyWithoutProjectNestedInput
}

input ProjectUpdateManyWithWhereWithoutClientInput {
  data: ProjectUncheckedUpdateManyWithoutClientInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateManyWithWhereWithoutCreatedByUserInput {
  data: ProjectUncheckedUpdateManyWithoutCreatedByUserInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateManyWithWhereWithoutUpdatedByUserInput {
  data: ProjectUncheckedUpdateManyWithoutUpdatedByUserInput!
  where: ProjectScalarWhereInput!
}

input ProjectUpdateWithWhereUniqueWithoutClientInput {
  data: ProjectUncheckedUpdateWithoutClientInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpdateWithWhereUniqueWithoutCreatedByUserInput {
  data: ProjectUncheckedUpdateWithoutCreatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  data: ProjectUncheckedUpdateWithoutUpdatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutClientInput {
  create: ProjectUncheckedCreateWithoutClientInput!
  update: ProjectUncheckedUpdateWithoutClientInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutCreatedByUserInput {
  create: ProjectUncheckedCreateWithoutCreatedByUserInput!
  update: ProjectUncheckedUpdateWithoutCreatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  create: ProjectUncheckedCreateWithoutUpdatedByUserInput!
  update: ProjectUncheckedUpdateWithoutUpdatedByUserInput!
  where: ProjectWhereUniqueInput!
}

input ProjectWhereInput {
  AND: [ProjectWhereInput!]
  HistoryFlag: HistoryFlagListRelationFilter
  NOT: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  address: StringFilter
  archives: ArchivesListRelationFilter
  city: StringFilter
  client: ClientNullableRelationFilter
  clientId: IntNullableFilter
  cnpj: StringFilter
  commentProject: CommentProjectListRelationFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  enable: BoolFilter
  fantasyName: StringFilter
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueListRelationFilter
  historyStep: HistoryStepListRelationFilter
  id: IntFilter
  initialDateContract: DateTimeFilter
  invest: InvestListRelationFilter
  name: StringFilter
  okrObjectiveProject: OkrObjectiveProjectListRelationFilter
  pipefy: PipefyProjectListRelationFilter
  profileUrl: StringFilter
  projectManager: ProjectManagerListRelationFilter
  projectsBoards: ProjectsBoardsListRelationFilter
  sla: ServiceLevelAgreementListRelationFilter
  state: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
  viewedCommentProject: ViewedCommentProjectListRelationFilter
}

input ProjectWhereUniqueInput {
  AND: [ProjectWhereInput!]
  HistoryFlag: HistoryFlagListRelationFilter
  NOT: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  address: StringFilter
  archives: ArchivesListRelationFilter
  city: StringFilter
  client: ClientNullableRelationFilter
  clientId: IntNullableFilter
  cnpj: StringFilter
  commentProject: CommentProjectListRelationFilter
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  createdBy: UuidNullableFilter
  createdByUser: UserNullableRelationFilter
  enable: BoolFilter
  fantasyName: StringFilter
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueListRelationFilter
  historyStep: HistoryStepListRelationFilter
  id: Int
  initialDateContract: DateTimeFilter
  invest: InvestListRelationFilter
  name: StringFilter
  okrObjectiveProject: OkrObjectiveProjectListRelationFilter
  pipefy: PipefyProjectListRelationFilter
  profileUrl: StringFilter
  projectManager: ProjectManagerListRelationFilter
  projectsBoards: ProjectsBoardsListRelationFilter
  sla: ServiceLevelAgreementListRelationFilter
  state: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UuidNullableFilter
  updatedByUser: UserNullableRelationFilter
  viewedCommentProject: ViewedCommentProjectListRelationFilter
}

type ProjectsBoards {
  board: Board!
  boardId: String!
  project: Project!
  projectId: Int!
}

type ProjectsBoardsAvgAggregate {
  projectId: Float
}

input ProjectsBoardsAvgOrderByAggregateInput {
  projectId: SortOrder
}

type ProjectsBoardsCountAggregate {
  _all: Int!
  boardId: Int!
  projectId: Int!
}

input ProjectsBoardsCountOrderByAggregateInput {
  boardId: SortOrder
  projectId: SortOrder
}

input ProjectsBoardsCreateManyBoardInput {
  projectId: Int!
}

input ProjectsBoardsCreateManyBoardInputEnvelope {
  data: [ProjectsBoardsCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input ProjectsBoardsCreateManyInput {
  boardId: String!
  projectId: Int!
}

input ProjectsBoardsCreateManyProjectInput {
  boardId: String!
}

input ProjectsBoardsCreateManyProjectInputEnvelope {
  data: [ProjectsBoardsCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input ProjectsBoardsCreateNestedManyWithoutBoardInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutBoardInput!]
  create: [ProjectsBoardsCreateWithoutBoardInput!]
  createMany: ProjectsBoardsCreateManyBoardInputEnvelope
}

input ProjectsBoardsCreateNestedManyWithoutProjectInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutProjectInput!]
  create: [ProjectsBoardsCreateWithoutProjectInput!]
  createMany: ProjectsBoardsCreateManyProjectInputEnvelope
}

input ProjectsBoardsCreateOrConnectWithoutBoardInput {
  create: ProjectsBoardsUncheckedCreateWithoutBoardInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsCreateOrConnectWithoutProjectInput {
  create: ProjectsBoardsUncheckedCreateWithoutProjectInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsCreateWithoutBoardInput {
  project: ProjectCreateNestedOneWithoutProjectsBoardsInput!
}

input ProjectsBoardsCreateWithoutProjectInput {
  board: BoardCreateNestedOneWithoutProjectsBoardsInput!
}

type ProjectsBoardsGroupBy {
  _avg: ProjectsBoardsAvgAggregate
  _count: ProjectsBoardsCountAggregate
  _max: ProjectsBoardsMaxAggregate
  _min: ProjectsBoardsMinAggregate
  _sum: ProjectsBoardsSumAggregate
  boardId: String!
  projectId: Int!
}

input ProjectsBoardsListRelationFilter {
  every: ProjectsBoardsWhereInput
  none: ProjectsBoardsWhereInput
  some: ProjectsBoardsWhereInput
}

type ProjectsBoardsMaxAggregate {
  boardId: String
  projectId: Int
}

input ProjectsBoardsMaxOrderByAggregateInput {
  boardId: SortOrder
  projectId: SortOrder
}

type ProjectsBoardsMinAggregate {
  boardId: String
  projectId: Int
}

input ProjectsBoardsMinOrderByAggregateInput {
  boardId: SortOrder
  projectId: SortOrder
}

input ProjectsBoardsOrderByRelationAggregateInput {
  _count: SortOrder
}

input ProjectsBoardsOrderByWithAggregationInput {
  _avg: ProjectsBoardsAvgOrderByAggregateInput
  _count: ProjectsBoardsCountOrderByAggregateInput
  _max: ProjectsBoardsMaxOrderByAggregateInput
  _min: ProjectsBoardsMinOrderByAggregateInput
  _sum: ProjectsBoardsSumOrderByAggregateInput
  boardId: SortOrder
  projectId: SortOrder
}

input ProjectsBoardsOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
}

input ProjectsBoardsProjectIdBoardIdCompoundUniqueInput {
  boardId: String!
  projectId: Int!
}

enum ProjectsBoardsScalarFieldEnum {
  boardId
  projectId
}

input ProjectsBoardsScalarWhereInput {
  AND: [ProjectsBoardsScalarWhereInput!]
  NOT: [ProjectsBoardsScalarWhereInput!]
  OR: [ProjectsBoardsScalarWhereInput!]
  boardId: StringFilter
  projectId: IntFilter
}

input ProjectsBoardsScalarWhereWithAggregatesInput {
  AND: [ProjectsBoardsScalarWhereWithAggregatesInput!]
  NOT: [ProjectsBoardsScalarWhereWithAggregatesInput!]
  OR: [ProjectsBoardsScalarWhereWithAggregatesInput!]
  boardId: StringWithAggregatesFilter
  projectId: IntWithAggregatesFilter
}

type ProjectsBoardsSumAggregate {
  projectId: Int
}

input ProjectsBoardsSumOrderByAggregateInput {
  projectId: SortOrder
}

input ProjectsBoardsUncheckedCreateInput {
  boardId: String!
  projectId: Int!
}

input ProjectsBoardsUncheckedCreateNestedManyWithoutBoardInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutBoardInput!]
  create: [ProjectsBoardsCreateWithoutBoardInput!]
  createMany: ProjectsBoardsCreateManyBoardInputEnvelope
}

input ProjectsBoardsUncheckedCreateNestedManyWithoutProjectInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutProjectInput!]
  create: [ProjectsBoardsCreateWithoutProjectInput!]
  createMany: ProjectsBoardsCreateManyProjectInputEnvelope
}

input ProjectsBoardsUncheckedCreateWithoutBoardInput {
  projectId: Int!
}

input ProjectsBoardsUncheckedCreateWithoutProjectInput {
  boardId: String!
}

input ProjectsBoardsUncheckedUpdateInput {
  boardId: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
}

input ProjectsBoardsUncheckedUpdateManyInput {
  boardId: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
}

input ProjectsBoardsUncheckedUpdateManyWithoutBoardInput {
  projectId: IntFieldUpdateOperationsInput
}

input ProjectsBoardsUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutBoardInput!]
  create: [ProjectsBoardsCreateWithoutBoardInput!]
  createMany: ProjectsBoardsCreateManyBoardInputEnvelope
  delete: [ProjectsBoardsWhereUniqueInput!]
  deleteMany: [ProjectsBoardsScalarWhereInput!]
  disconnect: [ProjectsBoardsWhereUniqueInput!]
  set: [ProjectsBoardsWhereUniqueInput!]
  update: [ProjectsBoardsUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [ProjectsBoardsUpdateManyWithWhereWithoutBoardInput!]
  upsert: [ProjectsBoardsUpsertWithWhereUniqueWithoutBoardInput!]
}

input ProjectsBoardsUncheckedUpdateManyWithoutProjectInput {
  boardId: StringFieldUpdateOperationsInput
}

input ProjectsBoardsUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [ProjectsBoardsWhereUniqueInput!]
  connectOrCreate: [ProjectsBoardsCreateOrConnectWithoutProjectInput!]
  create: [ProjectsBoardsCreateWithoutProjectInput!]
  createMany: ProjectsBoardsCreateManyProjectInputEnvelope
  delete: [ProjectsBoardsWhereUniqueInput!]
  deleteMany: [ProjectsBoardsScalarWhereInput!]
  disconnect: [ProjectsBoardsWhereUniqueInput!]
  set: [ProjectsBoardsWhereUniqueInput!]
  update: [ProjectsBoardsUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ProjectsBoardsUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ProjectsBoardsUpsertWithWhereUniqueWithoutProjectInput!]
}

input ProjectsBoardsUncheckedUpdateWithoutBoardInput {
  projectId: IntFieldUpdateOperationsInput
}

input ProjectsBoardsUncheckedUpdateWithoutProjectInput {
  boardId: StringFieldUpdateOperationsInput
}

input ProjectsBoardsUpdateManyWithWhereWithoutBoardInput {
  data: ProjectsBoardsUncheckedUpdateManyWithoutBoardInput!
  where: ProjectsBoardsScalarWhereInput!
}

input ProjectsBoardsUpdateManyWithWhereWithoutProjectInput {
  data: ProjectsBoardsUncheckedUpdateManyWithoutProjectInput!
  where: ProjectsBoardsScalarWhereInput!
}

input ProjectsBoardsUpdateWithWhereUniqueWithoutBoardInput {
  data: ProjectsBoardsUncheckedUpdateWithoutBoardInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsUpdateWithWhereUniqueWithoutProjectInput {
  data: ProjectsBoardsUncheckedUpdateWithoutProjectInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsUpsertWithWhereUniqueWithoutBoardInput {
  create: ProjectsBoardsUncheckedCreateWithoutBoardInput!
  update: ProjectsBoardsUncheckedUpdateWithoutBoardInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsUpsertWithWhereUniqueWithoutProjectInput {
  create: ProjectsBoardsUncheckedCreateWithoutProjectInput!
  update: ProjectsBoardsUncheckedUpdateWithoutProjectInput!
  where: ProjectsBoardsWhereUniqueInput!
}

input ProjectsBoardsWhereInput {
  AND: [ProjectsBoardsWhereInput!]
  NOT: [ProjectsBoardsWhereInput!]
  OR: [ProjectsBoardsWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
}

input ProjectsBoardsWhereUniqueInput {
  AND: [ProjectsBoardsWhereInput!]
  NOT: [ProjectsBoardsWhereInput!]
  OR: [ProjectsBoardsWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  projectId_boardId: ProjectsBoardsProjectIdBoardIdCompoundUniqueInput
}

type Qnp {
  client(where: ClientWhereInput): Client
  clientId: Int
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
}

type QnpAvgAggregate {
  clientId: Float
  id: Float
}

input QnpAvgOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

type QnpCountAggregate {
  _all: Int!
  clientId: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
}

input QnpCountOrderByAggregateInput {
  clientId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input QnpCreateManyClientInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpCreateManyClientInputEnvelope {
  data: [QnpCreateManyClientInput!]!
  skipDuplicates: Boolean
}

input QnpCreateManyInput {
  clientId: Int
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpCreateNestedManyWithoutClientInput {
  connect: [QnpWhereUniqueInput!]
  connectOrCreate: [QnpCreateOrConnectWithoutClientInput!]
  create: [QnpCreateWithoutClientInput!]
  createMany: QnpCreateManyClientInputEnvelope
}

input QnpCreateOrConnectWithoutClientInput {
  create: QnpUncheckedCreateWithoutClientInput!
  where: QnpWhereUniqueInput!
}

input QnpCreateWithoutClientInput {
  content: JSON!
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type QnpGroupBy {
  _avg: QnpAvgAggregate
  _count: QnpCountAggregate
  _max: QnpMaxAggregate
  _min: QnpMinAggregate
  _sum: QnpSumAggregate
  clientId: Int
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
}

input QnpListRelationFilter {
  every: QnpWhereInput
  none: QnpWhereInput
  some: QnpWhereInput
}

type QnpMaxAggregate {
  clientId: Int
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpMaxOrderByAggregateInput {
  clientId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

type QnpMinAggregate {
  clientId: Int
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpMinOrderByAggregateInput {
  clientId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input QnpOrderByRelationAggregateInput {
  _count: SortOrder
}

input QnpOrderByWithAggregationInput {
  _avg: QnpAvgOrderByAggregateInput
  _count: QnpCountOrderByAggregateInput
  _max: QnpMaxOrderByAggregateInput
  _min: QnpMinOrderByAggregateInput
  _sum: QnpSumOrderByAggregateInput
  clientId: SortOrderInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

input QnpOrderByWithRelationInput {
  client: ClientOrderByWithRelationInput
  clientId: SortOrderInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
}

enum QnpScalarFieldEnum {
  clientId
  content
  createdAt
  id
  updatedAt
}

input QnpScalarWhereInput {
  AND: [QnpScalarWhereInput!]
  NOT: [QnpScalarWhereInput!]
  OR: [QnpScalarWhereInput!]
  clientId: IntNullableFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input QnpScalarWhereWithAggregatesInput {
  AND: [QnpScalarWhereWithAggregatesInput!]
  NOT: [QnpScalarWhereWithAggregatesInput!]
  OR: [QnpScalarWhereWithAggregatesInput!]
  clientId: IntNullableWithAggregatesFilter
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type QnpSumAggregate {
  clientId: Int
  id: Int
}

input QnpSumOrderByAggregateInput {
  clientId: SortOrder
  id: SortOrder
}

input QnpUncheckedCreateInput {
  clientId: Int
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpUncheckedCreateNestedManyWithoutClientInput {
  connect: [QnpWhereUniqueInput!]
  connectOrCreate: [QnpCreateOrConnectWithoutClientInput!]
  create: [QnpCreateWithoutClientInput!]
  createMany: QnpCreateManyClientInputEnvelope
}

input QnpUncheckedCreateWithoutClientInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input QnpUncheckedUpdateInput {
  clientId: NullableIntFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QnpUncheckedUpdateManyInput {
  clientId: NullableIntFieldUpdateOperationsInput
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QnpUncheckedUpdateManyWithoutClientInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QnpUncheckedUpdateManyWithoutClientNestedInput {
  connect: [QnpWhereUniqueInput!]
  connectOrCreate: [QnpCreateOrConnectWithoutClientInput!]
  create: [QnpCreateWithoutClientInput!]
  createMany: QnpCreateManyClientInputEnvelope
  delete: [QnpWhereUniqueInput!]
  deleteMany: [QnpScalarWhereInput!]
  disconnect: [QnpWhereUniqueInput!]
  set: [QnpWhereUniqueInput!]
  update: [QnpUpdateWithWhereUniqueWithoutClientInput!]
  updateMany: [QnpUpdateManyWithWhereWithoutClientInput!]
  upsert: [QnpUpsertWithWhereUniqueWithoutClientInput!]
}

input QnpUncheckedUpdateWithoutClientInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input QnpUpdateManyWithWhereWithoutClientInput {
  data: QnpUncheckedUpdateManyWithoutClientInput!
  where: QnpScalarWhereInput!
}

input QnpUpdateWithWhereUniqueWithoutClientInput {
  data: QnpUncheckedUpdateWithoutClientInput!
  where: QnpWhereUniqueInput!
}

input QnpUpsertWithWhereUniqueWithoutClientInput {
  create: QnpUncheckedCreateWithoutClientInput!
  update: QnpUncheckedUpdateWithoutClientInput!
  where: QnpWhereUniqueInput!
}

input QnpWhereInput {
  AND: [QnpWhereInput!]
  NOT: [QnpWhereInput!]
  OR: [QnpWhereInput!]
  client: ClientNullableRelationFilter
  clientId: IntNullableFilter
  content: JsonFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
}

input QnpWhereUniqueInput {
  AND: [QnpWhereInput!]
  NOT: [QnpWhereInput!]
  OR: [QnpWhereInput!]
  client: ClientNullableRelationFilter
  clientId: Int
  content: JsonFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
}

type Query {
  acessHistoryUser(where: AcessHistoryUserWhereUniqueInput!): AcessHistoryUser
  acessHistoryUsers(cursor: AcessHistoryUserWhereUniqueInput, distinct: [AcessHistoryUserScalarFieldEnum!], orderBy: [AcessHistoryUserOrderByWithRelationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): [AcessHistoryUser!]!
  aggregateAcessHistoryUser(cursor: AcessHistoryUserWhereUniqueInput, orderBy: [AcessHistoryUserOrderByWithRelationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): AggregateAcessHistoryUser!
  aggregateArchives(cursor: ArchivesWhereUniqueInput, orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): AggregateArchives!
  aggregateBoard(cursor: BoardWhereUniqueInput, orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): AggregateBoard!
  aggregateBoardMenbership(cursor: BoardMenbershipWhereUniqueInput, orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): AggregateBoardMenbership!
  aggregateCard(cursor: CardWhereUniqueInput, orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): AggregateCard!
  aggregateCardAssignment(cursor: CardAssignmentWhereUniqueInput, orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): AggregateCardAssignment!
  aggregateCardComment(cursor: CardCommentWhereUniqueInput, orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): AggregateCardComment!
  aggregateCardMovement(cursor: CardMovementWhereUniqueInput, orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): AggregateCardMovement!
  aggregateCardTags(cursor: CardTagsWhereUniqueInput, orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): AggregateCardTags!
  aggregateClient(cursor: ClientWhereUniqueInput, orderBy: [ClientOrderByWithRelationInput!], skip: Int, take: Int, where: ClientWhereInput): AggregateClient!
  aggregateColumn(cursor: ColumnWhereUniqueInput, orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): AggregateColumn!
  aggregateCommentProject(cursor: CommentProjectWhereUniqueInput, orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): AggregateCommentProject!
  aggregateCsat(cursor: CsatWhereUniqueInput, orderBy: [CsatOrderByWithRelationInput!], skip: Int, take: Int, where: CsatWhereInput): AggregateCsat!
  aggregateField(cursor: FieldWhereUniqueInput, orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): AggregateField!
  aggregateFieldColumn(cursor: FieldColumnWhereUniqueInput, orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): AggregateFieldColumn!
  aggregateFieldsValue(cursor: FieldsValueWhereUniqueInput, orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): AggregateFieldsValue!
  aggregateGroup(cursor: GroupWhereUniqueInput, orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): AggregateGroup!
  aggregateGroupMenbership(cursor: GroupMenbershipWhereUniqueInput, orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): AggregateGroupMenbership!
  aggregateGroupUser(cursor: GroupUserWhereUniqueInput, orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): AggregateGroupUser!
  aggregateHistoryFlag(cursor: HistoryFlagWhereUniqueInput, orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): AggregateHistoryFlag!
  aggregateHistoryMonthlyRecurringRevenue(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): AggregateHistoryMonthlyRecurringRevenue!
  aggregateHistoryStep(cursor: HistoryStepWhereUniqueInput, orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): AggregateHistoryStep!
  aggregateInvest(cursor: InvestWhereUniqueInput, orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): AggregateInvest!
  aggregateJobFunction(cursor: JobFunctionWhereUniqueInput, orderBy: [JobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: JobFunctionWhereInput): AggregateJobFunction!
  aggregateKr(cursor: KrWhereUniqueInput, orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): AggregateKr!
  aggregateKrCommentProject(cursor: KrCommentProjectWhereUniqueInput, orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): AggregateKrCommentProject!
  aggregateNotfy(cursor: NotfyWhereUniqueInput, orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): AggregateNotfy!
  aggregateObjective(cursor: ObjectiveWhereUniqueInput, orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): AggregateObjective!
  aggregateOkrObjectiveProject(cursor: OkrObjectiveProjectWhereUniqueInput, orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): AggregateOkrObjectiveProject!
  aggregateOkrProject(cursor: OkrProjectWhereUniqueInput, orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): AggregateOkrProject!
  aggregateOkrProjectHistory(cursor: OkrProjectHistoryWhereUniqueInput, orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): AggregateOkrProjectHistory!
  aggregateOrganization(cursor: OrganizationWhereUniqueInput, orderBy: [OrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: OrganizationWhereInput): AggregateOrganization!
  aggregatePermission(cursor: PermissionWhereUniqueInput, orderBy: [PermissionOrderByWithRelationInput!], skip: Int, take: Int, where: PermissionWhereInput): AggregatePermission!
  aggregatePipefyProject(cursor: PipefyProjectWhereUniqueInput, orderBy: [PipefyProjectOrderByWithRelationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): AggregatePipefyProject!
  aggregatePrimitiveFields(cursor: PrimitiveFieldsWhereUniqueInput, orderBy: [PrimitiveFieldsOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveFieldsWhereInput): AggregatePrimitiveFields!
  aggregatePrimitiveStreenght(cursor: PrimitiveStreenghtWhereUniqueInput, orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): AggregatePrimitiveStreenght!
  aggregateProject(cursor: ProjectWhereUniqueInput, orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): AggregateProject!
  aggregateProjectManager(cursor: ProjectManagerWhereUniqueInput, orderBy: [ProjectManagerOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): AggregateProjectManager!
  aggregateProjectsBoards(cursor: ProjectsBoardsWhereUniqueInput, orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): AggregateProjectsBoards!
  aggregateQnp(cursor: QnpWhereUniqueInput, orderBy: [QnpOrderByWithRelationInput!], skip: Int, take: Int, where: QnpWhereInput): AggregateQnp!
  aggregateReceivedClient(cursor: ReceivedClientWhereUniqueInput, orderBy: [ReceivedClientOrderByWithRelationInput!], skip: Int, take: Int, where: ReceivedClientWhereInput): AggregateReceivedClient!
  aggregateSelfStructure(cursor: SelfStructureWhereUniqueInput, orderBy: [SelfStructureOrderByWithRelationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): AggregateSelfStructure!
  aggregateServiceLevelAgreement(cursor: ServiceLevelAgreementWhereUniqueInput, orderBy: [ServiceLevelAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): AggregateServiceLevelAgreement!
  aggregateStep(cursor: StepWhereUniqueInput, orderBy: [StepOrderByWithRelationInput!], skip: Int, take: Int, where: StepWhereInput): AggregateStep!
  aggregateTag(cursor: TagWhereUniqueInput, orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): AggregateTag!
  aggregateTask(cursor: TaskWhereUniqueInput, orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): AggregateTask!
  aggregateTeam(cursor: TeamWhereUniqueInput, orderBy: [TeamOrderByWithRelationInput!], skip: Int, take: Int, where: TeamWhereInput): AggregateTeam!
  aggregateThrowErrorFront(cursor: ThrowErrorFrontWhereUniqueInput, orderBy: [ThrowErrorFrontOrderByWithRelationInput!], skip: Int, take: Int, where: ThrowErrorFrontWhereInput): AggregateThrowErrorFront!
  aggregateTokenFirebase(cursor: TokenFirebaseWhereUniqueInput, orderBy: [TokenFirebaseOrderByWithRelationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): AggregateTokenFirebase!
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): AggregateUser!
  aggregateUserJobFunction(cursor: UserJobFunctionWhereUniqueInput, orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): AggregateUserJobFunction!
  aggregateUserNotfy(cursor: UserNotfyWhereUniqueInput, orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): AggregateUserNotfy!
  aggregateUserOrganization(cursor: UserOrganizationWhereUniqueInput, orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): AggregateUserOrganization!
  aggregateUserStep(cursor: UserStepWhereUniqueInput, orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): AggregateUserStep!
  aggregateUserTeam(cursor: UserTeamWhereUniqueInput, orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): AggregateUserTeam!
  aggregateViewedCommentProject(cursor: ViewedCommentProjectWhereUniqueInput, orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): AggregateViewedCommentProject!
  board(where: BoardWhereUniqueInput!): Board
  boardMenbership(where: BoardMenbershipWhereUniqueInput!): BoardMenbership
  boardMenberships(cursor: BoardMenbershipWhereUniqueInput, distinct: [BoardMenbershipScalarFieldEnum!], orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): [BoardMenbership!]!
  boards(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): [Board!]!
  calendar(data: DateTimeISO!): [OutputCalendar!]!
  card(where: CardWhereUniqueInput!): Card
  cardAssignment(where: CardAssignmentWhereUniqueInput!): CardAssignment
  cardAssignments(cursor: CardAssignmentWhereUniqueInput, distinct: [CardAssignmentScalarFieldEnum!], orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): [CardAssignment!]!
  cardComment(where: CardCommentWhereUniqueInput!): CardComment
  cardComments(cursor: CardCommentWhereUniqueInput, distinct: [CardCommentScalarFieldEnum!], orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): [CardComment!]!
  cardMovement(where: CardMovementWhereUniqueInput!): CardMovement
  cardMovements(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovement!]!
  cards(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): [Card!]!
  changeCommentCustom(data: PayloadComment!): Boolean!
  client(where: ClientWhereUniqueInput!): Client
  clients(cursor: ClientWhereUniqueInput, distinct: [ClientScalarFieldEnum!], orderBy: [ClientOrderByWithRelationInput!], skip: Int, take: Int, where: ClientWhereInput): [Client!]!
  column(where: ColumnWhereUniqueInput!): Column
  columns(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  commentProject(where: CommentProjectWhereUniqueInput!): CommentProject
  commentProjects(cursor: CommentProjectWhereUniqueInput, distinct: [CommentProjectScalarFieldEnum!], orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): [CommentProject!]!
  csat(where: CsatWhereUniqueInput!): Csat
  csats(cursor: CsatWhereUniqueInput, distinct: [CsatScalarFieldEnum!], orderBy: [CsatOrderByWithRelationInput!], skip: Int, take: Int, where: CsatWhereInput): [Csat!]!
  exitInKanban: Boolean!
  field(where: FieldWhereUniqueInput!): Field
  fieldColumn(where: FieldColumnWhereUniqueInput!): FieldColumn
  fieldColumns(cursor: FieldColumnWhereUniqueInput, distinct: [FieldColumnScalarFieldEnum!], orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): [FieldColumn!]!
  fields(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): [Field!]!
  fieldsValue(where: FieldsValueWhereUniqueInput!): FieldsValue
  fieldsValues(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): [FieldsValue!]!
  findFirstAcessHistoryUser(cursor: AcessHistoryUserWhereUniqueInput, distinct: [AcessHistoryUserScalarFieldEnum!], orderBy: [AcessHistoryUserOrderByWithRelationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): AcessHistoryUser
  findFirstAcessHistoryUserOrThrow(cursor: AcessHistoryUserWhereUniqueInput, distinct: [AcessHistoryUserScalarFieldEnum!], orderBy: [AcessHistoryUserOrderByWithRelationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): AcessHistoryUser
  findFirstArchives(cursor: ArchivesWhereUniqueInput, distinct: [ArchivesScalarFieldEnum!], orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): Archives
  findFirstArchivesOrThrow(cursor: ArchivesWhereUniqueInput, distinct: [ArchivesScalarFieldEnum!], orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): Archives
  findFirstBoard(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): Board
  findFirstBoardMenbership(cursor: BoardMenbershipWhereUniqueInput, distinct: [BoardMenbershipScalarFieldEnum!], orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): BoardMenbership
  findFirstBoardMenbershipOrThrow(cursor: BoardMenbershipWhereUniqueInput, distinct: [BoardMenbershipScalarFieldEnum!], orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): BoardMenbership
  findFirstBoardOrThrow(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): Board
  findFirstCard(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): Card
  findFirstCardAssignment(cursor: CardAssignmentWhereUniqueInput, distinct: [CardAssignmentScalarFieldEnum!], orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): CardAssignment
  findFirstCardAssignmentOrThrow(cursor: CardAssignmentWhereUniqueInput, distinct: [CardAssignmentScalarFieldEnum!], orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): CardAssignment
  findFirstCardComment(cursor: CardCommentWhereUniqueInput, distinct: [CardCommentScalarFieldEnum!], orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): CardComment
  findFirstCardCommentOrThrow(cursor: CardCommentWhereUniqueInput, distinct: [CardCommentScalarFieldEnum!], orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): CardComment
  findFirstCardMovement(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): CardMovement
  findFirstCardMovementOrThrow(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): CardMovement
  findFirstCardOrThrow(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): Card
  findFirstCardTags(cursor: CardTagsWhereUniqueInput, distinct: [CardTagsScalarFieldEnum!], orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): CardTags
  findFirstCardTagsOrThrow(cursor: CardTagsWhereUniqueInput, distinct: [CardTagsScalarFieldEnum!], orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): CardTags
  findFirstClient(cursor: ClientWhereUniqueInput, distinct: [ClientScalarFieldEnum!], orderBy: [ClientOrderByWithRelationInput!], skip: Int, take: Int, where: ClientWhereInput): Client
  findFirstClientOrThrow(cursor: ClientWhereUniqueInput, distinct: [ClientScalarFieldEnum!], orderBy: [ClientOrderByWithRelationInput!], skip: Int, take: Int, where: ClientWhereInput): Client
  findFirstColumn(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): Column
  findFirstColumnOrThrow(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): Column
  findFirstCommentProject(cursor: CommentProjectWhereUniqueInput, distinct: [CommentProjectScalarFieldEnum!], orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): CommentProject
  findFirstCommentProjectOrThrow(cursor: CommentProjectWhereUniqueInput, distinct: [CommentProjectScalarFieldEnum!], orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): CommentProject
  findFirstCsat(cursor: CsatWhereUniqueInput, distinct: [CsatScalarFieldEnum!], orderBy: [CsatOrderByWithRelationInput!], skip: Int, take: Int, where: CsatWhereInput): Csat
  findFirstCsatOrThrow(cursor: CsatWhereUniqueInput, distinct: [CsatScalarFieldEnum!], orderBy: [CsatOrderByWithRelationInput!], skip: Int, take: Int, where: CsatWhereInput): Csat
  findFirstField(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): Field
  findFirstFieldColumn(cursor: FieldColumnWhereUniqueInput, distinct: [FieldColumnScalarFieldEnum!], orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): FieldColumn
  findFirstFieldColumnOrThrow(cursor: FieldColumnWhereUniqueInput, distinct: [FieldColumnScalarFieldEnum!], orderBy: [FieldColumnOrderByWithRelationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): FieldColumn
  findFirstFieldOrThrow(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): Field
  findFirstFieldsValue(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): FieldsValue
  findFirstFieldsValueOrThrow(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): FieldsValue
  findFirstGroup(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): Group
  findFirstGroupMenbership(cursor: GroupMenbershipWhereUniqueInput, distinct: [GroupMenbershipScalarFieldEnum!], orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): GroupMenbership
  findFirstGroupMenbershipOrThrow(cursor: GroupMenbershipWhereUniqueInput, distinct: [GroupMenbershipScalarFieldEnum!], orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): GroupMenbership
  findFirstGroupOrThrow(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): Group
  findFirstGroupUser(cursor: GroupUserWhereUniqueInput, distinct: [GroupUserScalarFieldEnum!], orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): GroupUser
  findFirstGroupUserOrThrow(cursor: GroupUserWhereUniqueInput, distinct: [GroupUserScalarFieldEnum!], orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): GroupUser
  findFirstHistoryFlag(cursor: HistoryFlagWhereUniqueInput, distinct: [HistoryFlagScalarFieldEnum!], orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): HistoryFlag
  findFirstHistoryFlagOrThrow(cursor: HistoryFlagWhereUniqueInput, distinct: [HistoryFlagScalarFieldEnum!], orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): HistoryFlag
  findFirstHistoryMonthlyRecurringRevenue(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, distinct: [HistoryMonthlyRecurringRevenueScalarFieldEnum!], orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): HistoryMonthlyRecurringRevenue
  findFirstHistoryMonthlyRecurringRevenueOrThrow(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, distinct: [HistoryMonthlyRecurringRevenueScalarFieldEnum!], orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): HistoryMonthlyRecurringRevenue
  findFirstHistoryStep(cursor: HistoryStepWhereUniqueInput, distinct: [HistoryStepScalarFieldEnum!], orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): HistoryStep
  findFirstHistoryStepOrThrow(cursor: HistoryStepWhereUniqueInput, distinct: [HistoryStepScalarFieldEnum!], orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): HistoryStep
  findFirstInvest(cursor: InvestWhereUniqueInput, distinct: [InvestScalarFieldEnum!], orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): Invest
  findFirstInvestOrThrow(cursor: InvestWhereUniqueInput, distinct: [InvestScalarFieldEnum!], orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): Invest
  findFirstJobFunction(cursor: JobFunctionWhereUniqueInput, distinct: [JobFunctionScalarFieldEnum!], orderBy: [JobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: JobFunctionWhereInput): JobFunction
  findFirstJobFunctionOrThrow(cursor: JobFunctionWhereUniqueInput, distinct: [JobFunctionScalarFieldEnum!], orderBy: [JobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: JobFunctionWhereInput): JobFunction
  findFirstKr(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): Kr
  findFirstKrCommentProject(cursor: KrCommentProjectWhereUniqueInput, distinct: [KrCommentProjectScalarFieldEnum!], orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): KrCommentProject
  findFirstKrCommentProjectOrThrow(cursor: KrCommentProjectWhereUniqueInput, distinct: [KrCommentProjectScalarFieldEnum!], orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): KrCommentProject
  findFirstKrOrThrow(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): Kr
  findFirstNotfy(cursor: NotfyWhereUniqueInput, distinct: [NotfyScalarFieldEnum!], orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): Notfy
  findFirstNotfyOrThrow(cursor: NotfyWhereUniqueInput, distinct: [NotfyScalarFieldEnum!], orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): Notfy
  findFirstObjective(cursor: ObjectiveWhereUniqueInput, distinct: [ObjectiveScalarFieldEnum!], orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): Objective
  findFirstObjectiveOrThrow(cursor: ObjectiveWhereUniqueInput, distinct: [ObjectiveScalarFieldEnum!], orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): Objective
  findFirstOkrObjectiveProject(cursor: OkrObjectiveProjectWhereUniqueInput, distinct: [OkrObjectiveProjectScalarFieldEnum!], orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): OkrObjectiveProject
  findFirstOkrObjectiveProjectOrThrow(cursor: OkrObjectiveProjectWhereUniqueInput, distinct: [OkrObjectiveProjectScalarFieldEnum!], orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): OkrObjectiveProject
  findFirstOkrProject(cursor: OkrProjectWhereUniqueInput, distinct: [OkrProjectScalarFieldEnum!], orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): OkrProject
  findFirstOkrProjectHistory(cursor: OkrProjectHistoryWhereUniqueInput, distinct: [OkrProjectHistoryScalarFieldEnum!], orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): OkrProjectHistory
  findFirstOkrProjectHistoryOrThrow(cursor: OkrProjectHistoryWhereUniqueInput, distinct: [OkrProjectHistoryScalarFieldEnum!], orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): OkrProjectHistory
  findFirstOkrProjectOrThrow(cursor: OkrProjectWhereUniqueInput, distinct: [OkrProjectScalarFieldEnum!], orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): OkrProject
  findFirstOrganization(cursor: OrganizationWhereUniqueInput, distinct: [OrganizationScalarFieldEnum!], orderBy: [OrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: OrganizationWhereInput): Organization
  findFirstOrganizationOrThrow(cursor: OrganizationWhereUniqueInput, distinct: [OrganizationScalarFieldEnum!], orderBy: [OrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: OrganizationWhereInput): Organization
  findFirstPermission(cursor: PermissionWhereUniqueInput, distinct: [PermissionScalarFieldEnum!], orderBy: [PermissionOrderByWithRelationInput!], skip: Int, take: Int, where: PermissionWhereInput): Permission
  findFirstPermissionOrThrow(cursor: PermissionWhereUniqueInput, distinct: [PermissionScalarFieldEnum!], orderBy: [PermissionOrderByWithRelationInput!], skip: Int, take: Int, where: PermissionWhereInput): Permission
  findFirstPipefyProject(cursor: PipefyProjectWhereUniqueInput, distinct: [PipefyProjectScalarFieldEnum!], orderBy: [PipefyProjectOrderByWithRelationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): PipefyProject
  findFirstPipefyProjectOrThrow(cursor: PipefyProjectWhereUniqueInput, distinct: [PipefyProjectScalarFieldEnum!], orderBy: [PipefyProjectOrderByWithRelationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): PipefyProject
  findFirstPrimitiveFields(cursor: PrimitiveFieldsWhereUniqueInput, distinct: [PrimitiveFieldsScalarFieldEnum!], orderBy: [PrimitiveFieldsOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveFieldsWhereInput): PrimitiveFields
  findFirstPrimitiveFieldsOrThrow(cursor: PrimitiveFieldsWhereUniqueInput, distinct: [PrimitiveFieldsScalarFieldEnum!], orderBy: [PrimitiveFieldsOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveFieldsWhereInput): PrimitiveFields
  findFirstPrimitiveStreenght(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): PrimitiveStreenght
  findFirstPrimitiveStreenghtOrThrow(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): PrimitiveStreenght
  findFirstProject(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): Project
  findFirstProjectManager(cursor: ProjectManagerWhereUniqueInput, distinct: [ProjectManagerScalarFieldEnum!], orderBy: [ProjectManagerOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): ProjectManager
  findFirstProjectManagerOrThrow(cursor: ProjectManagerWhereUniqueInput, distinct: [ProjectManagerScalarFieldEnum!], orderBy: [ProjectManagerOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): ProjectManager
  findFirstProjectOrThrow(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): Project
  findFirstProjectsBoards(cursor: ProjectsBoardsWhereUniqueInput, distinct: [ProjectsBoardsScalarFieldEnum!], orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): ProjectsBoards
  findFirstProjectsBoardsOrThrow(cursor: ProjectsBoardsWhereUniqueInput, distinct: [ProjectsBoardsScalarFieldEnum!], orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): ProjectsBoards
  findFirstQnp(cursor: QnpWhereUniqueInput, distinct: [QnpScalarFieldEnum!], orderBy: [QnpOrderByWithRelationInput!], skip: Int, take: Int, where: QnpWhereInput): Qnp
  findFirstQnpOrThrow(cursor: QnpWhereUniqueInput, distinct: [QnpScalarFieldEnum!], orderBy: [QnpOrderByWithRelationInput!], skip: Int, take: Int, where: QnpWhereInput): Qnp
  findFirstReceivedClient(cursor: ReceivedClientWhereUniqueInput, distinct: [ReceivedClientScalarFieldEnum!], orderBy: [ReceivedClientOrderByWithRelationInput!], skip: Int, take: Int, where: ReceivedClientWhereInput): ReceivedClient
  findFirstReceivedClientOrThrow(cursor: ReceivedClientWhereUniqueInput, distinct: [ReceivedClientScalarFieldEnum!], orderBy: [ReceivedClientOrderByWithRelationInput!], skip: Int, take: Int, where: ReceivedClientWhereInput): ReceivedClient
  findFirstSelfStructure(cursor: SelfStructureWhereUniqueInput, distinct: [SelfStructureScalarFieldEnum!], orderBy: [SelfStructureOrderByWithRelationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): SelfStructure
  findFirstSelfStructureOrThrow(cursor: SelfStructureWhereUniqueInput, distinct: [SelfStructureScalarFieldEnum!], orderBy: [SelfStructureOrderByWithRelationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): SelfStructure
  findFirstServiceLevelAgreement(cursor: ServiceLevelAgreementWhereUniqueInput, distinct: [ServiceLevelAgreementScalarFieldEnum!], orderBy: [ServiceLevelAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): ServiceLevelAgreement
  findFirstServiceLevelAgreementOrThrow(cursor: ServiceLevelAgreementWhereUniqueInput, distinct: [ServiceLevelAgreementScalarFieldEnum!], orderBy: [ServiceLevelAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): ServiceLevelAgreement
  findFirstStep(cursor: StepWhereUniqueInput, distinct: [StepScalarFieldEnum!], orderBy: [StepOrderByWithRelationInput!], skip: Int, take: Int, where: StepWhereInput): Step
  findFirstStepOrThrow(cursor: StepWhereUniqueInput, distinct: [StepScalarFieldEnum!], orderBy: [StepOrderByWithRelationInput!], skip: Int, take: Int, where: StepWhereInput): Step
  findFirstTag(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): Tag
  findFirstTagOrThrow(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): Tag
  findFirstTask(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum!], orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): Task
  findFirstTaskOrThrow(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum!], orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): Task
  findFirstTeam(cursor: TeamWhereUniqueInput, distinct: [TeamScalarFieldEnum!], orderBy: [TeamOrderByWithRelationInput!], skip: Int, take: Int, where: TeamWhereInput): Team
  findFirstTeamOrThrow(cursor: TeamWhereUniqueInput, distinct: [TeamScalarFieldEnum!], orderBy: [TeamOrderByWithRelationInput!], skip: Int, take: Int, where: TeamWhereInput): Team
  findFirstThrowErrorFront(cursor: ThrowErrorFrontWhereUniqueInput, distinct: [ThrowErrorFrontScalarFieldEnum!], orderBy: [ThrowErrorFrontOrderByWithRelationInput!], skip: Int, take: Int, where: ThrowErrorFrontWhereInput): ThrowErrorFront
  findFirstThrowErrorFrontOrThrow(cursor: ThrowErrorFrontWhereUniqueInput, distinct: [ThrowErrorFrontScalarFieldEnum!], orderBy: [ThrowErrorFrontOrderByWithRelationInput!], skip: Int, take: Int, where: ThrowErrorFrontWhereInput): ThrowErrorFront
  findFirstTokenFirebase(cursor: TokenFirebaseWhereUniqueInput, distinct: [TokenFirebaseScalarFieldEnum!], orderBy: [TokenFirebaseOrderByWithRelationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): TokenFirebase
  findFirstTokenFirebaseOrThrow(cursor: TokenFirebaseWhereUniqueInput, distinct: [TokenFirebaseScalarFieldEnum!], orderBy: [TokenFirebaseOrderByWithRelationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): TokenFirebase
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  findFirstUserJobFunction(cursor: UserJobFunctionWhereUniqueInput, distinct: [UserJobFunctionScalarFieldEnum!], orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): UserJobFunction
  findFirstUserJobFunctionOrThrow(cursor: UserJobFunctionWhereUniqueInput, distinct: [UserJobFunctionScalarFieldEnum!], orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): UserJobFunction
  findFirstUserNotfy(cursor: UserNotfyWhereUniqueInput, distinct: [UserNotfyScalarFieldEnum!], orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): UserNotfy
  findFirstUserNotfyOrThrow(cursor: UserNotfyWhereUniqueInput, distinct: [UserNotfyScalarFieldEnum!], orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): UserNotfy
  findFirstUserOrThrow(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  findFirstUserOrganization(cursor: UserOrganizationWhereUniqueInput, distinct: [UserOrganizationScalarFieldEnum!], orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): UserOrganization
  findFirstUserOrganizationOrThrow(cursor: UserOrganizationWhereUniqueInput, distinct: [UserOrganizationScalarFieldEnum!], orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): UserOrganization
  findFirstUserStep(cursor: UserStepWhereUniqueInput, distinct: [UserStepScalarFieldEnum!], orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): UserStep
  findFirstUserStepOrThrow(cursor: UserStepWhereUniqueInput, distinct: [UserStepScalarFieldEnum!], orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): UserStep
  findFirstUserTeam(cursor: UserTeamWhereUniqueInput, distinct: [UserTeamScalarFieldEnum!], orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): UserTeam
  findFirstUserTeamOrThrow(cursor: UserTeamWhereUniqueInput, distinct: [UserTeamScalarFieldEnum!], orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): UserTeam
  findFirstViewedCommentProject(cursor: ViewedCommentProjectWhereUniqueInput, distinct: [ViewedCommentProjectScalarFieldEnum!], orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): ViewedCommentProject
  findFirstViewedCommentProjectOrThrow(cursor: ViewedCommentProjectWhereUniqueInput, distinct: [ViewedCommentProjectScalarFieldEnum!], orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): ViewedCommentProject
  findManyArchives(cursor: ArchivesWhereUniqueInput, distinct: [ArchivesScalarFieldEnum!], orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): [Archives!]!
  findManyCardTags(cursor: CardTagsWhereUniqueInput, distinct: [CardTagsScalarFieldEnum!], orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): [CardTags!]!
  findManyPrimitiveFields(cursor: PrimitiveFieldsWhereUniqueInput, distinct: [PrimitiveFieldsScalarFieldEnum!], orderBy: [PrimitiveFieldsOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveFieldsWhereInput): [PrimitiveFields!]!
  findManyProjectsBoards(cursor: ProjectsBoardsWhereUniqueInput, distinct: [ProjectsBoardsScalarFieldEnum!], orderBy: [ProjectsBoardsOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): [ProjectsBoards!]!
  findUniqueArchives(where: ArchivesWhereUniqueInput!): Archives
  findUniqueArchivesOrThrow(where: ArchivesWhereUniqueInput!): Archives
  findUniqueCardInHistoryComponent(id: String!): findUniqueCardInHistoryComponentOutput!
  findUniqueCardTags(where: CardTagsWhereUniqueInput!): CardTags
  findUniqueCardTagsOrThrow(where: CardTagsWhereUniqueInput!): CardTags
  findUniquePrimitiveFields(where: PrimitiveFieldsWhereUniqueInput!): PrimitiveFields
  findUniquePrimitiveFieldsOrThrow(where: PrimitiveFieldsWhereUniqueInput!): PrimitiveFields
  findUniqueProjectsBoards(where: ProjectsBoardsWhereUniqueInput!): ProjectsBoards
  findUniqueProjectsBoardsOrThrow(where: ProjectsBoardsWhereUniqueInput!): ProjectsBoards
  getAcessHistoryUser(where: AcessHistoryUserWhereUniqueInput!): AcessHistoryUser
  getBoard(where: BoardWhereUniqueInput!): Board
  getBoardMenbership(where: BoardMenbershipWhereUniqueInput!): BoardMenbership
  getCard(where: CardWhereUniqueInput!): Card
  getCardAssignment(where: CardAssignmentWhereUniqueInput!): CardAssignment
  getCardComment(where: CardCommentWhereUniqueInput!): CardComment
  getCardMovement(where: CardMovementWhereUniqueInput!): CardMovement
  getClient(where: ClientWhereUniqueInput!): Client
  getColumn(where: ColumnWhereUniqueInput!): Column
  getCommentProject(where: CommentProjectWhereUniqueInput!): CommentProject
  getCsat(where: CsatWhereUniqueInput!): Csat
  getField(where: FieldWhereUniqueInput!): Field
  getFieldColumn(where: FieldColumnWhereUniqueInput!): FieldColumn
  getFieldsValue(where: FieldsValueWhereUniqueInput!): FieldsValue
  getGroup(where: GroupWhereUniqueInput!): Group
  getGroupMenbership(where: GroupMenbershipWhereUniqueInput!): GroupMenbership
  getGroupUser(where: GroupUserWhereUniqueInput!): GroupUser
  getHistoryFlag(where: HistoryFlagWhereUniqueInput!): HistoryFlag
  getHistoryMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereUniqueInput!): HistoryMonthlyRecurringRevenue
  getHistoryStep(where: HistoryStepWhereUniqueInput!): HistoryStep
  getInvest(where: InvestWhereUniqueInput!): Invest
  getJobFunction(where: JobFunctionWhereUniqueInput!): JobFunction
  getKr(where: KrWhereUniqueInput!): Kr
  getKrCommentProject(where: KrCommentProjectWhereUniqueInput!): KrCommentProject
  getNotfy(where: NotfyWhereUniqueInput!): Notfy
  getObjective(where: ObjectiveWhereUniqueInput!): Objective
  getOkrObjectiveProject(where: OkrObjectiveProjectWhereUniqueInput!): OkrObjectiveProject
  getOkrProject(where: OkrProjectWhereUniqueInput!): OkrProject
  getOkrProjectHistory(where: OkrProjectHistoryWhereUniqueInput!): OkrProjectHistory
  getOrganization(where: OrganizationWhereUniqueInput!): Organization
  getPermission(where: PermissionWhereUniqueInput!): Permission
  getPipefyProject(where: PipefyProjectWhereUniqueInput!): PipefyProject
  getPrimitiveStreenght(where: PrimitiveStreenghtWhereUniqueInput!): PrimitiveStreenght
  getProject(where: ProjectWhereUniqueInput!): Project
  getProjectManager(where: ProjectManagerWhereUniqueInput!): ProjectManager
  getQnp(where: QnpWhereUniqueInput!): Qnp
  getReceivedClient(where: ReceivedClientWhereUniqueInput!): ReceivedClient
  getSelfStructure(where: SelfStructureWhereUniqueInput!): SelfStructure
  getServiceLevelAgreement(where: ServiceLevelAgreementWhereUniqueInput!): ServiceLevelAgreement
  getStep(where: StepWhereUniqueInput!): Step
  getTag(where: TagWhereUniqueInput!): Tag
  getTask(where: TaskWhereUniqueInput!): Task
  getTeam(where: TeamWhereUniqueInput!): Team
  getThrowErrorFront(where: ThrowErrorFrontWhereUniqueInput!): ThrowErrorFront
  getTokenFirebase(where: TokenFirebaseWhereUniqueInput!): TokenFirebase
  getUser(where: UserWhereUniqueInput!): User
  getUserJobFunction(where: UserJobFunctionWhereUniqueInput!): UserJobFunction
  getUserNotfy(where: UserNotfyWhereUniqueInput!): UserNotfy
  getUserOrganization(where: UserOrganizationWhereUniqueInput!): UserOrganization
  getUserStep(where: UserStepWhereUniqueInput!): UserStep
  getUserTeam(where: UserTeamWhereUniqueInput!): UserTeam
  getViewedCommentProject(where: ViewedCommentProjectWhereUniqueInput!): ViewedCommentProject
  group(where: GroupWhereUniqueInput!): Group
  groupByAcessHistoryUser(by: [AcessHistoryUserScalarFieldEnum!]!, having: AcessHistoryUserScalarWhereWithAggregatesInput, orderBy: [AcessHistoryUserOrderByWithAggregationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): [AcessHistoryUserGroupBy!]!
  groupByArchives(by: [ArchivesScalarFieldEnum!]!, having: ArchivesScalarWhereWithAggregatesInput, orderBy: [ArchivesOrderByWithAggregationInput!], skip: Int, take: Int, where: ArchivesWhereInput): [ArchivesGroupBy!]!
  groupByBoard(by: [BoardScalarFieldEnum!]!, having: BoardScalarWhereWithAggregatesInput, orderBy: [BoardOrderByWithAggregationInput!], skip: Int, take: Int, where: BoardWhereInput): [BoardGroupBy!]!
  groupByBoardMenbership(by: [BoardMenbershipScalarFieldEnum!]!, having: BoardMenbershipScalarWhereWithAggregatesInput, orderBy: [BoardMenbershipOrderByWithAggregationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): [BoardMenbershipGroupBy!]!
  groupByCard(by: [CardScalarFieldEnum!]!, having: CardScalarWhereWithAggregatesInput, orderBy: [CardOrderByWithAggregationInput!], skip: Int, take: Int, where: CardWhereInput): [CardGroupBy!]!
  groupByCardAssignment(by: [CardAssignmentScalarFieldEnum!]!, having: CardAssignmentScalarWhereWithAggregatesInput, orderBy: [CardAssignmentOrderByWithAggregationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): [CardAssignmentGroupBy!]!
  groupByCardComment(by: [CardCommentScalarFieldEnum!]!, having: CardCommentScalarWhereWithAggregatesInput, orderBy: [CardCommentOrderByWithAggregationInput!], skip: Int, take: Int, where: CardCommentWhereInput): [CardCommentGroupBy!]!
  groupByCardMovement(by: [CardMovementScalarFieldEnum!]!, having: CardMovementScalarWhereWithAggregatesInput, orderBy: [CardMovementOrderByWithAggregationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovementGroupBy!]!
  groupByCardTags(by: [CardTagsScalarFieldEnum!]!, having: CardTagsScalarWhereWithAggregatesInput, orderBy: [CardTagsOrderByWithAggregationInput!], skip: Int, take: Int, where: CardTagsWhereInput): [CardTagsGroupBy!]!
  groupByClient(by: [ClientScalarFieldEnum!]!, having: ClientScalarWhereWithAggregatesInput, orderBy: [ClientOrderByWithAggregationInput!], skip: Int, take: Int, where: ClientWhereInput): [ClientGroupBy!]!
  groupByColumn(by: [ColumnScalarFieldEnum!]!, having: ColumnScalarWhereWithAggregatesInput, orderBy: [ColumnOrderByWithAggregationInput!], skip: Int, take: Int, where: ColumnWhereInput): [ColumnGroupBy!]!
  groupByCommentProject(by: [CommentProjectScalarFieldEnum!]!, having: CommentProjectScalarWhereWithAggregatesInput, orderBy: [CommentProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): [CommentProjectGroupBy!]!
  groupByCsat(by: [CsatScalarFieldEnum!]!, having: CsatScalarWhereWithAggregatesInput, orderBy: [CsatOrderByWithAggregationInput!], skip: Int, take: Int, where: CsatWhereInput): [CsatGroupBy!]!
  groupByField(by: [FieldScalarFieldEnum!]!, having: FieldScalarWhereWithAggregatesInput, orderBy: [FieldOrderByWithAggregationInput!], skip: Int, take: Int, where: FieldWhereInput): [FieldGroupBy!]!
  groupByFieldColumn(by: [FieldColumnScalarFieldEnum!]!, having: FieldColumnScalarWhereWithAggregatesInput, orderBy: [FieldColumnOrderByWithAggregationInput!], skip: Int, take: Int, where: FieldColumnWhereInput): [FieldColumnGroupBy!]!
  groupByFieldsValue(by: [FieldsValueScalarFieldEnum!]!, having: FieldsValueScalarWhereWithAggregatesInput, orderBy: [FieldsValueOrderByWithAggregationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): [FieldsValueGroupBy!]!
  groupByGroup(by: [GroupScalarFieldEnum!]!, having: GroupScalarWhereWithAggregatesInput, orderBy: [GroupOrderByWithAggregationInput!], skip: Int, take: Int, where: GroupWhereInput): [GroupGroupBy!]!
  groupByGroupMenbership(by: [GroupMenbershipScalarFieldEnum!]!, having: GroupMenbershipScalarWhereWithAggregatesInput, orderBy: [GroupMenbershipOrderByWithAggregationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): [GroupMenbershipGroupBy!]!
  groupByGroupUser(by: [GroupUserScalarFieldEnum!]!, having: GroupUserScalarWhereWithAggregatesInput, orderBy: [GroupUserOrderByWithAggregationInput!], skip: Int, take: Int, where: GroupUserWhereInput): [GroupUserGroupBy!]!
  groupByHistoryFlag(by: [HistoryFlagScalarFieldEnum!]!, having: HistoryFlagScalarWhereWithAggregatesInput, orderBy: [HistoryFlagOrderByWithAggregationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): [HistoryFlagGroupBy!]!
  groupByHistoryMonthlyRecurringRevenue(by: [HistoryMonthlyRecurringRevenueScalarFieldEnum!]!, having: HistoryMonthlyRecurringRevenueScalarWhereWithAggregatesInput, orderBy: [HistoryMonthlyRecurringRevenueOrderByWithAggregationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): [HistoryMonthlyRecurringRevenueGroupBy!]!
  groupByHistoryStep(by: [HistoryStepScalarFieldEnum!]!, having: HistoryStepScalarWhereWithAggregatesInput, orderBy: [HistoryStepOrderByWithAggregationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): [HistoryStepGroupBy!]!
  groupByInvest(by: [InvestScalarFieldEnum!]!, having: InvestScalarWhereWithAggregatesInput, orderBy: [InvestOrderByWithAggregationInput!], skip: Int, take: Int, where: InvestWhereInput): [InvestGroupBy!]!
  groupByJobFunction(by: [JobFunctionScalarFieldEnum!]!, having: JobFunctionScalarWhereWithAggregatesInput, orderBy: [JobFunctionOrderByWithAggregationInput!], skip: Int, take: Int, where: JobFunctionWhereInput): [JobFunctionGroupBy!]!
  groupByKr(by: [KrScalarFieldEnum!]!, having: KrScalarWhereWithAggregatesInput, orderBy: [KrOrderByWithAggregationInput!], skip: Int, take: Int, where: KrWhereInput): [KrGroupBy!]!
  groupByKrCommentProject(by: [KrCommentProjectScalarFieldEnum!]!, having: KrCommentProjectScalarWhereWithAggregatesInput, orderBy: [KrCommentProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): [KrCommentProjectGroupBy!]!
  groupByNotfy(by: [NotfyScalarFieldEnum!]!, having: NotfyScalarWhereWithAggregatesInput, orderBy: [NotfyOrderByWithAggregationInput!], skip: Int, take: Int, where: NotfyWhereInput): [NotfyGroupBy!]!
  groupByObjective(by: [ObjectiveScalarFieldEnum!]!, having: ObjectiveScalarWhereWithAggregatesInput, orderBy: [ObjectiveOrderByWithAggregationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): [ObjectiveGroupBy!]!
  groupByOkrObjectiveProject(by: [OkrObjectiveProjectScalarFieldEnum!]!, having: OkrObjectiveProjectScalarWhereWithAggregatesInput, orderBy: [OkrObjectiveProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): [OkrObjectiveProjectGroupBy!]!
  groupByOkrProject(by: [OkrProjectScalarFieldEnum!]!, having: OkrProjectScalarWhereWithAggregatesInput, orderBy: [OkrProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): [OkrProjectGroupBy!]!
  groupByOkrProjectHistory(by: [OkrProjectHistoryScalarFieldEnum!]!, having: OkrProjectHistoryScalarWhereWithAggregatesInput, orderBy: [OkrProjectHistoryOrderByWithAggregationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): [OkrProjectHistoryGroupBy!]!
  groupByOrganization(by: [OrganizationScalarFieldEnum!]!, having: OrganizationScalarWhereWithAggregatesInput, orderBy: [OrganizationOrderByWithAggregationInput!], skip: Int, take: Int, where: OrganizationWhereInput): [OrganizationGroupBy!]!
  groupByPermission(by: [PermissionScalarFieldEnum!]!, having: PermissionScalarWhereWithAggregatesInput, orderBy: [PermissionOrderByWithAggregationInput!], skip: Int, take: Int, where: PermissionWhereInput): [PermissionGroupBy!]!
  groupByPipefyProject(by: [PipefyProjectScalarFieldEnum!]!, having: PipefyProjectScalarWhereWithAggregatesInput, orderBy: [PipefyProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): [PipefyProjectGroupBy!]!
  groupByPrimitiveFields(by: [PrimitiveFieldsScalarFieldEnum!]!, having: PrimitiveFieldsScalarWhereWithAggregatesInput, orderBy: [PrimitiveFieldsOrderByWithAggregationInput!], skip: Int, take: Int, where: PrimitiveFieldsWhereInput): [PrimitiveFieldsGroupBy!]!
  groupByPrimitiveStreenght(by: [PrimitiveStreenghtScalarFieldEnum!]!, having: PrimitiveStreenghtScalarWhereWithAggregatesInput, orderBy: [PrimitiveStreenghtOrderByWithAggregationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): [PrimitiveStreenghtGroupBy!]!
  groupByProject(by: [ProjectScalarFieldEnum!]!, having: ProjectScalarWhereWithAggregatesInput, orderBy: [ProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: ProjectWhereInput): [ProjectGroupBy!]!
  groupByProjectManager(by: [ProjectManagerScalarFieldEnum!]!, having: ProjectManagerScalarWhereWithAggregatesInput, orderBy: [ProjectManagerOrderByWithAggregationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): [ProjectManagerGroupBy!]!
  groupByProjectsBoards(by: [ProjectsBoardsScalarFieldEnum!]!, having: ProjectsBoardsScalarWhereWithAggregatesInput, orderBy: [ProjectsBoardsOrderByWithAggregationInput!], skip: Int, take: Int, where: ProjectsBoardsWhereInput): [ProjectsBoardsGroupBy!]!
  groupByQnp(by: [QnpScalarFieldEnum!]!, having: QnpScalarWhereWithAggregatesInput, orderBy: [QnpOrderByWithAggregationInput!], skip: Int, take: Int, where: QnpWhereInput): [QnpGroupBy!]!
  groupByReceivedClient(by: [ReceivedClientScalarFieldEnum!]!, having: ReceivedClientScalarWhereWithAggregatesInput, orderBy: [ReceivedClientOrderByWithAggregationInput!], skip: Int, take: Int, where: ReceivedClientWhereInput): [ReceivedClientGroupBy!]!
  groupBySelfStructure(by: [SelfStructureScalarFieldEnum!]!, having: SelfStructureScalarWhereWithAggregatesInput, orderBy: [SelfStructureOrderByWithAggregationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): [SelfStructureGroupBy!]!
  groupByServiceLevelAgreement(by: [ServiceLevelAgreementScalarFieldEnum!]!, having: ServiceLevelAgreementScalarWhereWithAggregatesInput, orderBy: [ServiceLevelAgreementOrderByWithAggregationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): [ServiceLevelAgreementGroupBy!]!
  groupByStep(by: [StepScalarFieldEnum!]!, having: StepScalarWhereWithAggregatesInput, orderBy: [StepOrderByWithAggregationInput!], skip: Int, take: Int, where: StepWhereInput): [StepGroupBy!]!
  groupByTag(by: [TagScalarFieldEnum!]!, having: TagScalarWhereWithAggregatesInput, orderBy: [TagOrderByWithAggregationInput!], skip: Int, take: Int, where: TagWhereInput): [TagGroupBy!]!
  groupByTask(by: [TaskScalarFieldEnum!]!, having: TaskScalarWhereWithAggregatesInput, orderBy: [TaskOrderByWithAggregationInput!], skip: Int, take: Int, where: TaskWhereInput): [TaskGroupBy!]!
  groupByTeam(by: [TeamScalarFieldEnum!]!, having: TeamScalarWhereWithAggregatesInput, orderBy: [TeamOrderByWithAggregationInput!], skip: Int, take: Int, where: TeamWhereInput): [TeamGroupBy!]!
  groupByThrowErrorFront(by: [ThrowErrorFrontScalarFieldEnum!]!, having: ThrowErrorFrontScalarWhereWithAggregatesInput, orderBy: [ThrowErrorFrontOrderByWithAggregationInput!], skip: Int, take: Int, where: ThrowErrorFrontWhereInput): [ThrowErrorFrontGroupBy!]!
  groupByTokenFirebase(by: [TokenFirebaseScalarFieldEnum!]!, having: TokenFirebaseScalarWhereWithAggregatesInput, orderBy: [TokenFirebaseOrderByWithAggregationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): [TokenFirebaseGroupBy!]!
  groupByUser(by: [UserScalarFieldEnum!]!, having: UserScalarWhereWithAggregatesInput, orderBy: [UserOrderByWithAggregationInput!], skip: Int, take: Int, where: UserWhereInput): [UserGroupBy!]!
  groupByUserJobFunction(by: [UserJobFunctionScalarFieldEnum!]!, having: UserJobFunctionScalarWhereWithAggregatesInput, orderBy: [UserJobFunctionOrderByWithAggregationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): [UserJobFunctionGroupBy!]!
  groupByUserNotfy(by: [UserNotfyScalarFieldEnum!]!, having: UserNotfyScalarWhereWithAggregatesInput, orderBy: [UserNotfyOrderByWithAggregationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): [UserNotfyGroupBy!]!
  groupByUserOrganization(by: [UserOrganizationScalarFieldEnum!]!, having: UserOrganizationScalarWhereWithAggregatesInput, orderBy: [UserOrganizationOrderByWithAggregationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): [UserOrganizationGroupBy!]!
  groupByUserStep(by: [UserStepScalarFieldEnum!]!, having: UserStepScalarWhereWithAggregatesInput, orderBy: [UserStepOrderByWithAggregationInput!], skip: Int, take: Int, where: UserStepWhereInput): [UserStepGroupBy!]!
  groupByUserTeam(by: [UserTeamScalarFieldEnum!]!, having: UserTeamScalarWhereWithAggregatesInput, orderBy: [UserTeamOrderByWithAggregationInput!], skip: Int, take: Int, where: UserTeamWhereInput): [UserTeamGroupBy!]!
  groupByViewedCommentProject(by: [ViewedCommentProjectScalarFieldEnum!]!, having: ViewedCommentProjectScalarWhereWithAggregatesInput, orderBy: [ViewedCommentProjectOrderByWithAggregationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): [ViewedCommentProjectGroupBy!]!
  groupMenbership(where: GroupMenbershipWhereUniqueInput!): GroupMenbership
  groupMenberships(cursor: GroupMenbershipWhereUniqueInput, distinct: [GroupMenbershipScalarFieldEnum!], orderBy: [GroupMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: GroupMenbershipWhereInput): [GroupMenbership!]!
  groupUser(where: GroupUserWhereUniqueInput!): GroupUser
  groupUsers(cursor: GroupUserWhereUniqueInput, distinct: [GroupUserScalarFieldEnum!], orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): [GroupUser!]!
  groups(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  historyFlag(where: HistoryFlagWhereUniqueInput!): HistoryFlag
  historyFlags(cursor: HistoryFlagWhereUniqueInput, distinct: [HistoryFlagScalarFieldEnum!], orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): [HistoryFlag!]!
  historyMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereUniqueInput!): HistoryMonthlyRecurringRevenue
  historyMonthlyRecurringRevenues(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, distinct: [HistoryMonthlyRecurringRevenueScalarFieldEnum!], orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): [HistoryMonthlyRecurringRevenue!]!
  historyStep(where: HistoryStepWhereUniqueInput!): HistoryStep
  historySteps(cursor: HistoryStepWhereUniqueInput, distinct: [HistoryStepScalarFieldEnum!], orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): [HistoryStep!]!
  home: OutputHome!
  homeGameTeam: [OutputHomeGameTeam!]!
  invest(where: InvestWhereUniqueInput!): Invest
  invests(cursor: InvestWhereUniqueInput, distinct: [InvestScalarFieldEnum!], orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): [Invest!]!
  jobFunction(where: JobFunctionWhereUniqueInput!): JobFunction
  jobFunctions(cursor: JobFunctionWhereUniqueInput, distinct: [JobFunctionScalarFieldEnum!], orderBy: [JobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: JobFunctionWhereInput): [JobFunction!]!
  joinInKanban: Boolean!
  kr(where: KrWhereUniqueInput!): Kr
  krCommentProject(where: KrCommentProjectWhereUniqueInput!): KrCommentProject
  krCommentProjects(cursor: KrCommentProjectWhereUniqueInput, distinct: [KrCommentProjectScalarFieldEnum!], orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): [KrCommentProject!]!
  krs(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): [Kr!]!
  monthCalendar(data: DateTimeISO!): [OutputCalendar!]!
  notfies(cursor: NotfyWhereUniqueInput, distinct: [NotfyScalarFieldEnum!], orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): [Notfy!]!
  notfy(where: NotfyWhereUniqueInput!): Notfy
  objective(where: ObjectiveWhereUniqueInput!): Objective
  objectives(cursor: ObjectiveWhereUniqueInput, distinct: [ObjectiveScalarFieldEnum!], orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): [Objective!]!
  okrObjectiveProject(where: OkrObjectiveProjectWhereUniqueInput!): OkrObjectiveProject
  okrObjectiveProjects(cursor: OkrObjectiveProjectWhereUniqueInput, distinct: [OkrObjectiveProjectScalarFieldEnum!], orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): [OkrObjectiveProject!]!
  okrProject(where: OkrProjectWhereUniqueInput!): OkrProject
  okrProjectHistories(cursor: OkrProjectHistoryWhereUniqueInput, distinct: [OkrProjectHistoryScalarFieldEnum!], orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): [OkrProjectHistory!]!
  okrProjectHistory(where: OkrProjectHistoryWhereUniqueInput!): OkrProjectHistory
  okrProjects(cursor: OkrProjectWhereUniqueInput, distinct: [OkrProjectScalarFieldEnum!], orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): [OkrProject!]!
  organization(where: OrganizationWhereUniqueInput!): Organization
  organizations(cursor: OrganizationWhereUniqueInput, distinct: [OrganizationScalarFieldEnum!], orderBy: [OrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: OrganizationWhereInput): [Organization!]!
  permission(where: PermissionWhereUniqueInput!): Permission
  permissions(cursor: PermissionWhereUniqueInput, distinct: [PermissionScalarFieldEnum!], orderBy: [PermissionOrderByWithRelationInput!], skip: Int, take: Int, where: PermissionWhereInput): [Permission!]!
  pipefyProject(where: PipefyProjectWhereUniqueInput!): PipefyProject
  pipefyProjects(cursor: PipefyProjectWhereUniqueInput, distinct: [PipefyProjectScalarFieldEnum!], orderBy: [PipefyProjectOrderByWithRelationInput!], skip: Int, take: Int, where: PipefyProjectWhereInput): [PipefyProject!]!
  primitiveStreenght(where: PrimitiveStreenghtWhereUniqueInput!): PrimitiveStreenght
  primitiveStreenghts(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): [PrimitiveStreenght!]!
  project(where: ProjectWhereUniqueInput!): Project
  projectManager(where: ProjectManagerWhereUniqueInput!): ProjectManager
  projectManagers(cursor: ProjectManagerWhereUniqueInput, distinct: [ProjectManagerScalarFieldEnum!], orderBy: [ProjectManagerOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectManagerWhereInput): [ProjectManager!]!
  projects(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): [Project!]!
  qnp(where: QnpWhereUniqueInput!): Qnp
  qnps(cursor: QnpWhereUniqueInput, distinct: [QnpScalarFieldEnum!], orderBy: [QnpOrderByWithRelationInput!], skip: Int, take: Int, where: QnpWhereInput): [Qnp!]!
  receivedClient(where: ReceivedClientWhereUniqueInput!): ReceivedClient
  receivedClients(cursor: ReceivedClientWhereUniqueInput, distinct: [ReceivedClientScalarFieldEnum!], orderBy: [ReceivedClientOrderByWithRelationInput!], skip: Int, take: Int, where: ReceivedClientWhereInput): [ReceivedClient!]!
  selfStructure(where: SelfStructureWhereUniqueInput!): SelfStructure
  selfStructures(cursor: SelfStructureWhereUniqueInput, distinct: [SelfStructureScalarFieldEnum!], orderBy: [SelfStructureOrderByWithRelationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): [SelfStructure!]!
  selfTemplate: OutputSelfTemplate!
  serviceLevelAgreement(where: ServiceLevelAgreementWhereUniqueInput!): ServiceLevelAgreement
  serviceLevelAgreements(cursor: ServiceLevelAgreementWhereUniqueInput, distinct: [ServiceLevelAgreementScalarFieldEnum!], orderBy: [ServiceLevelAgreementOrderByWithRelationInput!], skip: Int, take: Int, where: ServiceLevelAgreementWhereInput): [ServiceLevelAgreement!]!
  step(where: StepWhereUniqueInput!): Step
  steps(cursor: StepWhereUniqueInput, distinct: [StepScalarFieldEnum!], orderBy: [StepOrderByWithRelationInput!], skip: Int, take: Int, where: StepWhereInput): [Step!]!
  tag(where: TagWhereUniqueInput!): Tag
  tags(cursor: TagWhereUniqueInput, distinct: [TagScalarFieldEnum!], orderBy: [TagOrderByWithRelationInput!], skip: Int, take: Int, where: TagWhereInput): [Tag!]!
  task(where: TaskWhereUniqueInput!): Task
  tasks(cursor: TaskWhereUniqueInput, distinct: [TaskScalarFieldEnum!], orderBy: [TaskOrderByWithRelationInput!], skip: Int, take: Int, where: TaskWhereInput): [Task!]!
  team(where: TeamWhereUniqueInput!): Team
  teams(cursor: TeamWhereUniqueInput, distinct: [TeamScalarFieldEnum!], orderBy: [TeamOrderByWithRelationInput!], skip: Int, take: Int, where: TeamWhereInput): [Team!]!
  throwErrorFront(where: ThrowErrorFrontWhereUniqueInput!): ThrowErrorFront
  throwErrorFronts(cursor: ThrowErrorFrontWhereUniqueInput, distinct: [ThrowErrorFrontScalarFieldEnum!], orderBy: [ThrowErrorFrontOrderByWithRelationInput!], skip: Int, take: Int, where: ThrowErrorFrontWhereInput): [ThrowErrorFront!]!
  tokenFirebase(where: TokenFirebaseWhereUniqueInput!): TokenFirebase
  tokenFirebases(cursor: TokenFirebaseWhereUniqueInput, distinct: [TokenFirebaseScalarFieldEnum!], orderBy: [TokenFirebaseOrderByWithRelationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): [TokenFirebase!]!
  user: Boolean!
  userJobFunction(where: UserJobFunctionWhereUniqueInput!): UserJobFunction
  userJobFunctions(cursor: UserJobFunctionWhereUniqueInput, distinct: [UserJobFunctionScalarFieldEnum!], orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): [UserJobFunction!]!
  userNotfies(cursor: UserNotfyWhereUniqueInput, distinct: [UserNotfyScalarFieldEnum!], orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): [UserNotfy!]!
  userNotfy(where: UserNotfyWhereUniqueInput!): UserNotfy
  userOrganization(where: UserOrganizationWhereUniqueInput!): UserOrganization
  userOrganizations(cursor: UserOrganizationWhereUniqueInput, distinct: [UserOrganizationScalarFieldEnum!], orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): [UserOrganization!]!
  userStep(where: UserStepWhereUniqueInput!): UserStep
  userSteps(cursor: UserStepWhereUniqueInput, distinct: [UserStepScalarFieldEnum!], orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): [UserStep!]!
  userTeam(where: UserTeamWhereUniqueInput!): UserTeam
  userTeams(cursor: UserTeamWhereUniqueInput, distinct: [UserTeamScalarFieldEnum!], orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): [UserTeam!]!
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
  viewedCommentProject(where: ViewedCommentProjectWhereUniqueInput!): ViewedCommentProject
  viewedCommentProjects(cursor: ViewedCommentProjectWhereUniqueInput, distinct: [ViewedCommentProjectScalarFieldEnum!], orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): [ViewedCommentProject!]!
}

enum QueryMode {
  default
  insensitive
}

type ReceivedClient {
  address: String!
  bis: Int!
  city: String!
  cnpj: String!
  content: JSON!
  copies: Int!
  createdAt: DateTimeISO!
  designs: Int!
  emails: Int!
  fantasyName: String!
  fee: Float!
  id: Int!
  initialDateContract: String!
  lps: Int!
  movies: Int!
  mrr: Float!
  name: String!
  pipefyId: Int
  state: String!
  updatedAt: DateTimeISO!
}

type ReceivedClientAvgAggregate {
  bis: Float
  copies: Float
  designs: Float
  emails: Float
  fee: Float
  id: Float
  lps: Float
  movies: Float
  mrr: Float
  pipefyId: Float
}

input ReceivedClientAvgOrderByAggregateInput {
  bis: SortOrder
  copies: SortOrder
  designs: SortOrder
  emails: SortOrder
  fee: SortOrder
  id: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  pipefyId: SortOrder
}

type ReceivedClientCountAggregate {
  _all: Int!
  address: Int!
  bis: Int!
  city: Int!
  cnpj: Int!
  content: Int!
  copies: Int!
  createdAt: Int!
  designs: Int!
  emails: Int!
  fantasyName: Int!
  fee: Int!
  id: Int!
  initialDateContract: Int!
  lps: Int!
  movies: Int!
  mrr: Int!
  name: Int!
  pipefyId: Int!
  state: Int!
  updatedAt: Int!
}

input ReceivedClientCountOrderByAggregateInput {
  address: SortOrder
  bis: SortOrder
  city: SortOrder
  cnpj: SortOrder
  content: SortOrder
  copies: SortOrder
  createdAt: SortOrder
  designs: SortOrder
  emails: SortOrder
  fantasyName: SortOrder
  fee: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  name: SortOrder
  pipefyId: SortOrder
  state: SortOrder
  updatedAt: SortOrder
}

input ReceivedClientCreateManyInput {
  address: String!
  bis: Int
  city: String!
  cnpj: String!
  content: JSON!
  copies: Int
  createdAt: DateTimeISO
  designs: Int
  emails: Int
  fantasyName: String!
  fee: Float
  id: Int
  initialDateContract: String!
  lps: Int
  movies: Int
  mrr: Float
  name: String!
  pipefyId: Int
  state: String!
  updatedAt: DateTimeISO
}

type ReceivedClientGroupBy {
  _avg: ReceivedClientAvgAggregate
  _count: ReceivedClientCountAggregate
  _max: ReceivedClientMaxAggregate
  _min: ReceivedClientMinAggregate
  _sum: ReceivedClientSumAggregate
  address: String!
  bis: Int!
  city: String!
  cnpj: String!
  content: JSON!
  copies: Int!
  createdAt: DateTimeISO!
  designs: Int!
  emails: Int!
  fantasyName: String!
  fee: Float!
  id: Int!
  initialDateContract: String!
  lps: Int!
  movies: Int!
  mrr: Float!
  name: String!
  pipefyId: Int
  state: String!
  updatedAt: DateTimeISO!
}

type ReceivedClientMaxAggregate {
  address: String
  bis: Int
  city: String
  cnpj: String
  copies: Int
  createdAt: DateTimeISO
  designs: Int
  emails: Int
  fantasyName: String
  fee: Float
  id: Int
  initialDateContract: String
  lps: Int
  movies: Int
  mrr: Float
  name: String
  pipefyId: Int
  state: String
  updatedAt: DateTimeISO
}

input ReceivedClientMaxOrderByAggregateInput {
  address: SortOrder
  bis: SortOrder
  city: SortOrder
  cnpj: SortOrder
  copies: SortOrder
  createdAt: SortOrder
  designs: SortOrder
  emails: SortOrder
  fantasyName: SortOrder
  fee: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  name: SortOrder
  pipefyId: SortOrder
  state: SortOrder
  updatedAt: SortOrder
}

type ReceivedClientMinAggregate {
  address: String
  bis: Int
  city: String
  cnpj: String
  copies: Int
  createdAt: DateTimeISO
  designs: Int
  emails: Int
  fantasyName: String
  fee: Float
  id: Int
  initialDateContract: String
  lps: Int
  movies: Int
  mrr: Float
  name: String
  pipefyId: Int
  state: String
  updatedAt: DateTimeISO
}

input ReceivedClientMinOrderByAggregateInput {
  address: SortOrder
  bis: SortOrder
  city: SortOrder
  cnpj: SortOrder
  copies: SortOrder
  createdAt: SortOrder
  designs: SortOrder
  emails: SortOrder
  fantasyName: SortOrder
  fee: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  name: SortOrder
  pipefyId: SortOrder
  state: SortOrder
  updatedAt: SortOrder
}

input ReceivedClientOrderByWithAggregationInput {
  _avg: ReceivedClientAvgOrderByAggregateInput
  _count: ReceivedClientCountOrderByAggregateInput
  _max: ReceivedClientMaxOrderByAggregateInput
  _min: ReceivedClientMinOrderByAggregateInput
  _sum: ReceivedClientSumOrderByAggregateInput
  address: SortOrder
  bis: SortOrder
  city: SortOrder
  cnpj: SortOrder
  content: SortOrder
  copies: SortOrder
  createdAt: SortOrder
  designs: SortOrder
  emails: SortOrder
  fantasyName: SortOrder
  fee: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  name: SortOrder
  pipefyId: SortOrderInput
  state: SortOrder
  updatedAt: SortOrder
}

input ReceivedClientOrderByWithRelationInput {
  address: SortOrder
  bis: SortOrder
  city: SortOrder
  cnpj: SortOrder
  content: SortOrder
  copies: SortOrder
  createdAt: SortOrder
  designs: SortOrder
  emails: SortOrder
  fantasyName: SortOrder
  fee: SortOrder
  id: SortOrder
  initialDateContract: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  name: SortOrder
  pipefyId: SortOrderInput
  state: SortOrder
  updatedAt: SortOrder
}

enum ReceivedClientScalarFieldEnum {
  address
  bis
  city
  cnpj
  content
  copies
  createdAt
  designs
  emails
  fantasyName
  fee
  id
  initialDateContract
  lps
  movies
  mrr
  name
  pipefyId
  state
  updatedAt
}

input ReceivedClientScalarWhereWithAggregatesInput {
  AND: [ReceivedClientScalarWhereWithAggregatesInput!]
  NOT: [ReceivedClientScalarWhereWithAggregatesInput!]
  OR: [ReceivedClientScalarWhereWithAggregatesInput!]
  address: StringWithAggregatesFilter
  bis: IntWithAggregatesFilter
  city: StringWithAggregatesFilter
  cnpj: StringWithAggregatesFilter
  content: JsonWithAggregatesFilter
  copies: IntWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  designs: IntWithAggregatesFilter
  emails: IntWithAggregatesFilter
  fantasyName: StringWithAggregatesFilter
  fee: FloatWithAggregatesFilter
  id: IntWithAggregatesFilter
  initialDateContract: StringWithAggregatesFilter
  lps: IntWithAggregatesFilter
  movies: IntWithAggregatesFilter
  mrr: FloatWithAggregatesFilter
  name: StringWithAggregatesFilter
  pipefyId: IntNullableWithAggregatesFilter
  state: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type ReceivedClientSumAggregate {
  bis: Int
  copies: Int
  designs: Int
  emails: Int
  fee: Float
  id: Int
  lps: Int
  movies: Int
  mrr: Float
  pipefyId: Int
}

input ReceivedClientSumOrderByAggregateInput {
  bis: SortOrder
  copies: SortOrder
  designs: SortOrder
  emails: SortOrder
  fee: SortOrder
  id: SortOrder
  lps: SortOrder
  movies: SortOrder
  mrr: SortOrder
  pipefyId: SortOrder
}

input ReceivedClientUncheckedCreateInput {
  address: String!
  bis: Int
  city: String!
  cnpj: String!
  content: JSON!
  copies: Int
  createdAt: DateTimeISO
  designs: Int
  emails: Int
  fantasyName: String!
  fee: Float
  id: Int
  initialDateContract: String!
  lps: Int
  movies: Int
  mrr: Float
  name: String!
  pipefyId: Int
  state: String!
  updatedAt: DateTimeISO
}

input ReceivedClientUncheckedUpdateInput {
  address: StringFieldUpdateOperationsInput
  bis: IntFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  copies: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  designs: IntFieldUpdateOperationsInput
  emails: IntFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  fee: FloatFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: StringFieldUpdateOperationsInput
  lps: IntFieldUpdateOperationsInput
  movies: IntFieldUpdateOperationsInput
  mrr: FloatFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  pipefyId: NullableIntFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReceivedClientUncheckedUpdateManyInput {
  address: StringFieldUpdateOperationsInput
  bis: IntFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  cnpj: StringFieldUpdateOperationsInput
  content: JSON
  copies: IntFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  designs: IntFieldUpdateOperationsInput
  emails: IntFieldUpdateOperationsInput
  fantasyName: StringFieldUpdateOperationsInput
  fee: FloatFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  initialDateContract: StringFieldUpdateOperationsInput
  lps: IntFieldUpdateOperationsInput
  movies: IntFieldUpdateOperationsInput
  mrr: FloatFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  pipefyId: NullableIntFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReceivedClientWhereInput {
  AND: [ReceivedClientWhereInput!]
  NOT: [ReceivedClientWhereInput!]
  OR: [ReceivedClientWhereInput!]
  address: StringFilter
  bis: IntFilter
  city: StringFilter
  cnpj: StringFilter
  content: JsonFilter
  copies: IntFilter
  createdAt: DateTimeFilter
  designs: IntFilter
  emails: IntFilter
  fantasyName: StringFilter
  fee: FloatFilter
  id: IntFilter
  initialDateContract: StringFilter
  lps: IntFilter
  movies: IntFilter
  mrr: FloatFilter
  name: StringFilter
  pipefyId: IntNullableFilter
  state: StringFilter
  updatedAt: DateTimeFilter
}

input ReceivedClientWhereUniqueInput {
  AND: [ReceivedClientWhereInput!]
  NOT: [ReceivedClientWhereInput!]
  OR: [ReceivedClientWhereInput!]
  address: StringFilter
  bis: IntFilter
  city: StringFilter
  cnpj: StringFilter
  content: JsonFilter
  copies: IntFilter
  createdAt: DateTimeFilter
  designs: IntFilter
  emails: IntFilter
  fantasyName: StringFilter
  fee: FloatFilter
  id: Int
  initialDateContract: StringFilter
  lps: IntFilter
  movies: IntFilter
  mrr: FloatFilter
  name: StringFilter
  pipefyId: IntNullableFilter
  state: StringFilter
  updatedAt: DateTimeFilter
}

input RegisterInputManual {
  adimissionDate: String!
  avatarUrl: String!
  birthDate: String!
  confirmationEmail: String!
  email: String!
  jobFunctionId: Int!
  name: String!
  organizationId: Int!
  password: String!
  passwordConfirmation: String!
  phone: String!
  stepId: Int!
  teamId: Int!
}

type SelfStructure {
  content: JSON
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type SelfStructureAvgAggregate {
  id: Float
}

input SelfStructureAvgOrderByAggregateInput {
  id: SortOrder
}

type SelfStructureCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  updatedAt: Int!
  userUuid: Int!
}

input SelfStructureCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input SelfStructureCreateManyInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input SelfStructureCreateManyUserInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input SelfStructureCreateManyUserInputEnvelope {
  data: [SelfStructureCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input SelfStructureCreateOrConnectWithoutUserInput {
  create: SelfStructureUncheckedCreateWithoutUserInput!
  where: SelfStructureWhereUniqueInput!
}

input SelfStructureCreateWithoutUserInput {
  content: JSON
  createdAt: DateTimeISO
  updatedAt: DateTimeISO
}

type SelfStructureGroupBy {
  _avg: SelfStructureAvgAggregate
  _count: SelfStructureCountAggregate
  _max: SelfStructureMaxAggregate
  _min: SelfStructureMinAggregate
  _sum: SelfStructureSumAggregate
  content: JSON
  createdAt: DateTimeISO!
  id: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input SelfStructureListRelationFilter {
  every: SelfStructureWhereInput
  none: SelfStructureWhereInput
  some: SelfStructureWhereInput
}

type SelfStructureMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input SelfStructureMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type SelfStructureMinAggregate {
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String
}

input SelfStructureMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input SelfStructureOrderByRelationAggregateInput {
  _count: SortOrder
}

input SelfStructureOrderByWithAggregationInput {
  _avg: SelfStructureAvgOrderByAggregateInput
  _count: SelfStructureCountOrderByAggregateInput
  _max: SelfStructureMaxOrderByAggregateInput
  _min: SelfStructureMinOrderByAggregateInput
  _sum: SelfStructureSumOrderByAggregateInput
  content: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input SelfStructureOrderByWithRelationInput {
  content: SortOrderInput
  createdAt: SortOrder
  id: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum SelfStructureScalarFieldEnum {
  content
  createdAt
  id
  updatedAt
  userUuid
}

input SelfStructureScalarWhereInput {
  AND: [SelfStructureScalarWhereInput!]
  NOT: [SelfStructureScalarWhereInput!]
  OR: [SelfStructureScalarWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input SelfStructureScalarWhereWithAggregatesInput {
  AND: [SelfStructureScalarWhereWithAggregatesInput!]
  NOT: [SelfStructureScalarWhereWithAggregatesInput!]
  OR: [SelfStructureScalarWhereWithAggregatesInput!]
  content: JsonNullableWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type SelfStructureSumAggregate {
  id: Int
}

input SelfStructureSumOrderByAggregateInput {
  id: SortOrder
}

input SelfStructureUncheckedCreateInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
  userUuid: String!
}

input SelfStructureUncheckedCreateNestedManyWithoutUserInput {
  connect: [SelfStructureWhereUniqueInput!]
  connectOrCreate: [SelfStructureCreateOrConnectWithoutUserInput!]
  create: [SelfStructureCreateWithoutUserInput!]
  createMany: SelfStructureCreateManyUserInputEnvelope
}

input SelfStructureUncheckedCreateWithoutUserInput {
  content: JSON
  createdAt: DateTimeISO
  id: Int
  updatedAt: DateTimeISO
}

input SelfStructureUncheckedUpdateInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input SelfStructureUncheckedUpdateManyInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input SelfStructureUncheckedUpdateManyWithoutUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SelfStructureUncheckedUpdateManyWithoutUserNestedInput {
  connect: [SelfStructureWhereUniqueInput!]
  connectOrCreate: [SelfStructureCreateOrConnectWithoutUserInput!]
  create: [SelfStructureCreateWithoutUserInput!]
  createMany: SelfStructureCreateManyUserInputEnvelope
  delete: [SelfStructureWhereUniqueInput!]
  deleteMany: [SelfStructureScalarWhereInput!]
  disconnect: [SelfStructureWhereUniqueInput!]
  set: [SelfStructureWhereUniqueInput!]
  update: [SelfStructureUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [SelfStructureUpdateManyWithWhereWithoutUserInput!]
  upsert: [SelfStructureUpsertWithWhereUniqueWithoutUserInput!]
}

input SelfStructureUncheckedUpdateWithoutUserInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SelfStructureUpdateManyWithWhereWithoutUserInput {
  data: SelfStructureUncheckedUpdateManyWithoutUserInput!
  where: SelfStructureScalarWhereInput!
}

input SelfStructureUpdateWithWhereUniqueWithoutUserInput {
  data: SelfStructureUncheckedUpdateWithoutUserInput!
  where: SelfStructureWhereUniqueInput!
}

input SelfStructureUpsertWithWhereUniqueWithoutUserInput {
  create: SelfStructureUncheckedCreateWithoutUserInput!
  update: SelfStructureUncheckedUpdateWithoutUserInput!
  where: SelfStructureWhereUniqueInput!
}

input SelfStructureWhereInput {
  AND: [SelfStructureWhereInput!]
  NOT: [SelfStructureWhereInput!]
  OR: [SelfStructureWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input SelfStructureWhereUniqueInput {
  AND: [SelfStructureWhereInput!]
  NOT: [SelfStructureWhereInput!]
  OR: [SelfStructureWhereInput!]
  content: JsonNullableFilter
  createdAt: DateTimeFilter
  id: Int
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: String
}

type ServiceLevelAgreement {
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  project: Project!
  projectId: Int!
  quantity: Int!
  service: TypeService!
  target: Int!
}

type ServiceLevelAgreementAvgAggregate {
  id: Float
  projectId: Float
  quantity: Float
  target: Float
}

input ServiceLevelAgreementAvgOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  target: SortOrder
}

type ServiceLevelAgreementCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  name: Int!
  projectId: Int!
  quantity: Int!
  service: Int!
  target: Int!
}

input ServiceLevelAgreementCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  service: SortOrder
  target: SortOrder
}

input ServiceLevelAgreementCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  projectId: Int!
  quantity: Int!
  service: TypeService!
  target: Int!
}

input ServiceLevelAgreementCreateManyProjectInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  quantity: Int!
  service: TypeService!
  target: Int!
}

input ServiceLevelAgreementCreateManyProjectInputEnvelope {
  data: [ServiceLevelAgreementCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input ServiceLevelAgreementCreateNestedManyWithoutProjectInput {
  connect: [ServiceLevelAgreementWhereUniqueInput!]
  connectOrCreate: [ServiceLevelAgreementCreateOrConnectWithoutProjectInput!]
  create: [ServiceLevelAgreementCreateWithoutProjectInput!]
  createMany: ServiceLevelAgreementCreateManyProjectInputEnvelope
}

input ServiceLevelAgreementCreateOrConnectWithoutProjectInput {
  create: ServiceLevelAgreementUncheckedCreateWithoutProjectInput!
  where: ServiceLevelAgreementWhereUniqueInput!
}

input ServiceLevelAgreementCreateWithoutProjectInput {
  createdAt: DateTimeISO
  name: String!
  quantity: Int!
  service: TypeService!
  target: Int!
}

type ServiceLevelAgreementGroupBy {
  _avg: ServiceLevelAgreementAvgAggregate
  _count: ServiceLevelAgreementCountAggregate
  _max: ServiceLevelAgreementMaxAggregate
  _min: ServiceLevelAgreementMinAggregate
  _sum: ServiceLevelAgreementSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  projectId: Int!
  quantity: Int!
  service: TypeService!
  target: Int!
}

input ServiceLevelAgreementListRelationFilter {
  every: ServiceLevelAgreementWhereInput
  none: ServiceLevelAgreementWhereInput
  some: ServiceLevelAgreementWhereInput
}

type ServiceLevelAgreementMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  projectId: Int
  quantity: Int
  service: TypeService
  target: Int
}

input ServiceLevelAgreementMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  service: SortOrder
  target: SortOrder
}

type ServiceLevelAgreementMinAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  projectId: Int
  quantity: Int
  service: TypeService
  target: Int
}

input ServiceLevelAgreementMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  service: SortOrder
  target: SortOrder
}

input ServiceLevelAgreementOrderByRelationAggregateInput {
  _count: SortOrder
}

input ServiceLevelAgreementOrderByWithAggregationInput {
  _avg: ServiceLevelAgreementAvgOrderByAggregateInput
  _count: ServiceLevelAgreementCountOrderByAggregateInput
  _max: ServiceLevelAgreementMaxOrderByAggregateInput
  _min: ServiceLevelAgreementMinOrderByAggregateInput
  _sum: ServiceLevelAgreementSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  service: SortOrder
  target: SortOrder
}

input ServiceLevelAgreementOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  quantity: SortOrder
  service: SortOrder
  target: SortOrder
}

enum ServiceLevelAgreementScalarFieldEnum {
  createdAt
  id
  name
  projectId
  quantity
  service
  target
}

input ServiceLevelAgreementScalarWhereInput {
  AND: [ServiceLevelAgreementScalarWhereInput!]
  NOT: [ServiceLevelAgreementScalarWhereInput!]
  OR: [ServiceLevelAgreementScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  projectId: IntFilter
  quantity: IntFilter
  service: EnumTypeServiceFilter
  target: IntFilter
}

input ServiceLevelAgreementScalarWhereWithAggregatesInput {
  AND: [ServiceLevelAgreementScalarWhereWithAggregatesInput!]
  NOT: [ServiceLevelAgreementScalarWhereWithAggregatesInput!]
  OR: [ServiceLevelAgreementScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  projectId: IntWithAggregatesFilter
  quantity: IntWithAggregatesFilter
  service: EnumTypeServiceWithAggregatesFilter
  target: IntWithAggregatesFilter
}

type ServiceLevelAgreementSumAggregate {
  id: Int
  projectId: Int
  quantity: Int
  target: Int
}

input ServiceLevelAgreementSumOrderByAggregateInput {
  id: SortOrder
  projectId: SortOrder
  quantity: SortOrder
  target: SortOrder
}

input ServiceLevelAgreementUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  projectId: Int!
  quantity: Int!
  service: TypeService!
  target: Int!
}

input ServiceLevelAgreementUncheckedCreateNestedManyWithoutProjectInput {
  connect: [ServiceLevelAgreementWhereUniqueInput!]
  connectOrCreate: [ServiceLevelAgreementCreateOrConnectWithoutProjectInput!]
  create: [ServiceLevelAgreementCreateWithoutProjectInput!]
  createMany: ServiceLevelAgreementCreateManyProjectInputEnvelope
}

input ServiceLevelAgreementUncheckedCreateWithoutProjectInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  quantity: Int!
  service: TypeService!
  target: Int!
}

input ServiceLevelAgreementUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  service: EnumTypeServiceFieldUpdateOperationsInput
  target: IntFieldUpdateOperationsInput
}

input ServiceLevelAgreementUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  projectId: IntFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  service: EnumTypeServiceFieldUpdateOperationsInput
  target: IntFieldUpdateOperationsInput
}

input ServiceLevelAgreementUncheckedUpdateManyWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  service: EnumTypeServiceFieldUpdateOperationsInput
  target: IntFieldUpdateOperationsInput
}

input ServiceLevelAgreementUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [ServiceLevelAgreementWhereUniqueInput!]
  connectOrCreate: [ServiceLevelAgreementCreateOrConnectWithoutProjectInput!]
  create: [ServiceLevelAgreementCreateWithoutProjectInput!]
  createMany: ServiceLevelAgreementCreateManyProjectInputEnvelope
  delete: [ServiceLevelAgreementWhereUniqueInput!]
  deleteMany: [ServiceLevelAgreementScalarWhereInput!]
  disconnect: [ServiceLevelAgreementWhereUniqueInput!]
  set: [ServiceLevelAgreementWhereUniqueInput!]
  update: [ServiceLevelAgreementUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ServiceLevelAgreementUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ServiceLevelAgreementUpsertWithWhereUniqueWithoutProjectInput!]
}

input ServiceLevelAgreementUncheckedUpdateWithoutProjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  quantity: IntFieldUpdateOperationsInput
  service: EnumTypeServiceFieldUpdateOperationsInput
  target: IntFieldUpdateOperationsInput
}

input ServiceLevelAgreementUpdateManyWithWhereWithoutProjectInput {
  data: ServiceLevelAgreementUncheckedUpdateManyWithoutProjectInput!
  where: ServiceLevelAgreementScalarWhereInput!
}

input ServiceLevelAgreementUpdateWithWhereUniqueWithoutProjectInput {
  data: ServiceLevelAgreementUncheckedUpdateWithoutProjectInput!
  where: ServiceLevelAgreementWhereUniqueInput!
}

input ServiceLevelAgreementUpsertWithWhereUniqueWithoutProjectInput {
  create: ServiceLevelAgreementUncheckedCreateWithoutProjectInput!
  update: ServiceLevelAgreementUncheckedUpdateWithoutProjectInput!
  where: ServiceLevelAgreementWhereUniqueInput!
}

input ServiceLevelAgreementWhereInput {
  AND: [ServiceLevelAgreementWhereInput!]
  NOT: [ServiceLevelAgreementWhereInput!]
  OR: [ServiceLevelAgreementWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  quantity: IntFilter
  service: EnumTypeServiceFilter
  target: IntFilter
}

input ServiceLevelAgreementWhereUniqueInput {
  AND: [ServiceLevelAgreementWhereInput!]
  NOT: [ServiceLevelAgreementWhereInput!]
  OR: [ServiceLevelAgreementWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  name: StringFilter
  project: ProjectRelationFilter
  projectId: IntFilter
  quantity: IntFilter
  service: EnumTypeServiceFilter
  target: IntFilter
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

type Step {
  UserStep(cursor: UserStepWhereUniqueInput, distinct: [UserStepScalarFieldEnum!], orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): [UserStep!]!
  _count: StepCount
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  updatedAt: DateTimeISO!
}

type StepAvgAggregate {
  id: Float
}

input StepAvgOrderByAggregateInput {
  id: SortOrder
}

type StepCount {
  UserStep(where: UserStepWhereInput): Int!
}

type StepCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  name: Int!
  updatedAt: Int!
}

input StepCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input StepCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  updatedAt: DateTimeISO
}

input StepCreateNestedOneWithoutUserStepInput {
  connect: StepWhereUniqueInput
  connectOrCreate: StepCreateOrConnectWithoutUserStepInput
  create: StepUncheckedCreateWithoutUserStepInput
}

input StepCreateOrConnectWithoutUserStepInput {
  create: StepUncheckedCreateWithoutUserStepInput!
  where: StepWhereUniqueInput!
}

type StepGroupBy {
  _avg: StepAvgAggregate
  _count: StepCountAggregate
  _max: StepMaxAggregate
  _min: StepMinAggregate
  _sum: StepSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  updatedAt: DateTimeISO!
}

type StepMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input StepMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

type StepMinAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  updatedAt: DateTimeISO
}

input StepMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input StepOrderByWithAggregationInput {
  _avg: StepAvgOrderByAggregateInput
  _count: StepCountOrderByAggregateInput
  _max: StepMaxOrderByAggregateInput
  _min: StepMinOrderByAggregateInput
  _sum: StepSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input StepOrderByWithRelationInput {
  UserStep: UserStepOrderByRelationAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input StepRelationFilter {
  is: StepWhereInput
  isNot: StepWhereInput
}

enum StepScalarFieldEnum {
  createdAt
  id
  name
  updatedAt
}

input StepScalarWhereWithAggregatesInput {
  AND: [StepScalarWhereWithAggregatesInput!]
  NOT: [StepScalarWhereWithAggregatesInput!]
  OR: [StepScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type StepSumAggregate {
  id: Int
}

input StepSumOrderByAggregateInput {
  id: SortOrder
}

input StepUncheckedCreateInput {
  UserStep: UserStepUncheckedCreateNestedManyWithoutStepInput
  createdAt: DateTimeISO
  id: Int
  name: String!
  updatedAt: DateTimeISO
}

input StepUncheckedCreateWithoutUserStepInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  updatedAt: DateTimeISO
}

input StepUncheckedUpdateInput {
  UserStep: UserStepUncheckedUpdateManyWithoutStepNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StepUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StepWhereInput {
  AND: [StepWhereInput!]
  NOT: [StepWhereInput!]
  OR: [StepWhereInput!]
  UserStep: UserStepListRelationFilter
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  updatedAt: DateTimeFilter
}

input StepWhereUniqueInput {
  AND: [StepWhereInput!]
  NOT: [StepWhereInput!]
  OR: [StepWhereInput!]
  UserStep: UserStepListRelationFilter
  createdAt: DateTimeFilter
  id: Int
  name: String
  updatedAt: DateTimeFilter
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  eventChangeCommentProject: SubscriptionPayloadComment!
  eventConnectionUser: ObjectNotification!
  eventUserExitKanban: ObjectNotification!
  eventUserUpdateKanban: ObjectNotification!
  eventUsersInKanban: SubscriptionPayload!
}

type SubscriptionPayload {
  message: String
  users: [User!]
}

type SubscriptionPayloadComment {
  projectId: ID!
}

type Tag {
  _count: TagCount
  board: Board!
  boardId: String!
  cardTags(cursor: CardTagsWhereUniqueInput, distinct: [CardTagsScalarFieldEnum!], orderBy: [CardTagsOrderByWithRelationInput!], skip: Int, take: Int, where: CardTagsWhereInput): [CardTags!]!
  color: String!
  createdAt: DateTimeISO!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
}

type TagAvgAggregate {
  id: Float
}

input TagAvgOrderByAggregateInput {
  id: SortOrder
}

type TagCount {
  cardTags(where: CardTagsWhereInput): Int!
}

type TagCountAggregate {
  _all: Int!
  boardId: Int!
  color: Int!
  createdAt: Int!
  id: Int!
  title: Int!
  updatedAt: Int!
}

input TagCountOrderByAggregateInput {
  boardId: SortOrder
  color: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input TagCreateManyBoardInput {
  color: String!
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input TagCreateManyBoardInputEnvelope {
  data: [TagCreateManyBoardInput!]!
  skipDuplicates: Boolean
}

input TagCreateManyInput {
  boardId: String!
  color: String!
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input TagCreateNestedManyWithoutBoardInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutBoardInput!]
  create: [TagCreateWithoutBoardInput!]
  createMany: TagCreateManyBoardInputEnvelope
}

input TagCreateNestedOneWithoutCardTagsInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutCardTagsInput
  create: TagUncheckedCreateWithoutCardTagsInput
}

input TagCreateOrConnectWithoutBoardInput {
  create: TagUncheckedCreateWithoutBoardInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutCardTagsInput {
  create: TagUncheckedCreateWithoutCardTagsInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutBoardInput {
  cardTags: CardTagsCreateNestedManyWithoutTagInput
  color: String!
  createdAt: DateTimeISO
  title: String!
  updatedAt: DateTimeISO
}

type TagGroupBy {
  _avg: TagAvgAggregate
  _count: TagCountAggregate
  _max: TagMaxAggregate
  _min: TagMinAggregate
  _sum: TagSumAggregate
  boardId: String!
  color: String!
  createdAt: DateTimeISO!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

type TagMaxAggregate {
  boardId: String
  color: String
  createdAt: DateTimeISO
  id: Int
  title: String
  updatedAt: DateTimeISO
}

input TagMaxOrderByAggregateInput {
  boardId: SortOrder
  color: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type TagMinAggregate {
  boardId: String
  color: String
  createdAt: DateTimeISO
  id: Int
  title: String
  updatedAt: DateTimeISO
}

input TagMinOrderByAggregateInput {
  boardId: SortOrder
  color: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input TagOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagOrderByWithAggregationInput {
  _avg: TagAvgOrderByAggregateInput
  _count: TagCountOrderByAggregateInput
  _max: TagMaxOrderByAggregateInput
  _min: TagMinOrderByAggregateInput
  _sum: TagSumOrderByAggregateInput
  boardId: SortOrder
  color: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input TagOrderByWithRelationInput {
  board: BoardOrderByWithRelationInput
  boardId: SortOrder
  cardTags: CardTagsOrderByRelationAggregateInput
  color: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input TagRelationFilter {
  is: TagWhereInput
  isNot: TagWhereInput
}

enum TagScalarFieldEnum {
  boardId
  color
  createdAt
  id
  title
  updatedAt
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  boardId: StringFilter
  color: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input TagScalarWhereWithAggregatesInput {
  AND: [TagScalarWhereWithAggregatesInput!]
  NOT: [TagScalarWhereWithAggregatesInput!]
  OR: [TagScalarWhereWithAggregatesInput!]
  boardId: StringWithAggregatesFilter
  color: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type TagSumAggregate {
  id: Int
}

input TagSumOrderByAggregateInput {
  id: SortOrder
}

input TagUncheckedCreateInput {
  boardId: String!
  cardTags: CardTagsUncheckedCreateNestedManyWithoutTagInput
  color: String!
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input TagUncheckedCreateNestedManyWithoutBoardInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutBoardInput!]
  create: [TagCreateWithoutBoardInput!]
  createMany: TagCreateManyBoardInputEnvelope
}

input TagUncheckedCreateWithoutBoardInput {
  cardTags: CardTagsUncheckedCreateNestedManyWithoutTagInput
  color: String!
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input TagUncheckedCreateWithoutCardTagsInput {
  boardId: String!
  color: String!
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
}

input TagUncheckedUpdateInput {
  boardId: StringFieldUpdateOperationsInput
  cardTags: CardTagsUncheckedUpdateManyWithoutTagNestedInput
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUncheckedUpdateManyInput {
  boardId: StringFieldUpdateOperationsInput
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUncheckedUpdateManyWithoutBoardInput {
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUncheckedUpdateManyWithoutBoardNestedInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutBoardInput!]
  create: [TagCreateWithoutBoardInput!]
  createMany: TagCreateManyBoardInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutBoardInput!]
  updateMany: [TagUpdateManyWithWhereWithoutBoardInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutBoardInput!]
}

input TagUncheckedUpdateWithoutBoardInput {
  cardTags: CardTagsUncheckedUpdateManyWithoutTagNestedInput
  color: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutBoardInput {
  data: TagUncheckedUpdateManyWithoutBoardInput!
  where: TagScalarWhereInput!
}

input TagUpdateWithWhereUniqueWithoutBoardInput {
  data: TagUncheckedUpdateWithoutBoardInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutBoardInput {
  create: TagUncheckedCreateWithoutBoardInput!
  update: TagUncheckedUpdateWithoutBoardInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  cardTags: CardTagsListRelationFilter
  color: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input TagWhereUniqueInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  board: BoardRelationFilter
  boardId: StringFilter
  cardTags: CardTagsListRelationFilter
  color: StringFilter
  createdAt: DateTimeFilter
  id: Int
  title: StringFilter
  updatedAt: DateTimeFilter
}

type Task {
  createdAt: DateTimeISO!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
  userUuid: String!
}

type TaskAvgAggregate {
  id: Float
}

input TaskAvgOrderByAggregateInput {
  id: SortOrder
}

type TaskCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  title: Int!
  updatedAt: Int!
  userUuid: Int!
}

input TaskCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TaskCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
  userUuid: String!
}

type TaskGroupBy {
  _avg: TaskAvgAggregate
  _count: TaskCountAggregate
  _max: TaskMaxAggregate
  _min: TaskMinAggregate
  _sum: TaskSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  title: String!
  updatedAt: DateTimeISO!
  userUuid: String!
}

type TaskMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  title: String
  updatedAt: DateTimeISO
  userUuid: String
}

input TaskMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type TaskMinAggregate {
  createdAt: DateTimeISO
  id: Int
  title: String
  updatedAt: DateTimeISO
  userUuid: String
}

input TaskMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TaskOrderByWithAggregationInput {
  _avg: TaskAvgOrderByAggregateInput
  _count: TaskCountOrderByAggregateInput
  _max: TaskMaxOrderByAggregateInput
  _min: TaskMinOrderByAggregateInput
  _sum: TaskSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TaskOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

enum TaskScalarFieldEnum {
  createdAt
  id
  title
  updatedAt
  userUuid
}

input TaskScalarWhereWithAggregatesInput {
  AND: [TaskScalarWhereWithAggregatesInput!]
  NOT: [TaskScalarWhereWithAggregatesInput!]
  OR: [TaskScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type TaskSumAggregate {
  id: Int
}

input TaskSumOrderByAggregateInput {
  id: SortOrder
}

input TaskUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  title: String!
  updatedAt: DateTimeISO
  userUuid: String!
}

input TaskUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input TaskUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input TaskWhereInput {
  AND: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input TaskWhereUniqueInput {
  AND: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  title: StringFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

type Team {
  _count: TeamCount
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  thumbUrl: String!
  updatedAt: DateTimeISO!
  userTeam(cursor: UserTeamWhereUniqueInput, distinct: [UserTeamScalarFieldEnum!], orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): [UserTeam!]!
}

type TeamAvgAggregate {
  id: Float
}

input TeamAvgOrderByAggregateInput {
  id: SortOrder
}

type TeamCount {
  userTeam(where: UserTeamWhereInput): Int!
}

type TeamCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  name: Int!
  thumbUrl: Int!
  updatedAt: Int!
}

input TeamCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  thumbUrl: SortOrder
  updatedAt: SortOrder
}

input TeamCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  thumbUrl: String
  updatedAt: DateTimeISO
}

input TeamCreateNestedOneWithoutUserTeamInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutUserTeamInput
  create: TeamUncheckedCreateWithoutUserTeamInput
}

input TeamCreateOrConnectWithoutUserTeamInput {
  create: TeamUncheckedCreateWithoutUserTeamInput!
  where: TeamWhereUniqueInput!
}

type TeamGroupBy {
  _avg: TeamAvgAggregate
  _count: TeamCountAggregate
  _max: TeamMaxAggregate
  _min: TeamMinAggregate
  _sum: TeamSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  name: String!
  thumbUrl: String!
  updatedAt: DateTimeISO!
}

type TeamMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  thumbUrl: String
  updatedAt: DateTimeISO
}

input TeamMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  thumbUrl: SortOrder
  updatedAt: SortOrder
}

type TeamMinAggregate {
  createdAt: DateTimeISO
  id: Int
  name: String
  thumbUrl: String
  updatedAt: DateTimeISO
}

input TeamMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  thumbUrl: SortOrder
  updatedAt: SortOrder
}

input TeamOrderByWithAggregationInput {
  _avg: TeamAvgOrderByAggregateInput
  _count: TeamCountOrderByAggregateInput
  _max: TeamMaxOrderByAggregateInput
  _min: TeamMinOrderByAggregateInput
  _sum: TeamSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  thumbUrl: SortOrder
  updatedAt: SortOrder
}

input TeamOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  thumbUrl: SortOrder
  updatedAt: SortOrder
  userTeam: UserTeamOrderByRelationAggregateInput
}

input TeamRelationFilter {
  is: TeamWhereInput
  isNot: TeamWhereInput
}

enum TeamScalarFieldEnum {
  createdAt
  id
  name
  thumbUrl
  updatedAt
}

input TeamScalarWhereWithAggregatesInput {
  AND: [TeamScalarWhereWithAggregatesInput!]
  NOT: [TeamScalarWhereWithAggregatesInput!]
  OR: [TeamScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  thumbUrl: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type TeamSumAggregate {
  id: Int
}

input TeamSumOrderByAggregateInput {
  id: SortOrder
}

input TeamUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  thumbUrl: String
  updatedAt: DateTimeISO
  userTeam: UserTeamUncheckedCreateNestedManyWithoutTeamInput
}

input TeamUncheckedCreateWithoutUserTeamInput {
  createdAt: DateTimeISO
  id: Int
  name: String!
  thumbUrl: String
  updatedAt: DateTimeISO
}

input TeamUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userTeam: UserTeamUncheckedUpdateManyWithoutTeamNestedInput
}

input TeamUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TeamWhereInput {
  AND: [TeamWhereInput!]
  NOT: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  name: StringFilter
  thumbUrl: StringFilter
  updatedAt: DateTimeFilter
  userTeam: UserTeamListRelationFilter
}

input TeamWhereUniqueInput {
  AND: [TeamWhereInput!]
  NOT: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  name: String
  thumbUrl: StringFilter
  updatedAt: DateTimeFilter
  userTeam: UserTeamListRelationFilter
}

type ThrowErrorFront {
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
}

type ThrowErrorFrontAvgAggregate {
  id: Float
}

input ThrowErrorFrontAvgOrderByAggregateInput {
  id: SortOrder
}

type ThrowErrorFrontCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  id: Int!
}

input ThrowErrorFrontCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
}

input ThrowErrorFrontCreateManyInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
}

type ThrowErrorFrontGroupBy {
  _avg: ThrowErrorFrontAvgAggregate
  _count: ThrowErrorFrontCountAggregate
  _max: ThrowErrorFrontMaxAggregate
  _min: ThrowErrorFrontMinAggregate
  _sum: ThrowErrorFrontSumAggregate
  content: JSON!
  createdAt: DateTimeISO!
  id: Int!
}

type ThrowErrorFrontMaxAggregate {
  createdAt: DateTimeISO
  id: Int
}

input ThrowErrorFrontMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
}

type ThrowErrorFrontMinAggregate {
  createdAt: DateTimeISO
  id: Int
}

input ThrowErrorFrontMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
}

input ThrowErrorFrontOrderByWithAggregationInput {
  _avg: ThrowErrorFrontAvgOrderByAggregateInput
  _count: ThrowErrorFrontCountOrderByAggregateInput
  _max: ThrowErrorFrontMaxOrderByAggregateInput
  _min: ThrowErrorFrontMinOrderByAggregateInput
  _sum: ThrowErrorFrontSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
}

input ThrowErrorFrontOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
}

enum ThrowErrorFrontScalarFieldEnum {
  content
  createdAt
  id
}

input ThrowErrorFrontScalarWhereWithAggregatesInput {
  AND: [ThrowErrorFrontScalarWhereWithAggregatesInput!]
  NOT: [ThrowErrorFrontScalarWhereWithAggregatesInput!]
  OR: [ThrowErrorFrontScalarWhereWithAggregatesInput!]
  content: JsonWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
}

type ThrowErrorFrontSumAggregate {
  id: Int
}

input ThrowErrorFrontSumOrderByAggregateInput {
  id: SortOrder
}

input ThrowErrorFrontUncheckedCreateInput {
  content: JSON!
  createdAt: DateTimeISO
  id: Int
}

input ThrowErrorFrontUncheckedUpdateInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input ThrowErrorFrontUncheckedUpdateManyInput {
  content: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
}

input ThrowErrorFrontWhereInput {
  AND: [ThrowErrorFrontWhereInput!]
  NOT: [ThrowErrorFrontWhereInput!]
  OR: [ThrowErrorFrontWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  id: IntFilter
}

input ThrowErrorFrontWhereUniqueInput {
  AND: [ThrowErrorFrontWhereInput!]
  NOT: [ThrowErrorFrontWhereInput!]
  OR: [ThrowErrorFrontWhereInput!]
  content: JsonFilter
  createdAt: DateTimeFilter
  id: Int
}

type TokenFirebase {
  createdAt: DateTimeISO!
  id: Int!
  token: String!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
}

type TokenFirebaseAvgAggregate {
  id: Float
}

input TokenFirebaseAvgOrderByAggregateInput {
  id: SortOrder
}

type TokenFirebaseCountAggregate {
  _all: Int!
  createdAt: Int!
  id: Int!
  token: Int!
  updatedAt: Int!
  userUuid: Int!
}

input TokenFirebaseCountOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TokenFirebaseCreateManyInput {
  createdAt: DateTimeISO
  id: Int
  token: String!
  updatedAt: DateTimeISO
  userUuid: String!
}

input TokenFirebaseCreateManyUserInput {
  createdAt: DateTimeISO
  id: Int
  token: String!
  updatedAt: DateTimeISO
}

input TokenFirebaseCreateManyUserInputEnvelope {
  data: [TokenFirebaseCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input TokenFirebaseCreateOrConnectWithoutUserInput {
  create: TokenFirebaseUncheckedCreateWithoutUserInput!
  where: TokenFirebaseWhereUniqueInput!
}

input TokenFirebaseCreateWithoutUserInput {
  createdAt: DateTimeISO
  token: String!
  updatedAt: DateTimeISO
}

type TokenFirebaseGroupBy {
  _avg: TokenFirebaseAvgAggregate
  _count: TokenFirebaseCountAggregate
  _max: TokenFirebaseMaxAggregate
  _min: TokenFirebaseMinAggregate
  _sum: TokenFirebaseSumAggregate
  createdAt: DateTimeISO!
  id: Int!
  token: String!
  updatedAt: DateTimeISO!
  userUuid: String!
}

input TokenFirebaseListRelationFilter {
  every: TokenFirebaseWhereInput
  none: TokenFirebaseWhereInput
  some: TokenFirebaseWhereInput
}

type TokenFirebaseMaxAggregate {
  createdAt: DateTimeISO
  id: Int
  token: String
  updatedAt: DateTimeISO
  userUuid: String
}

input TokenFirebaseMaxOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

type TokenFirebaseMinAggregate {
  createdAt: DateTimeISO
  id: Int
  token: String
  updatedAt: DateTimeISO
  userUuid: String
}

input TokenFirebaseMinOrderByAggregateInput {
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TokenFirebaseOrderByRelationAggregateInput {
  _count: SortOrder
}

input TokenFirebaseOrderByWithAggregationInput {
  _avg: TokenFirebaseAvgOrderByAggregateInput
  _count: TokenFirebaseCountOrderByAggregateInput
  _max: TokenFirebaseMaxOrderByAggregateInput
  _min: TokenFirebaseMinOrderByAggregateInput
  _sum: TokenFirebaseSumOrderByAggregateInput
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
}

input TokenFirebaseOrderByWithRelationInput {
  createdAt: SortOrder
  id: SortOrder
  token: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum TokenFirebaseScalarFieldEnum {
  createdAt
  id
  token
  updatedAt
  userUuid
}

input TokenFirebaseScalarWhereInput {
  AND: [TokenFirebaseScalarWhereInput!]
  NOT: [TokenFirebaseScalarWhereInput!]
  OR: [TokenFirebaseScalarWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  token: StringFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
}

input TokenFirebaseScalarWhereWithAggregatesInput {
  AND: [TokenFirebaseScalarWhereWithAggregatesInput!]
  NOT: [TokenFirebaseScalarWhereWithAggregatesInput!]
  OR: [TokenFirebaseScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  token: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type TokenFirebaseSumAggregate {
  id: Int
}

input TokenFirebaseSumOrderByAggregateInput {
  id: SortOrder
}

input TokenFirebaseUncheckedCreateInput {
  createdAt: DateTimeISO
  id: Int
  token: String!
  updatedAt: DateTimeISO
  userUuid: String!
}

input TokenFirebaseUncheckedCreateNestedManyWithoutUserInput {
  connect: [TokenFirebaseWhereUniqueInput!]
  connectOrCreate: [TokenFirebaseCreateOrConnectWithoutUserInput!]
  create: [TokenFirebaseCreateWithoutUserInput!]
  createMany: TokenFirebaseCreateManyUserInputEnvelope
}

input TokenFirebaseUncheckedCreateWithoutUserInput {
  createdAt: DateTimeISO
  id: Int
  token: String!
  updatedAt: DateTimeISO
}

input TokenFirebaseUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input TokenFirebaseUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input TokenFirebaseUncheckedUpdateManyWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TokenFirebaseUncheckedUpdateManyWithoutUserNestedInput {
  connect: [TokenFirebaseWhereUniqueInput!]
  connectOrCreate: [TokenFirebaseCreateOrConnectWithoutUserInput!]
  create: [TokenFirebaseCreateWithoutUserInput!]
  createMany: TokenFirebaseCreateManyUserInputEnvelope
  delete: [TokenFirebaseWhereUniqueInput!]
  deleteMany: [TokenFirebaseScalarWhereInput!]
  disconnect: [TokenFirebaseWhereUniqueInput!]
  set: [TokenFirebaseWhereUniqueInput!]
  update: [TokenFirebaseUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [TokenFirebaseUpdateManyWithWhereWithoutUserInput!]
  upsert: [TokenFirebaseUpsertWithWhereUniqueWithoutUserInput!]
}

input TokenFirebaseUncheckedUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input TokenFirebaseUpdateManyWithWhereWithoutUserInput {
  data: TokenFirebaseUncheckedUpdateManyWithoutUserInput!
  where: TokenFirebaseScalarWhereInput!
}

input TokenFirebaseUpdateWithWhereUniqueWithoutUserInput {
  data: TokenFirebaseUncheckedUpdateWithoutUserInput!
  where: TokenFirebaseWhereUniqueInput!
}

input TokenFirebaseUpsertWithWhereUniqueWithoutUserInput {
  create: TokenFirebaseUncheckedCreateWithoutUserInput!
  update: TokenFirebaseUncheckedUpdateWithoutUserInput!
  where: TokenFirebaseWhereUniqueInput!
}

input TokenFirebaseWhereInput {
  AND: [TokenFirebaseWhereInput!]
  NOT: [TokenFirebaseWhereInput!]
  OR: [TokenFirebaseWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  token: StringFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input TokenFirebaseWhereUniqueInput {
  AND: [TokenFirebaseWhereInput!]
  NOT: [TokenFirebaseWhereInput!]
  OR: [TokenFirebaseWhereInput!]
  createdAt: DateTimeFilter
  id: Int
  token: StringFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

enum TypeService {
  copywriting
  creatives
  developmentCopywriter
  hoursMaintenance
  hoursSetup
  landingPage
  testABC
  videos
}

type User {
  AcessHistoryUser(cursor: AcessHistoryUserWhereUniqueInput, distinct: [AcessHistoryUserScalarFieldEnum!], orderBy: [AcessHistoryUserOrderByWithRelationInput!], skip: Int, take: Int, where: AcessHistoryUserWhereInput): [AcessHistoryUser!]!
  _count: UserCount
  active: Boolean!
  archives(cursor: ArchivesWhereUniqueInput, distinct: [ArchivesScalarFieldEnum!], orderBy: [ArchivesOrderByWithRelationInput!], skip: Int, take: Int, where: ArchivesWhereInput): [Archives!]!
  avatarUrl: String!
  boardCreatedBy(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): [Board!]!
  boardUpdatedBy(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): [Board!]!
  cardAssignment(cursor: CardAssignmentWhereUniqueInput, distinct: [CardAssignmentScalarFieldEnum!], orderBy: [CardAssignmentOrderByWithRelationInput!], skip: Int, take: Int, where: CardAssignmentWhereInput): [CardAssignment!]!
  cardComment(cursor: CardCommentWhereUniqueInput, distinct: [CardCommentScalarFieldEnum!], orderBy: [CardCommentOrderByWithRelationInput!], skip: Int, take: Int, where: CardCommentWhereInput): [CardComment!]!
  cardCreatedBy(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): [Card!]!
  cardMovements(cursor: CardMovementWhereUniqueInput, distinct: [CardMovementScalarFieldEnum!], orderBy: [CardMovementOrderByWithRelationInput!], skip: Int, take: Int, where: CardMovementWhereInput): [CardMovement!]!
  cardUpdatedBy(cursor: CardWhereUniqueInput, distinct: [CardScalarFieldEnum!], orderBy: [CardOrderByWithRelationInput!], skip: Int, take: Int, where: CardWhereInput): [Card!]!
  client(cursor: ClientWhereUniqueInput, distinct: [ClientScalarFieldEnum!], orderBy: [ClientOrderByWithRelationInput!], skip: Int, take: Int, where: ClientWhereInput): [Client!]!
  coardMenbership(cursor: BoardMenbershipWhereUniqueInput, distinct: [BoardMenbershipScalarFieldEnum!], orderBy: [BoardMenbershipOrderByWithRelationInput!], skip: Int, take: Int, where: BoardMenbershipWhereInput): [BoardMenbership!]!
  columnCreatedBy(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  columnUpdatedBy(cursor: ColumnWhereUniqueInput, distinct: [ColumnScalarFieldEnum!], orderBy: [ColumnOrderByWithRelationInput!], skip: Int, take: Int, where: ColumnWhereInput): [Column!]!
  commentProjects(cursor: CommentProjectWhereUniqueInput, distinct: [CommentProjectScalarFieldEnum!], orderBy: [CommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: CommentProjectWhereInput): [CommentProject!]!
  createdAt: DateTimeISO!
  email: String!
  fieldValueCreated(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): [Field!]!
  fieldValueCreatedBy(cursor: FieldsValueWhereUniqueInput, distinct: [FieldsValueScalarFieldEnum!], orderBy: [FieldsValueOrderByWithRelationInput!], skip: Int, take: Int, where: FieldsValueWhereInput): [FieldsValue!]!
  fieldValueUpdated(cursor: FieldWhereUniqueInput, distinct: [FieldScalarFieldEnum!], orderBy: [FieldOrderByWithRelationInput!], skip: Int, take: Int, where: FieldWhereInput): [Field!]!
  groupCreatedBy(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  groupUpdatedBy(cursor: GroupWhereUniqueInput, distinct: [GroupScalarFieldEnum!], orderBy: [GroupOrderByWithRelationInput!], skip: Int, take: Int, where: GroupWhereInput): [Group!]!
  groupUser(cursor: GroupUserWhereUniqueInput, distinct: [GroupUserScalarFieldEnum!], orderBy: [GroupUserOrderByWithRelationInput!], skip: Int, take: Int, where: GroupUserWhereInput): [GroupUser!]!
  historyFlagCreatedBy(cursor: HistoryFlagWhereUniqueInput, distinct: [HistoryFlagScalarFieldEnum!], orderBy: [HistoryFlagOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryFlagWhereInput): [HistoryFlag!]!
  historyMonthlyRecurringRevenue(cursor: HistoryMonthlyRecurringRevenueWhereUniqueInput, distinct: [HistoryMonthlyRecurringRevenueScalarFieldEnum!], orderBy: [HistoryMonthlyRecurringRevenueOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryMonthlyRecurringRevenueWhereInput): [HistoryMonthlyRecurringRevenue!]!
  historyStepCreatedBy(cursor: HistoryStepWhereUniqueInput, distinct: [HistoryStepScalarFieldEnum!], orderBy: [HistoryStepOrderByWithRelationInput!], skip: Int, take: Int, where: HistoryStepWhereInput): [HistoryStep!]!
  invest(cursor: InvestWhereUniqueInput, distinct: [InvestScalarFieldEnum!], orderBy: [InvestOrderByWithRelationInput!], skip: Int, take: Int, where: InvestWhereInput): [Invest!]!
  kr(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): [Kr!]!
  krCommentProject(cursor: KrCommentProjectWhereUniqueInput, distinct: [KrCommentProjectScalarFieldEnum!], orderBy: [KrCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: KrCommentProjectWhereInput): [KrCommentProject!]!
  krCreatedBy(cursor: KrWhereUniqueInput, distinct: [KrScalarFieldEnum!], orderBy: [KrOrderByWithRelationInput!], skip: Int, take: Int, where: KrWhereInput): [Kr!]!
  name: String!
  nickName: String!
  notfyCreatedBy(cursor: NotfyWhereUniqueInput, distinct: [NotfyScalarFieldEnum!], orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): [Notfy!]!
  notfyUpdateddBy(cursor: NotfyWhereUniqueInput, distinct: [NotfyScalarFieldEnum!], orderBy: [NotfyOrderByWithRelationInput!], skip: Int, take: Int, where: NotfyWhereInput): [Notfy!]!
  objectiveCreatedBy(cursor: ObjectiveWhereUniqueInput, distinct: [ObjectiveScalarFieldEnum!], orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): [Objective!]!
  objectiveUpdatedBy(cursor: ObjectiveWhereUniqueInput, distinct: [ObjectiveScalarFieldEnum!], orderBy: [ObjectiveOrderByWithRelationInput!], skip: Int, take: Int, where: ObjectiveWhereInput): [Objective!]!
  okrObjectiveProject(cursor: OkrObjectiveProjectWhereUniqueInput, distinct: [OkrObjectiveProjectScalarFieldEnum!], orderBy: [OkrObjectiveProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrObjectiveProjectWhereInput): [OkrObjectiveProject!]!
  okrProject(cursor: OkrProjectWhereUniqueInput, distinct: [OkrProjectScalarFieldEnum!], orderBy: [OkrProjectOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectWhereInput): [OkrProject!]!
  okrProjectHistory(cursor: OkrProjectHistoryWhereUniqueInput, distinct: [OkrProjectHistoryScalarFieldEnum!], orderBy: [OkrProjectHistoryOrderByWithRelationInput!], skip: Int, take: Int, where: OkrProjectHistoryWhereInput): [OkrProjectHistory!]!
  personalInfo: JSON
  primitiveStreenghtCreatedBy(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): [PrimitiveStreenght!]!
  primitiveStreenghtUpdatedBy(cursor: PrimitiveStreenghtWhereUniqueInput, distinct: [PrimitiveStreenghtScalarFieldEnum!], orderBy: [PrimitiveStreenghtOrderByWithRelationInput!], skip: Int, take: Int, where: PrimitiveStreenghtWhereInput): [PrimitiveStreenght!]!
  projectCreatedBy(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): [Project!]!
  projectUpdatedBy(cursor: ProjectWhereUniqueInput, distinct: [ProjectScalarFieldEnum!], orderBy: [ProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ProjectWhereInput): [Project!]!
  role: role!
  selfStructure(cursor: SelfStructureWhereUniqueInput, distinct: [SelfStructureScalarFieldEnum!], orderBy: [SelfStructureOrderByWithRelationInput!], skip: Int, take: Int, where: SelfStructureWhereInput): [SelfStructure!]!
  tokenFirebase(cursor: TokenFirebaseWhereUniqueInput, distinct: [TokenFirebaseScalarFieldEnum!], orderBy: [TokenFirebaseOrderByWithRelationInput!], skip: Int, take: Int, where: TokenFirebaseWhereInput): [TokenFirebase!]!
  typeUser: typeUser!
  updatedAt: DateTimeISO!
  userJobFunction(cursor: UserJobFunctionWhereUniqueInput, distinct: [UserJobFunctionScalarFieldEnum!], orderBy: [UserJobFunctionOrderByWithRelationInput!], skip: Int, take: Int, where: UserJobFunctionWhereInput): [UserJobFunction!]!
  userNotfy(cursor: UserNotfyWhereUniqueInput, distinct: [UserNotfyScalarFieldEnum!], orderBy: [UserNotfyOrderByWithRelationInput!], skip: Int, take: Int, where: UserNotfyWhereInput): [UserNotfy!]!
  userOrganization(cursor: UserOrganizationWhereUniqueInput, distinct: [UserOrganizationScalarFieldEnum!], orderBy: [UserOrganizationOrderByWithRelationInput!], skip: Int, take: Int, where: UserOrganizationWhereInput): [UserOrganization!]!
  userSteps(cursor: UserStepWhereUniqueInput, distinct: [UserStepScalarFieldEnum!], orderBy: [UserStepOrderByWithRelationInput!], skip: Int, take: Int, where: UserStepWhereInput): [UserStep!]!
  userTeam(cursor: UserTeamWhereUniqueInput, distinct: [UserTeamScalarFieldEnum!], orderBy: [UserTeamOrderByWithRelationInput!], skip: Int, take: Int, where: UserTeamWhereInput): [UserTeam!]!
  uuid: String!
  viewedCommentProject(cursor: ViewedCommentProjectWhereUniqueInput, distinct: [ViewedCommentProjectScalarFieldEnum!], orderBy: [ViewedCommentProjectOrderByWithRelationInput!], skip: Int, take: Int, where: ViewedCommentProjectWhereInput): [ViewedCommentProject!]!
}

type UserCount {
  AcessHistoryUser(where: AcessHistoryUserWhereInput): Int!
  archives(where: ArchivesWhereInput): Int!
  boardCreatedBy(where: BoardWhereInput): Int!
  boardUpdatedBy(where: BoardWhereInput): Int!
  cardAssignment(where: CardAssignmentWhereInput): Int!
  cardComment(where: CardCommentWhereInput): Int!
  cardCreatedBy(where: CardWhereInput): Int!
  cardMovements(where: CardMovementWhereInput): Int!
  cardUpdatedBy(where: CardWhereInput): Int!
  client(where: ClientWhereInput): Int!
  coardMenbership(where: BoardMenbershipWhereInput): Int!
  columnCreatedBy(where: ColumnWhereInput): Int!
  columnUpdatedBy(where: ColumnWhereInput): Int!
  commentProjects(where: CommentProjectWhereInput): Int!
  fieldValueCreated(where: FieldWhereInput): Int!
  fieldValueCreatedBy(where: FieldsValueWhereInput): Int!
  fieldValueUpdated(where: FieldWhereInput): Int!
  groupCreatedBy(where: GroupWhereInput): Int!
  groupUpdatedBy(where: GroupWhereInput): Int!
  groupUser(where: GroupUserWhereInput): Int!
  historyFlagCreatedBy(where: HistoryFlagWhereInput): Int!
  historyMonthlyRecurringRevenue(where: HistoryMonthlyRecurringRevenueWhereInput): Int!
  historyStepCreatedBy(where: HistoryStepWhereInput): Int!
  invest(where: InvestWhereInput): Int!
  kr(where: KrWhereInput): Int!
  krCommentProject(where: KrCommentProjectWhereInput): Int!
  krCreatedBy(where: KrWhereInput): Int!
  notfyCreatedBy(where: NotfyWhereInput): Int!
  notfyUpdateddBy(where: NotfyWhereInput): Int!
  objectiveCreatedBy(where: ObjectiveWhereInput): Int!
  objectiveUpdatedBy(where: ObjectiveWhereInput): Int!
  okrObjectiveProject(where: OkrObjectiveProjectWhereInput): Int!
  okrProject(where: OkrProjectWhereInput): Int!
  okrProjectHistory(where: OkrProjectHistoryWhereInput): Int!
  primitiveStreenghtCreatedBy(where: PrimitiveStreenghtWhereInput): Int!
  primitiveStreenghtUpdatedBy(where: PrimitiveStreenghtWhereInput): Int!
  projectCreatedBy(where: ProjectWhereInput): Int!
  projectUpdatedBy(where: ProjectWhereInput): Int!
  selfStructure(where: SelfStructureWhereInput): Int!
  tokenFirebase(where: TokenFirebaseWhereInput): Int!
  userJobFunction(where: UserJobFunctionWhereInput): Int!
  userNotfy(where: UserNotfyWhereInput): Int!
  userOrganization(where: UserOrganizationWhereInput): Int!
  userSteps(where: UserStepWhereInput): Int!
  userTeam(where: UserTeamWhereInput): Int!
  viewedCommentProject(where: ViewedCommentProjectWhereInput): Int!
}

type UserCountAggregate {
  _all: Int!
  active: Int!
  avatarUrl: Int!
  createdAt: Int!
  email: Int!
  name: Int!
  nickName: Int!
  password: Int!
  personalInfo: Int!
  role: Int!
  typeUser: Int!
  updatedAt: Int!
  uuid: Int!
}

input UserCountOrderByAggregateInput {
  active: SortOrder
  avatarUrl: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  personalInfo: SortOrder
  role: SortOrder
  typeUser: SortOrder
  updatedAt: SortOrder
  uuid: SortOrder
}

input UserCreateManyInput {
  active: Boolean
  avatarUrl: String
  createdAt: DateTimeISO
  email: String!
  name: String!
  nickName: String!
  password: String!
  personalInfo: JSON
  role: role
  typeUser: typeUser
  updatedAt: DateTimeISO
  uuid: String
}

input UserCreateNestedOneWithoutArchivesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutArchivesInput
  create: UserUncheckedCreateWithoutArchivesInput
}

input UserCreateNestedOneWithoutBoardCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutBoardCreatedByInput
  create: UserUncheckedCreateWithoutBoardCreatedByInput
}

input UserCreateNestedOneWithoutBoardUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutBoardUpdatedByInput
  create: UserUncheckedCreateWithoutBoardUpdatedByInput
}

input UserCreateNestedOneWithoutCardAssignmentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCardAssignmentInput
  create: UserUncheckedCreateWithoutCardAssignmentInput
}

input UserCreateNestedOneWithoutCardCommentInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCardCommentInput
  create: UserUncheckedCreateWithoutCardCommentInput
}

input UserCreateNestedOneWithoutCardCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCardCreatedByInput
  create: UserUncheckedCreateWithoutCardCreatedByInput
}

input UserCreateNestedOneWithoutCardMovementsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCardMovementsInput
  create: UserUncheckedCreateWithoutCardMovementsInput
}

input UserCreateNestedOneWithoutCardUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCardUpdatedByInput
  create: UserUncheckedCreateWithoutCardUpdatedByInput
}

input UserCreateNestedOneWithoutCoardMenbershipInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCoardMenbershipInput
  create: UserUncheckedCreateWithoutCoardMenbershipInput
}

input UserCreateNestedOneWithoutColumnCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutColumnCreatedByInput
  create: UserUncheckedCreateWithoutColumnCreatedByInput
}

input UserCreateNestedOneWithoutColumnUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutColumnUpdatedByInput
  create: UserUncheckedCreateWithoutColumnUpdatedByInput
}

input UserCreateNestedOneWithoutCommentProjectsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCommentProjectsInput
  create: UserUncheckedCreateWithoutCommentProjectsInput
}

input UserCreateNestedOneWithoutFieldValueCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFieldValueCreatedByInput
  create: UserUncheckedCreateWithoutFieldValueCreatedByInput
}

input UserCreateNestedOneWithoutFieldValueCreatedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFieldValueCreatedInput
  create: UserUncheckedCreateWithoutFieldValueCreatedInput
}

input UserCreateNestedOneWithoutFieldValueUpdatedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFieldValueUpdatedInput
  create: UserUncheckedCreateWithoutFieldValueUpdatedInput
}

input UserCreateNestedOneWithoutGroupCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutGroupCreatedByInput
  create: UserUncheckedCreateWithoutGroupCreatedByInput
}

input UserCreateNestedOneWithoutGroupUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutGroupUpdatedByInput
  create: UserUncheckedCreateWithoutGroupUpdatedByInput
}

input UserCreateNestedOneWithoutGroupUserInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutGroupUserInput
  create: UserUncheckedCreateWithoutGroupUserInput
}

input UserCreateNestedOneWithoutHistoryFlagCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutHistoryFlagCreatedByInput
  create: UserUncheckedCreateWithoutHistoryFlagCreatedByInput
}

input UserCreateNestedOneWithoutHistoryMonthlyRecurringRevenueInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutHistoryMonthlyRecurringRevenueInput
  create: UserUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput
}

input UserCreateNestedOneWithoutHistoryStepCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutHistoryStepCreatedByInput
  create: UserUncheckedCreateWithoutHistoryStepCreatedByInput
}

input UserCreateNestedOneWithoutInvestInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutInvestInput
  create: UserUncheckedCreateWithoutInvestInput
}

input UserCreateNestedOneWithoutKrCommentProjectInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutKrCommentProjectInput
  create: UserUncheckedCreateWithoutKrCommentProjectInput
}

input UserCreateNestedOneWithoutKrCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutKrCreatedByInput
  create: UserUncheckedCreateWithoutKrCreatedByInput
}

input UserCreateNestedOneWithoutKrInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutKrInput
  create: UserUncheckedCreateWithoutKrInput
}

input UserCreateNestedOneWithoutNotfyCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotfyCreatedByInput
  create: UserUncheckedCreateWithoutNotfyCreatedByInput
}

input UserCreateNestedOneWithoutNotfyUpdateddByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutNotfyUpdateddByInput
  create: UserUncheckedCreateWithoutNotfyUpdateddByInput
}

input UserCreateNestedOneWithoutObjectiveCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutObjectiveCreatedByInput
  create: UserUncheckedCreateWithoutObjectiveCreatedByInput
}

input UserCreateNestedOneWithoutObjectiveUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutObjectiveUpdatedByInput
  create: UserUncheckedCreateWithoutObjectiveUpdatedByInput
}

input UserCreateNestedOneWithoutOkrObjectiveProjectInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOkrObjectiveProjectInput
  create: UserUncheckedCreateWithoutOkrObjectiveProjectInput
}

input UserCreateNestedOneWithoutOkrProjectHistoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOkrProjectHistoryInput
  create: UserUncheckedCreateWithoutOkrProjectHistoryInput
}

input UserCreateNestedOneWithoutOkrProjectInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOkrProjectInput
  create: UserUncheckedCreateWithoutOkrProjectInput
}

input UserCreateNestedOneWithoutPrimitiveStreenghtCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPrimitiveStreenghtCreatedByInput
  create: UserUncheckedCreateWithoutPrimitiveStreenghtCreatedByInput
}

input UserCreateNestedOneWithoutPrimitiveStreenghtUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPrimitiveStreenghtUpdatedByInput
  create: UserUncheckedCreateWithoutPrimitiveStreenghtUpdatedByInput
}

input UserCreateNestedOneWithoutProjectCreatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProjectCreatedByInput
  create: UserUncheckedCreateWithoutProjectCreatedByInput
}

input UserCreateNestedOneWithoutProjectUpdatedByInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutProjectUpdatedByInput
  create: UserUncheckedCreateWithoutProjectUpdatedByInput
}

input UserCreateNestedOneWithoutUserJobFunctionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserJobFunctionInput
  create: UserUncheckedCreateWithoutUserJobFunctionInput
}

input UserCreateNestedOneWithoutUserNotfyInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserNotfyInput
  create: UserUncheckedCreateWithoutUserNotfyInput
}

input UserCreateNestedOneWithoutUserOrganizationInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserOrganizationInput
  create: UserUncheckedCreateWithoutUserOrganizationInput
}

input UserCreateNestedOneWithoutUserStepsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserStepsInput
  create: UserUncheckedCreateWithoutUserStepsInput
}

input UserCreateNestedOneWithoutUserTeamInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserTeamInput
  create: UserUncheckedCreateWithoutUserTeamInput
}

input UserCreateNestedOneWithoutViewedCommentProjectInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutViewedCommentProjectInput
  create: UserUncheckedCreateWithoutViewedCommentProjectInput
}

input UserCreateOrConnectWithoutArchivesInput {
  create: UserUncheckedCreateWithoutArchivesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutBoardCreatedByInput {
  create: UserUncheckedCreateWithoutBoardCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutBoardUpdatedByInput {
  create: UserUncheckedCreateWithoutBoardUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCardAssignmentInput {
  create: UserUncheckedCreateWithoutCardAssignmentInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCardCommentInput {
  create: UserUncheckedCreateWithoutCardCommentInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCardCreatedByInput {
  create: UserUncheckedCreateWithoutCardCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCardMovementsInput {
  create: UserUncheckedCreateWithoutCardMovementsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCardUpdatedByInput {
  create: UserUncheckedCreateWithoutCardUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCoardMenbershipInput {
  create: UserUncheckedCreateWithoutCoardMenbershipInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutColumnCreatedByInput {
  create: UserUncheckedCreateWithoutColumnCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutColumnUpdatedByInput {
  create: UserUncheckedCreateWithoutColumnUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCommentProjectsInput {
  create: UserUncheckedCreateWithoutCommentProjectsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFieldValueCreatedByInput {
  create: UserUncheckedCreateWithoutFieldValueCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFieldValueCreatedInput {
  create: UserUncheckedCreateWithoutFieldValueCreatedInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFieldValueUpdatedInput {
  create: UserUncheckedCreateWithoutFieldValueUpdatedInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupCreatedByInput {
  create: UserUncheckedCreateWithoutGroupCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupUpdatedByInput {
  create: UserUncheckedCreateWithoutGroupUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutGroupUserInput {
  create: UserUncheckedCreateWithoutGroupUserInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutHistoryFlagCreatedByInput {
  create: UserUncheckedCreateWithoutHistoryFlagCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutHistoryMonthlyRecurringRevenueInput {
  create: UserUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutHistoryStepCreatedByInput {
  create: UserUncheckedCreateWithoutHistoryStepCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutInvestInput {
  create: UserUncheckedCreateWithoutInvestInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutKrCommentProjectInput {
  create: UserUncheckedCreateWithoutKrCommentProjectInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutKrCreatedByInput {
  create: UserUncheckedCreateWithoutKrCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutKrInput {
  create: UserUncheckedCreateWithoutKrInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutNotfyCreatedByInput {
  create: UserUncheckedCreateWithoutNotfyCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutNotfyUpdateddByInput {
  create: UserUncheckedCreateWithoutNotfyUpdateddByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutObjectiveCreatedByInput {
  create: UserUncheckedCreateWithoutObjectiveCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutObjectiveUpdatedByInput {
  create: UserUncheckedCreateWithoutObjectiveUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOkrObjectiveProjectInput {
  create: UserUncheckedCreateWithoutOkrObjectiveProjectInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOkrProjectHistoryInput {
  create: UserUncheckedCreateWithoutOkrProjectHistoryInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOkrProjectInput {
  create: UserUncheckedCreateWithoutOkrProjectInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPrimitiveStreenghtCreatedByInput {
  create: UserUncheckedCreateWithoutPrimitiveStreenghtCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPrimitiveStreenghtUpdatedByInput {
  create: UserUncheckedCreateWithoutPrimitiveStreenghtUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutProjectCreatedByInput {
  create: UserUncheckedCreateWithoutProjectCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutProjectUpdatedByInput {
  create: UserUncheckedCreateWithoutProjectUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserJobFunctionInput {
  create: UserUncheckedCreateWithoutUserJobFunctionInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserNotfyInput {
  create: UserUncheckedCreateWithoutUserNotfyInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserOrganizationInput {
  create: UserUncheckedCreateWithoutUserOrganizationInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserStepsInput {
  create: UserUncheckedCreateWithoutUserStepsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserTeamInput {
  create: UserUncheckedCreateWithoutUserTeamInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutViewedCommentProjectInput {
  create: UserUncheckedCreateWithoutViewedCommentProjectInput!
  where: UserWhereUniqueInput!
}

type UserGroupBy {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
  active: Boolean!
  avatarUrl: String!
  createdAt: DateTimeISO!
  email: String!
  name: String!
  nickName: String!
  password: String!
  personalInfo: JSON
  role: role!
  typeUser: typeUser!
  updatedAt: DateTimeISO!
  uuid: String!
}

type UserJobFunction {
  jobFunction: JobFunction!
  jobFunctionId: Int!
  user: User!
  userUuid: String!
  weight: Float!
}

type UserJobFunctionAvgAggregate {
  jobFunctionId: Float
  weight: Float
}

input UserJobFunctionAvgOrderByAggregateInput {
  jobFunctionId: SortOrder
  weight: SortOrder
}

type UserJobFunctionCountAggregate {
  _all: Int!
  jobFunctionId: Int!
  userUuid: Int!
  weight: Int!
}

input UserJobFunctionCountOrderByAggregateInput {
  jobFunctionId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserJobFunctionCreateManyInput {
  jobFunctionId: Int!
  userUuid: String!
  weight: Float
}

input UserJobFunctionCreateManyJobFunctionInput {
  userUuid: String!
  weight: Float
}

input UserJobFunctionCreateManyJobFunctionInputEnvelope {
  data: [UserJobFunctionCreateManyJobFunctionInput!]!
  skipDuplicates: Boolean
}

input UserJobFunctionCreateManyUserInput {
  jobFunctionId: Int!
  weight: Float
}

input UserJobFunctionCreateManyUserInputEnvelope {
  data: [UserJobFunctionCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserJobFunctionCreateOrConnectWithoutJobFunctionInput {
  create: UserJobFunctionUncheckedCreateWithoutJobFunctionInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionCreateOrConnectWithoutUserInput {
  create: UserJobFunctionUncheckedCreateWithoutUserInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionCreateWithoutJobFunctionInput {
  user: UserCreateNestedOneWithoutUserJobFunctionInput!
  weight: Float
}

input UserJobFunctionCreateWithoutUserInput {
  jobFunction: JobFunctionCreateNestedOneWithoutUserJobFunctionInput!
  weight: Float
}

type UserJobFunctionGroupBy {
  _avg: UserJobFunctionAvgAggregate
  _count: UserJobFunctionCountAggregate
  _max: UserJobFunctionMaxAggregate
  _min: UserJobFunctionMinAggregate
  _sum: UserJobFunctionSumAggregate
  jobFunctionId: Int!
  userUuid: String!
  weight: Float!
}

input UserJobFunctionListRelationFilter {
  every: UserJobFunctionWhereInput
  none: UserJobFunctionWhereInput
  some: UserJobFunctionWhereInput
}

type UserJobFunctionMaxAggregate {
  jobFunctionId: Int
  userUuid: String
  weight: Float
}

input UserJobFunctionMaxOrderByAggregateInput {
  jobFunctionId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

type UserJobFunctionMinAggregate {
  jobFunctionId: Int
  userUuid: String
  weight: Float
}

input UserJobFunctionMinOrderByAggregateInput {
  jobFunctionId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserJobFunctionOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserJobFunctionOrderByWithAggregationInput {
  _avg: UserJobFunctionAvgOrderByAggregateInput
  _count: UserJobFunctionCountOrderByAggregateInput
  _max: UserJobFunctionMaxOrderByAggregateInput
  _min: UserJobFunctionMinOrderByAggregateInput
  _sum: UserJobFunctionSumOrderByAggregateInput
  jobFunctionId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserJobFunctionOrderByWithRelationInput {
  jobFunction: JobFunctionOrderByWithRelationInput
  jobFunctionId: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
  weight: SortOrder
}

enum UserJobFunctionScalarFieldEnum {
  jobFunctionId
  userUuid
  weight
}

input UserJobFunctionScalarWhereInput {
  AND: [UserJobFunctionScalarWhereInput!]
  NOT: [UserJobFunctionScalarWhereInput!]
  OR: [UserJobFunctionScalarWhereInput!]
  jobFunctionId: IntFilter
  userUuid: UuidFilter
  weight: FloatFilter
}

input UserJobFunctionScalarWhereWithAggregatesInput {
  AND: [UserJobFunctionScalarWhereWithAggregatesInput!]
  NOT: [UserJobFunctionScalarWhereWithAggregatesInput!]
  OR: [UserJobFunctionScalarWhereWithAggregatesInput!]
  jobFunctionId: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
  weight: FloatWithAggregatesFilter
}

type UserJobFunctionSumAggregate {
  jobFunctionId: Int
  weight: Float
}

input UserJobFunctionSumOrderByAggregateInput {
  jobFunctionId: SortOrder
  weight: SortOrder
}

input UserJobFunctionUncheckedCreateInput {
  jobFunctionId: Int!
  userUuid: String!
  weight: Float
}

input UserJobFunctionUncheckedCreateNestedManyWithoutJobFunctionInput {
  connect: [UserJobFunctionWhereUniqueInput!]
  connectOrCreate: [UserJobFunctionCreateOrConnectWithoutJobFunctionInput!]
  create: [UserJobFunctionCreateWithoutJobFunctionInput!]
  createMany: UserJobFunctionCreateManyJobFunctionInputEnvelope
}

input UserJobFunctionUncheckedCreateNestedManyWithoutUserInput {
  connect: [UserJobFunctionWhereUniqueInput!]
  connectOrCreate: [UserJobFunctionCreateOrConnectWithoutUserInput!]
  create: [UserJobFunctionCreateWithoutUserInput!]
  createMany: UserJobFunctionCreateManyUserInputEnvelope
}

input UserJobFunctionUncheckedCreateWithoutJobFunctionInput {
  userUuid: String!
  weight: Float
}

input UserJobFunctionUncheckedCreateWithoutUserInput {
  jobFunctionId: Int!
  weight: Float
}

input UserJobFunctionUncheckedUpdateInput {
  jobFunctionId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUncheckedUpdateManyInput {
  jobFunctionId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUncheckedUpdateManyWithoutJobFunctionInput {
  userUuid: StringFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUncheckedUpdateManyWithoutJobFunctionNestedInput {
  connect: [UserJobFunctionWhereUniqueInput!]
  connectOrCreate: [UserJobFunctionCreateOrConnectWithoutJobFunctionInput!]
  create: [UserJobFunctionCreateWithoutJobFunctionInput!]
  createMany: UserJobFunctionCreateManyJobFunctionInputEnvelope
  delete: [UserJobFunctionWhereUniqueInput!]
  deleteMany: [UserJobFunctionScalarWhereInput!]
  disconnect: [UserJobFunctionWhereUniqueInput!]
  set: [UserJobFunctionWhereUniqueInput!]
  update: [UserJobFunctionUpdateWithWhereUniqueWithoutJobFunctionInput!]
  updateMany: [UserJobFunctionUpdateManyWithWhereWithoutJobFunctionInput!]
  upsert: [UserJobFunctionUpsertWithWhereUniqueWithoutJobFunctionInput!]
}

input UserJobFunctionUncheckedUpdateManyWithoutUserInput {
  jobFunctionId: IntFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUncheckedUpdateManyWithoutUserNestedInput {
  connect: [UserJobFunctionWhereUniqueInput!]
  connectOrCreate: [UserJobFunctionCreateOrConnectWithoutUserInput!]
  create: [UserJobFunctionCreateWithoutUserInput!]
  createMany: UserJobFunctionCreateManyUserInputEnvelope
  delete: [UserJobFunctionWhereUniqueInput!]
  deleteMany: [UserJobFunctionScalarWhereInput!]
  disconnect: [UserJobFunctionWhereUniqueInput!]
  set: [UserJobFunctionWhereUniqueInput!]
  update: [UserJobFunctionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserJobFunctionUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserJobFunctionUpsertWithWhereUniqueWithoutUserInput!]
}

input UserJobFunctionUncheckedUpdateWithoutJobFunctionInput {
  userUuid: StringFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUncheckedUpdateWithoutUserInput {
  jobFunctionId: IntFieldUpdateOperationsInput
  weight: FloatFieldUpdateOperationsInput
}

input UserJobFunctionUpdateManyWithWhereWithoutJobFunctionInput {
  data: UserJobFunctionUncheckedUpdateManyWithoutJobFunctionInput!
  where: UserJobFunctionScalarWhereInput!
}

input UserJobFunctionUpdateManyWithWhereWithoutUserInput {
  data: UserJobFunctionUncheckedUpdateManyWithoutUserInput!
  where: UserJobFunctionScalarWhereInput!
}

input UserJobFunctionUpdateWithWhereUniqueWithoutJobFunctionInput {
  data: UserJobFunctionUncheckedUpdateWithoutJobFunctionInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionUpdateWithWhereUniqueWithoutUserInput {
  data: UserJobFunctionUncheckedUpdateWithoutUserInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionUpsertWithWhereUniqueWithoutJobFunctionInput {
  create: UserJobFunctionUncheckedCreateWithoutJobFunctionInput!
  update: UserJobFunctionUncheckedUpdateWithoutJobFunctionInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionUpsertWithWhereUniqueWithoutUserInput {
  create: UserJobFunctionUncheckedCreateWithoutUserInput!
  update: UserJobFunctionUncheckedUpdateWithoutUserInput!
  where: UserJobFunctionWhereUniqueInput!
}

input UserJobFunctionUserUuidJobFunctionIdCompoundUniqueInput {
  jobFunctionId: Int!
  userUuid: String!
}

input UserJobFunctionWhereInput {
  AND: [UserJobFunctionWhereInput!]
  NOT: [UserJobFunctionWhereInput!]
  OR: [UserJobFunctionWhereInput!]
  jobFunction: JobFunctionRelationFilter
  jobFunctionId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  weight: FloatFilter
}

input UserJobFunctionWhereUniqueInput {
  AND: [UserJobFunctionWhereInput!]
  NOT: [UserJobFunctionWhereInput!]
  OR: [UserJobFunctionWhereInput!]
  jobFunction: JobFunctionRelationFilter
  jobFunctionId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  userUuid_jobFunctionId: UserJobFunctionUserUuidJobFunctionIdCompoundUniqueInput
  weight: FloatFilter
}

type UserMaxAggregate {
  active: Boolean
  avatarUrl: String
  createdAt: DateTimeISO
  email: String
  name: String
  nickName: String
  password: String
  role: role
  typeUser: typeUser
  updatedAt: DateTimeISO
  uuid: String
}

input UserMaxOrderByAggregateInput {
  active: SortOrder
  avatarUrl: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  role: SortOrder
  typeUser: SortOrder
  updatedAt: SortOrder
  uuid: SortOrder
}

type UserMinAggregate {
  active: Boolean
  avatarUrl: String
  createdAt: DateTimeISO
  email: String
  name: String
  nickName: String
  password: String
  role: role
  typeUser: typeUser
  updatedAt: DateTimeISO
  uuid: String
}

input UserMinOrderByAggregateInput {
  active: SortOrder
  avatarUrl: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  role: SortOrder
  typeUser: SortOrder
  updatedAt: SortOrder
  uuid: SortOrder
}

type UserNotfy {
  notfy: Notfy!
  notfyId: Int!
  user: User!
  userUuid: String!
}

type UserNotfyAvgAggregate {
  notfyId: Float
}

input UserNotfyAvgOrderByAggregateInput {
  notfyId: SortOrder
}

type UserNotfyCountAggregate {
  _all: Int!
  notfyId: Int!
  userUuid: Int!
}

input UserNotfyCountOrderByAggregateInput {
  notfyId: SortOrder
  userUuid: SortOrder
}

input UserNotfyCreateManyInput {
  notfyId: Int
  userUuid: String!
}

input UserNotfyCreateManyNotfyInput {
  userUuid: String!
}

input UserNotfyCreateManyNotfyInputEnvelope {
  data: [UserNotfyCreateManyNotfyInput!]!
  skipDuplicates: Boolean
}

input UserNotfyCreateManyUserInput {
  notfyId: Int
}

input UserNotfyCreateManyUserInputEnvelope {
  data: [UserNotfyCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserNotfyCreateNestedManyWithoutNotfyInput {
  connect: [UserNotfyWhereUniqueInput!]
  connectOrCreate: [UserNotfyCreateOrConnectWithoutNotfyInput!]
  create: [UserNotfyCreateWithoutNotfyInput!]
  createMany: UserNotfyCreateManyNotfyInputEnvelope
}

input UserNotfyCreateOrConnectWithoutNotfyInput {
  create: UserNotfyUncheckedCreateWithoutNotfyInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyCreateOrConnectWithoutUserInput {
  create: UserNotfyUncheckedCreateWithoutUserInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyCreateWithoutNotfyInput {
  user: UserCreateNestedOneWithoutUserNotfyInput!
}

input UserNotfyCreateWithoutUserInput {
  notfy: NotfyCreateNestedOneWithoutUserInput
}

type UserNotfyGroupBy {
  _avg: UserNotfyAvgAggregate
  _count: UserNotfyCountAggregate
  _max: UserNotfyMaxAggregate
  _min: UserNotfyMinAggregate
  _sum: UserNotfySumAggregate
  notfyId: Int!
  userUuid: String!
}

input UserNotfyListRelationFilter {
  every: UserNotfyWhereInput
  none: UserNotfyWhereInput
  some: UserNotfyWhereInput
}

type UserNotfyMaxAggregate {
  notfyId: Int
  userUuid: String
}

input UserNotfyMaxOrderByAggregateInput {
  notfyId: SortOrder
  userUuid: SortOrder
}

type UserNotfyMinAggregate {
  notfyId: Int
  userUuid: String
}

input UserNotfyMinOrderByAggregateInput {
  notfyId: SortOrder
  userUuid: SortOrder
}

input UserNotfyNotfyIdUserUuidCompoundUniqueInput {
  notfyId: Int!
  userUuid: String!
}

input UserNotfyOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserNotfyOrderByWithAggregationInput {
  _avg: UserNotfyAvgOrderByAggregateInput
  _count: UserNotfyCountOrderByAggregateInput
  _max: UserNotfyMaxOrderByAggregateInput
  _min: UserNotfyMinOrderByAggregateInput
  _sum: UserNotfySumOrderByAggregateInput
  notfyId: SortOrder
  userUuid: SortOrder
}

input UserNotfyOrderByWithRelationInput {
  notfy: NotfyOrderByWithRelationInput
  notfyId: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum UserNotfyScalarFieldEnum {
  notfyId
  userUuid
}

input UserNotfyScalarWhereInput {
  AND: [UserNotfyScalarWhereInput!]
  NOT: [UserNotfyScalarWhereInput!]
  OR: [UserNotfyScalarWhereInput!]
  notfyId: IntFilter
  userUuid: UuidFilter
}

input UserNotfyScalarWhereWithAggregatesInput {
  AND: [UserNotfyScalarWhereWithAggregatesInput!]
  NOT: [UserNotfyScalarWhereWithAggregatesInput!]
  OR: [UserNotfyScalarWhereWithAggregatesInput!]
  notfyId: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type UserNotfySumAggregate {
  notfyId: Int
}

input UserNotfySumOrderByAggregateInput {
  notfyId: SortOrder
}

input UserNotfyUncheckedCreateInput {
  notfyId: Int
  userUuid: String!
}

input UserNotfyUncheckedCreateNestedManyWithoutNotfyInput {
  connect: [UserNotfyWhereUniqueInput!]
  connectOrCreate: [UserNotfyCreateOrConnectWithoutNotfyInput!]
  create: [UserNotfyCreateWithoutNotfyInput!]
  createMany: UserNotfyCreateManyNotfyInputEnvelope
}

input UserNotfyUncheckedCreateNestedManyWithoutUserInput {
  connect: [UserNotfyWhereUniqueInput!]
  connectOrCreate: [UserNotfyCreateOrConnectWithoutUserInput!]
  create: [UserNotfyCreateWithoutUserInput!]
  createMany: UserNotfyCreateManyUserInputEnvelope
}

input UserNotfyUncheckedCreateWithoutNotfyInput {
  userUuid: String!
}

input UserNotfyUncheckedCreateWithoutUserInput {
  notfyId: Int
}

input UserNotfyUncheckedUpdateInput {
  notfyId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserNotfyUncheckedUpdateManyInput {
  notfyId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserNotfyUncheckedUpdateManyWithoutNotfyInput {
  userUuid: StringFieldUpdateOperationsInput
}

input UserNotfyUncheckedUpdateManyWithoutNotfyNestedInput {
  connect: [UserNotfyWhereUniqueInput!]
  connectOrCreate: [UserNotfyCreateOrConnectWithoutNotfyInput!]
  create: [UserNotfyCreateWithoutNotfyInput!]
  createMany: UserNotfyCreateManyNotfyInputEnvelope
  delete: [UserNotfyWhereUniqueInput!]
  deleteMany: [UserNotfyScalarWhereInput!]
  disconnect: [UserNotfyWhereUniqueInput!]
  set: [UserNotfyWhereUniqueInput!]
  update: [UserNotfyUpdateWithWhereUniqueWithoutNotfyInput!]
  updateMany: [UserNotfyUpdateManyWithWhereWithoutNotfyInput!]
  upsert: [UserNotfyUpsertWithWhereUniqueWithoutNotfyInput!]
}

input UserNotfyUncheckedUpdateManyWithoutUserInput {
  notfyId: IntFieldUpdateOperationsInput
}

input UserNotfyUncheckedUpdateManyWithoutUserNestedInput {
  connect: [UserNotfyWhereUniqueInput!]
  connectOrCreate: [UserNotfyCreateOrConnectWithoutUserInput!]
  create: [UserNotfyCreateWithoutUserInput!]
  createMany: UserNotfyCreateManyUserInputEnvelope
  delete: [UserNotfyWhereUniqueInput!]
  deleteMany: [UserNotfyScalarWhereInput!]
  disconnect: [UserNotfyWhereUniqueInput!]
  set: [UserNotfyWhereUniqueInput!]
  update: [UserNotfyUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserNotfyUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserNotfyUpsertWithWhereUniqueWithoutUserInput!]
}

input UserNotfyUncheckedUpdateWithoutNotfyInput {
  userUuid: StringFieldUpdateOperationsInput
}

input UserNotfyUncheckedUpdateWithoutUserInput {
  notfyId: IntFieldUpdateOperationsInput
}

input UserNotfyUpdateManyWithWhereWithoutNotfyInput {
  data: UserNotfyUncheckedUpdateManyWithoutNotfyInput!
  where: UserNotfyScalarWhereInput!
}

input UserNotfyUpdateManyWithWhereWithoutUserInput {
  data: UserNotfyUncheckedUpdateManyWithoutUserInput!
  where: UserNotfyScalarWhereInput!
}

input UserNotfyUpdateWithWhereUniqueWithoutNotfyInput {
  data: UserNotfyUncheckedUpdateWithoutNotfyInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyUpdateWithWhereUniqueWithoutUserInput {
  data: UserNotfyUncheckedUpdateWithoutUserInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyUpsertWithWhereUniqueWithoutNotfyInput {
  create: UserNotfyUncheckedCreateWithoutNotfyInput!
  update: UserNotfyUncheckedUpdateWithoutNotfyInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyUpsertWithWhereUniqueWithoutUserInput {
  create: UserNotfyUncheckedCreateWithoutUserInput!
  update: UserNotfyUncheckedUpdateWithoutUserInput!
  where: UserNotfyWhereUniqueInput!
}

input UserNotfyWhereInput {
  AND: [UserNotfyWhereInput!]
  NOT: [UserNotfyWhereInput!]
  OR: [UserNotfyWhereInput!]
  notfy: NotfyRelationFilter
  notfyId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input UserNotfyWhereUniqueInput {
  AND: [UserNotfyWhereInput!]
  NOT: [UserNotfyWhereInput!]
  OR: [UserNotfyWhereInput!]
  notfy: NotfyRelationFilter
  notfyId: IntFilter
  notfyId_userUuid: UserNotfyNotfyIdUserUuidCompoundUniqueInput
  user: UserRelationFilter
  userUuid: UuidFilter
}

input UserNullableRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  active: SortOrder
  avatarUrl: SortOrder
  createdAt: SortOrder
  email: SortOrder
  name: SortOrder
  nickName: SortOrder
  password: SortOrder
  personalInfo: SortOrderInput
  role: SortOrder
  typeUser: SortOrder
  updatedAt: SortOrder
  uuid: SortOrder
}

input UserOrderByWithRelationInput {
  AcessHistoryUser: AcessHistoryUserOrderByRelationAggregateInput
  active: SortOrder
  archives: ArchivesOrderByRelationAggregateInput
  avatarUrl: SortOrder
  boardCreatedBy: BoardOrderByRelationAggregateInput
  boardUpdatedBy: BoardOrderByRelationAggregateInput
  cardAssignment: CardAssignmentOrderByRelationAggregateInput
  cardComment: CardCommentOrderByRelationAggregateInput
  cardCreatedBy: CardOrderByRelationAggregateInput
  cardMovements: CardMovementOrderByRelationAggregateInput
  cardUpdatedBy: CardOrderByRelationAggregateInput
  client: ClientOrderByRelationAggregateInput
  coardMenbership: BoardMenbershipOrderByRelationAggregateInput
  columnCreatedBy: ColumnOrderByRelationAggregateInput
  columnUpdatedBy: ColumnOrderByRelationAggregateInput
  commentProjects: CommentProjectOrderByRelationAggregateInput
  createdAt: SortOrder
  email: SortOrder
  fieldValueCreated: FieldOrderByRelationAggregateInput
  fieldValueCreatedBy: FieldsValueOrderByRelationAggregateInput
  fieldValueUpdated: FieldOrderByRelationAggregateInput
  groupCreatedBy: GroupOrderByRelationAggregateInput
  groupUpdatedBy: GroupOrderByRelationAggregateInput
  groupUser: GroupUserOrderByRelationAggregateInput
  historyFlagCreatedBy: HistoryFlagOrderByRelationAggregateInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueOrderByRelationAggregateInput
  historyStepCreatedBy: HistoryStepOrderByRelationAggregateInput
  invest: InvestOrderByRelationAggregateInput
  kr: KrOrderByRelationAggregateInput
  krCommentProject: KrCommentProjectOrderByRelationAggregateInput
  krCreatedBy: KrOrderByRelationAggregateInput
  name: SortOrder
  nickName: SortOrder
  notfyCreatedBy: NotfyOrderByRelationAggregateInput
  notfyUpdateddBy: NotfyOrderByRelationAggregateInput
  objectiveCreatedBy: ObjectiveOrderByRelationAggregateInput
  objectiveUpdatedBy: ObjectiveOrderByRelationAggregateInput
  okrObjectiveProject: OkrObjectiveProjectOrderByRelationAggregateInput
  okrProject: OkrProjectOrderByRelationAggregateInput
  okrProjectHistory: OkrProjectHistoryOrderByRelationAggregateInput
  password: SortOrder
  personalInfo: SortOrderInput
  primitiveStreenghtCreatedBy: PrimitiveStreenghtOrderByRelationAggregateInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtOrderByRelationAggregateInput
  projectCreatedBy: ProjectOrderByRelationAggregateInput
  projectUpdatedBy: ProjectOrderByRelationAggregateInput
  role: SortOrder
  selfStructure: SelfStructureOrderByRelationAggregateInput
  tokenFirebase: TokenFirebaseOrderByRelationAggregateInput
  typeUser: SortOrder
  updatedAt: SortOrder
  userJobFunction: UserJobFunctionOrderByRelationAggregateInput
  userNotfy: UserNotfyOrderByRelationAggregateInput
  userOrganization: UserOrganizationOrderByRelationAggregateInput
  userSteps: UserStepOrderByRelationAggregateInput
  userTeam: UserTeamOrderByRelationAggregateInput
  uuid: SortOrder
  viewedCommentProject: ViewedCommentProjectOrderByRelationAggregateInput
}

type UserOrganization {
  organization: Organization!
  organizationId: Int!
  user: User!
  userUuid: String!
}

type UserOrganizationAvgAggregate {
  organizationId: Float
}

input UserOrganizationAvgOrderByAggregateInput {
  organizationId: SortOrder
}

type UserOrganizationCountAggregate {
  _all: Int!
  organizationId: Int!
  userUuid: Int!
}

input UserOrganizationCountOrderByAggregateInput {
  organizationId: SortOrder
  userUuid: SortOrder
}

input UserOrganizationCreateManyInput {
  organizationId: Int!
  userUuid: String!
}

input UserOrganizationCreateManyOrganizationInput {
  userUuid: String!
}

input UserOrganizationCreateManyOrganizationInputEnvelope {
  data: [UserOrganizationCreateManyOrganizationInput!]!
  skipDuplicates: Boolean
}

input UserOrganizationCreateManyUserInput {
  organizationId: Int!
}

input UserOrganizationCreateManyUserInputEnvelope {
  data: [UserOrganizationCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserOrganizationCreateOrConnectWithoutOrganizationInput {
  create: UserOrganizationUncheckedCreateWithoutOrganizationInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationCreateOrConnectWithoutUserInput {
  create: UserOrganizationUncheckedCreateWithoutUserInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationCreateWithoutOrganizationInput {
  user: UserCreateNestedOneWithoutUserOrganizationInput!
}

input UserOrganizationCreateWithoutUserInput {
  organization: OrganizationCreateNestedOneWithoutUserOrganizationInput!
}

type UserOrganizationGroupBy {
  _avg: UserOrganizationAvgAggregate
  _count: UserOrganizationCountAggregate
  _max: UserOrganizationMaxAggregate
  _min: UserOrganizationMinAggregate
  _sum: UserOrganizationSumAggregate
  organizationId: Int!
  userUuid: String!
}

input UserOrganizationListRelationFilter {
  every: UserOrganizationWhereInput
  none: UserOrganizationWhereInput
  some: UserOrganizationWhereInput
}

type UserOrganizationMaxAggregate {
  organizationId: Int
  userUuid: String
}

input UserOrganizationMaxOrderByAggregateInput {
  organizationId: SortOrder
  userUuid: SortOrder
}

type UserOrganizationMinAggregate {
  organizationId: Int
  userUuid: String
}

input UserOrganizationMinOrderByAggregateInput {
  organizationId: SortOrder
  userUuid: SortOrder
}

input UserOrganizationOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrganizationOrderByWithAggregationInput {
  _avg: UserOrganizationAvgOrderByAggregateInput
  _count: UserOrganizationCountOrderByAggregateInput
  _max: UserOrganizationMaxOrderByAggregateInput
  _min: UserOrganizationMinOrderByAggregateInput
  _sum: UserOrganizationSumOrderByAggregateInput
  organizationId: SortOrder
  userUuid: SortOrder
}

input UserOrganizationOrderByWithRelationInput {
  organization: OrganizationOrderByWithRelationInput
  organizationId: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum UserOrganizationScalarFieldEnum {
  organizationId
  userUuid
}

input UserOrganizationScalarWhereInput {
  AND: [UserOrganizationScalarWhereInput!]
  NOT: [UserOrganizationScalarWhereInput!]
  OR: [UserOrganizationScalarWhereInput!]
  organizationId: IntFilter
  userUuid: UuidFilter
}

input UserOrganizationScalarWhereWithAggregatesInput {
  AND: [UserOrganizationScalarWhereWithAggregatesInput!]
  NOT: [UserOrganizationScalarWhereWithAggregatesInput!]
  OR: [UserOrganizationScalarWhereWithAggregatesInput!]
  organizationId: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type UserOrganizationSumAggregate {
  organizationId: Int
}

input UserOrganizationSumOrderByAggregateInput {
  organizationId: SortOrder
}

input UserOrganizationUncheckedCreateInput {
  organizationId: Int!
  userUuid: String!
}

input UserOrganizationUncheckedCreateNestedManyWithoutOrganizationInput {
  connect: [UserOrganizationWhereUniqueInput!]
  connectOrCreate: [UserOrganizationCreateOrConnectWithoutOrganizationInput!]
  create: [UserOrganizationCreateWithoutOrganizationInput!]
  createMany: UserOrganizationCreateManyOrganizationInputEnvelope
}

input UserOrganizationUncheckedCreateNestedManyWithoutUserInput {
  connect: [UserOrganizationWhereUniqueInput!]
  connectOrCreate: [UserOrganizationCreateOrConnectWithoutUserInput!]
  create: [UserOrganizationCreateWithoutUserInput!]
  createMany: UserOrganizationCreateManyUserInputEnvelope
}

input UserOrganizationUncheckedCreateWithoutOrganizationInput {
  userUuid: String!
}

input UserOrganizationUncheckedCreateWithoutUserInput {
  organizationId: Int!
}

input UserOrganizationUncheckedUpdateInput {
  organizationId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserOrganizationUncheckedUpdateManyInput {
  organizationId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserOrganizationUncheckedUpdateManyWithoutOrganizationInput {
  userUuid: StringFieldUpdateOperationsInput
}

input UserOrganizationUncheckedUpdateManyWithoutOrganizationNestedInput {
  connect: [UserOrganizationWhereUniqueInput!]
  connectOrCreate: [UserOrganizationCreateOrConnectWithoutOrganizationInput!]
  create: [UserOrganizationCreateWithoutOrganizationInput!]
  createMany: UserOrganizationCreateManyOrganizationInputEnvelope
  delete: [UserOrganizationWhereUniqueInput!]
  deleteMany: [UserOrganizationScalarWhereInput!]
  disconnect: [UserOrganizationWhereUniqueInput!]
  set: [UserOrganizationWhereUniqueInput!]
  update: [UserOrganizationUpdateWithWhereUniqueWithoutOrganizationInput!]
  updateMany: [UserOrganizationUpdateManyWithWhereWithoutOrganizationInput!]
  upsert: [UserOrganizationUpsertWithWhereUniqueWithoutOrganizationInput!]
}

input UserOrganizationUncheckedUpdateManyWithoutUserInput {
  organizationId: IntFieldUpdateOperationsInput
}

input UserOrganizationUncheckedUpdateManyWithoutUserNestedInput {
  connect: [UserOrganizationWhereUniqueInput!]
  connectOrCreate: [UserOrganizationCreateOrConnectWithoutUserInput!]
  create: [UserOrganizationCreateWithoutUserInput!]
  createMany: UserOrganizationCreateManyUserInputEnvelope
  delete: [UserOrganizationWhereUniqueInput!]
  deleteMany: [UserOrganizationScalarWhereInput!]
  disconnect: [UserOrganizationWhereUniqueInput!]
  set: [UserOrganizationWhereUniqueInput!]
  update: [UserOrganizationUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserOrganizationUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserOrganizationUpsertWithWhereUniqueWithoutUserInput!]
}

input UserOrganizationUncheckedUpdateWithoutOrganizationInput {
  userUuid: StringFieldUpdateOperationsInput
}

input UserOrganizationUncheckedUpdateWithoutUserInput {
  organizationId: IntFieldUpdateOperationsInput
}

input UserOrganizationUpdateManyWithWhereWithoutOrganizationInput {
  data: UserOrganizationUncheckedUpdateManyWithoutOrganizationInput!
  where: UserOrganizationScalarWhereInput!
}

input UserOrganizationUpdateManyWithWhereWithoutUserInput {
  data: UserOrganizationUncheckedUpdateManyWithoutUserInput!
  where: UserOrganizationScalarWhereInput!
}

input UserOrganizationUpdateWithWhereUniqueWithoutOrganizationInput {
  data: UserOrganizationUncheckedUpdateWithoutOrganizationInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationUpdateWithWhereUniqueWithoutUserInput {
  data: UserOrganizationUncheckedUpdateWithoutUserInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationUpsertWithWhereUniqueWithoutOrganizationInput {
  create: UserOrganizationUncheckedCreateWithoutOrganizationInput!
  update: UserOrganizationUncheckedUpdateWithoutOrganizationInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationUpsertWithWhereUniqueWithoutUserInput {
  create: UserOrganizationUncheckedCreateWithoutUserInput!
  update: UserOrganizationUncheckedUpdateWithoutUserInput!
  where: UserOrganizationWhereUniqueInput!
}

input UserOrganizationUserUuidOrganizationIdCompoundUniqueInput {
  organizationId: Int!
  userUuid: String!
}

input UserOrganizationWhereInput {
  AND: [UserOrganizationWhereInput!]
  NOT: [UserOrganizationWhereInput!]
  OR: [UserOrganizationWhereInput!]
  organization: OrganizationRelationFilter
  organizationId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input UserOrganizationWhereUniqueInput {
  AND: [UserOrganizationWhereInput!]
  NOT: [UserOrganizationWhereInput!]
  OR: [UserOrganizationWhereInput!]
  organization: OrganizationRelationFilter
  organizationId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  userUuid_organizationId: UserOrganizationUserUuidOrganizationIdCompoundUniqueInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldEnum {
  active
  avatarUrl
  createdAt
  email
  name
  nickName
  password
  personalInfo
  role
  typeUser
  updatedAt
  uuid
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  active: BoolWithAggregatesFilter
  avatarUrl: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  nickName: StringWithAggregatesFilter
  password: StringWithAggregatesFilter
  personalInfo: JsonNullableWithAggregatesFilter
  role: EnumroleWithAggregatesFilter
  typeUser: EnumtypeUserWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  uuid: UuidWithAggregatesFilter
}

type UserStep {
  step: Step!
  stepId: Int!
  user: User!
  userUuid: String!
  weight: Int!
}

type UserStepAvgAggregate {
  stepId: Float
  weight: Float
}

input UserStepAvgOrderByAggregateInput {
  stepId: SortOrder
  weight: SortOrder
}

type UserStepCountAggregate {
  _all: Int!
  stepId: Int!
  userUuid: Int!
  weight: Int!
}

input UserStepCountOrderByAggregateInput {
  stepId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserStepCreateManyInput {
  stepId: Int!
  userUuid: String!
  weight: Int
}

input UserStepCreateManyStepInput {
  userUuid: String!
  weight: Int
}

input UserStepCreateManyStepInputEnvelope {
  data: [UserStepCreateManyStepInput!]!
  skipDuplicates: Boolean
}

input UserStepCreateManyUserInput {
  stepId: Int!
  weight: Int
}

input UserStepCreateManyUserInputEnvelope {
  data: [UserStepCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserStepCreateOrConnectWithoutStepInput {
  create: UserStepUncheckedCreateWithoutStepInput!
  where: UserStepWhereUniqueInput!
}

input UserStepCreateOrConnectWithoutUserInput {
  create: UserStepUncheckedCreateWithoutUserInput!
  where: UserStepWhereUniqueInput!
}

input UserStepCreateWithoutStepInput {
  user: UserCreateNestedOneWithoutUserStepsInput!
  weight: Int
}

input UserStepCreateWithoutUserInput {
  step: StepCreateNestedOneWithoutUserStepInput!
  weight: Int
}

type UserStepGroupBy {
  _avg: UserStepAvgAggregate
  _count: UserStepCountAggregate
  _max: UserStepMaxAggregate
  _min: UserStepMinAggregate
  _sum: UserStepSumAggregate
  stepId: Int!
  userUuid: String!
  weight: Int!
}

input UserStepListRelationFilter {
  every: UserStepWhereInput
  none: UserStepWhereInput
  some: UserStepWhereInput
}

type UserStepMaxAggregate {
  stepId: Int
  userUuid: String
  weight: Int
}

input UserStepMaxOrderByAggregateInput {
  stepId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

type UserStepMinAggregate {
  stepId: Int
  userUuid: String
  weight: Int
}

input UserStepMinOrderByAggregateInput {
  stepId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserStepOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserStepOrderByWithAggregationInput {
  _avg: UserStepAvgOrderByAggregateInput
  _count: UserStepCountOrderByAggregateInput
  _max: UserStepMaxOrderByAggregateInput
  _min: UserStepMinOrderByAggregateInput
  _sum: UserStepSumOrderByAggregateInput
  stepId: SortOrder
  userUuid: SortOrder
  weight: SortOrder
}

input UserStepOrderByWithRelationInput {
  step: StepOrderByWithRelationInput
  stepId: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
  weight: SortOrder
}

enum UserStepScalarFieldEnum {
  stepId
  userUuid
  weight
}

input UserStepScalarWhereInput {
  AND: [UserStepScalarWhereInput!]
  NOT: [UserStepScalarWhereInput!]
  OR: [UserStepScalarWhereInput!]
  stepId: IntFilter
  userUuid: UuidFilter
  weight: IntFilter
}

input UserStepScalarWhereWithAggregatesInput {
  AND: [UserStepScalarWhereWithAggregatesInput!]
  NOT: [UserStepScalarWhereWithAggregatesInput!]
  OR: [UserStepScalarWhereWithAggregatesInput!]
  stepId: IntWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
  weight: IntWithAggregatesFilter
}

type UserStepSumAggregate {
  stepId: Int
  weight: Int
}

input UserStepSumOrderByAggregateInput {
  stepId: SortOrder
  weight: SortOrder
}

input UserStepUncheckedCreateInput {
  stepId: Int!
  userUuid: String!
  weight: Int
}

input UserStepUncheckedCreateNestedManyWithoutStepInput {
  connect: [UserStepWhereUniqueInput!]
  connectOrCreate: [UserStepCreateOrConnectWithoutStepInput!]
  create: [UserStepCreateWithoutStepInput!]
  createMany: UserStepCreateManyStepInputEnvelope
}

input UserStepUncheckedCreateNestedManyWithoutUserInput {
  connect: [UserStepWhereUniqueInput!]
  connectOrCreate: [UserStepCreateOrConnectWithoutUserInput!]
  create: [UserStepCreateWithoutUserInput!]
  createMany: UserStepCreateManyUserInputEnvelope
}

input UserStepUncheckedCreateWithoutStepInput {
  userUuid: String!
  weight: Int
}

input UserStepUncheckedCreateWithoutUserInput {
  stepId: Int!
  weight: Int
}

input UserStepUncheckedUpdateInput {
  stepId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUncheckedUpdateManyInput {
  stepId: IntFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUncheckedUpdateManyWithoutStepInput {
  userUuid: StringFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUncheckedUpdateManyWithoutStepNestedInput {
  connect: [UserStepWhereUniqueInput!]
  connectOrCreate: [UserStepCreateOrConnectWithoutStepInput!]
  create: [UserStepCreateWithoutStepInput!]
  createMany: UserStepCreateManyStepInputEnvelope
  delete: [UserStepWhereUniqueInput!]
  deleteMany: [UserStepScalarWhereInput!]
  disconnect: [UserStepWhereUniqueInput!]
  set: [UserStepWhereUniqueInput!]
  update: [UserStepUpdateWithWhereUniqueWithoutStepInput!]
  updateMany: [UserStepUpdateManyWithWhereWithoutStepInput!]
  upsert: [UserStepUpsertWithWhereUniqueWithoutStepInput!]
}

input UserStepUncheckedUpdateManyWithoutUserInput {
  stepId: IntFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUncheckedUpdateManyWithoutUserNestedInput {
  connect: [UserStepWhereUniqueInput!]
  connectOrCreate: [UserStepCreateOrConnectWithoutUserInput!]
  create: [UserStepCreateWithoutUserInput!]
  createMany: UserStepCreateManyUserInputEnvelope
  delete: [UserStepWhereUniqueInput!]
  deleteMany: [UserStepScalarWhereInput!]
  disconnect: [UserStepWhereUniqueInput!]
  set: [UserStepWhereUniqueInput!]
  update: [UserStepUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserStepUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserStepUpsertWithWhereUniqueWithoutUserInput!]
}

input UserStepUncheckedUpdateWithoutStepInput {
  userUuid: StringFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUncheckedUpdateWithoutUserInput {
  stepId: IntFieldUpdateOperationsInput
  weight: IntFieldUpdateOperationsInput
}

input UserStepUpdateManyWithWhereWithoutStepInput {
  data: UserStepUncheckedUpdateManyWithoutStepInput!
  where: UserStepScalarWhereInput!
}

input UserStepUpdateManyWithWhereWithoutUserInput {
  data: UserStepUncheckedUpdateManyWithoutUserInput!
  where: UserStepScalarWhereInput!
}

input UserStepUpdateWithWhereUniqueWithoutStepInput {
  data: UserStepUncheckedUpdateWithoutStepInput!
  where: UserStepWhereUniqueInput!
}

input UserStepUpdateWithWhereUniqueWithoutUserInput {
  data: UserStepUncheckedUpdateWithoutUserInput!
  where: UserStepWhereUniqueInput!
}

input UserStepUpsertWithWhereUniqueWithoutStepInput {
  create: UserStepUncheckedCreateWithoutStepInput!
  update: UserStepUncheckedUpdateWithoutStepInput!
  where: UserStepWhereUniqueInput!
}

input UserStepUpsertWithWhereUniqueWithoutUserInput {
  create: UserStepUncheckedCreateWithoutUserInput!
  update: UserStepUncheckedUpdateWithoutUserInput!
  where: UserStepWhereUniqueInput!
}

input UserStepUserUuidStepIdCompoundUniqueInput {
  stepId: Int!
  userUuid: String!
}

input UserStepWhereInput {
  AND: [UserStepWhereInput!]
  NOT: [UserStepWhereInput!]
  OR: [UserStepWhereInput!]
  step: StepRelationFilter
  stepId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  weight: IntFilter
}

input UserStepWhereUniqueInput {
  AND: [UserStepWhereInput!]
  NOT: [UserStepWhereInput!]
  OR: [UserStepWhereInput!]
  step: StepRelationFilter
  stepId: IntFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  userUuid_stepId: UserStepUserUuidStepIdCompoundUniqueInput
  weight: IntFilter
}

type UserTeam {
  team: Team!
  teamId: Int!
  thumbUrl: String!
  user: User!
  userUuid: String!
}

type UserTeamAvgAggregate {
  teamId: Float
}

input UserTeamAvgOrderByAggregateInput {
  teamId: SortOrder
}

type UserTeamCountAggregate {
  _all: Int!
  teamId: Int!
  thumbUrl: Int!
  userUuid: Int!
}

input UserTeamCountOrderByAggregateInput {
  teamId: SortOrder
  thumbUrl: SortOrder
  userUuid: SortOrder
}

input UserTeamCreateManyInput {
  teamId: Int!
  thumbUrl: String
  userUuid: String!
}

input UserTeamCreateManyTeamInput {
  thumbUrl: String
  userUuid: String!
}

input UserTeamCreateManyTeamInputEnvelope {
  data: [UserTeamCreateManyTeamInput!]!
  skipDuplicates: Boolean
}

input UserTeamCreateManyUserInput {
  teamId: Int!
  thumbUrl: String
}

input UserTeamCreateManyUserInputEnvelope {
  data: [UserTeamCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserTeamCreateOrConnectWithoutTeamInput {
  create: UserTeamUncheckedCreateWithoutTeamInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamCreateOrConnectWithoutUserInput {
  create: UserTeamUncheckedCreateWithoutUserInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamCreateWithoutTeamInput {
  thumbUrl: String
  user: UserCreateNestedOneWithoutUserTeamInput!
}

input UserTeamCreateWithoutUserInput {
  team: TeamCreateNestedOneWithoutUserTeamInput!
  thumbUrl: String
}

type UserTeamGroupBy {
  _avg: UserTeamAvgAggregate
  _count: UserTeamCountAggregate
  _max: UserTeamMaxAggregate
  _min: UserTeamMinAggregate
  _sum: UserTeamSumAggregate
  teamId: Int!
  thumbUrl: String!
  userUuid: String!
}

input UserTeamListRelationFilter {
  every: UserTeamWhereInput
  none: UserTeamWhereInput
  some: UserTeamWhereInput
}

type UserTeamMaxAggregate {
  teamId: Int
  thumbUrl: String
  userUuid: String
}

input UserTeamMaxOrderByAggregateInput {
  teamId: SortOrder
  thumbUrl: SortOrder
  userUuid: SortOrder
}

type UserTeamMinAggregate {
  teamId: Int
  thumbUrl: String
  userUuid: String
}

input UserTeamMinOrderByAggregateInput {
  teamId: SortOrder
  thumbUrl: SortOrder
  userUuid: SortOrder
}

input UserTeamOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserTeamOrderByWithAggregationInput {
  _avg: UserTeamAvgOrderByAggregateInput
  _count: UserTeamCountOrderByAggregateInput
  _max: UserTeamMaxOrderByAggregateInput
  _min: UserTeamMinOrderByAggregateInput
  _sum: UserTeamSumOrderByAggregateInput
  teamId: SortOrder
  thumbUrl: SortOrder
  userUuid: SortOrder
}

input UserTeamOrderByWithRelationInput {
  team: TeamOrderByWithRelationInput
  teamId: SortOrder
  thumbUrl: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
}

enum UserTeamScalarFieldEnum {
  teamId
  thumbUrl
  userUuid
}

input UserTeamScalarWhereInput {
  AND: [UserTeamScalarWhereInput!]
  NOT: [UserTeamScalarWhereInput!]
  OR: [UserTeamScalarWhereInput!]
  teamId: IntFilter
  thumbUrl: StringFilter
  userUuid: UuidFilter
}

input UserTeamScalarWhereWithAggregatesInput {
  AND: [UserTeamScalarWhereWithAggregatesInput!]
  NOT: [UserTeamScalarWhereWithAggregatesInput!]
  OR: [UserTeamScalarWhereWithAggregatesInput!]
  teamId: IntWithAggregatesFilter
  thumbUrl: StringWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
}

type UserTeamSumAggregate {
  teamId: Int
}

input UserTeamSumOrderByAggregateInput {
  teamId: SortOrder
}

input UserTeamUncheckedCreateInput {
  teamId: Int!
  thumbUrl: String
  userUuid: String!
}

input UserTeamUncheckedCreateNestedManyWithoutTeamInput {
  connect: [UserTeamWhereUniqueInput!]
  connectOrCreate: [UserTeamCreateOrConnectWithoutTeamInput!]
  create: [UserTeamCreateWithoutTeamInput!]
  createMany: UserTeamCreateManyTeamInputEnvelope
}

input UserTeamUncheckedCreateNestedManyWithoutUserInput {
  connect: [UserTeamWhereUniqueInput!]
  connectOrCreate: [UserTeamCreateOrConnectWithoutUserInput!]
  create: [UserTeamCreateWithoutUserInput!]
  createMany: UserTeamCreateManyUserInputEnvelope
}

input UserTeamUncheckedCreateWithoutTeamInput {
  thumbUrl: String
  userUuid: String!
}

input UserTeamUncheckedCreateWithoutUserInput {
  teamId: Int!
  thumbUrl: String
}

input UserTeamUncheckedUpdateInput {
  teamId: IntFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserTeamUncheckedUpdateManyInput {
  teamId: IntFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserTeamUncheckedUpdateManyWithoutTeamInput {
  thumbUrl: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserTeamUncheckedUpdateManyWithoutTeamNestedInput {
  connect: [UserTeamWhereUniqueInput!]
  connectOrCreate: [UserTeamCreateOrConnectWithoutTeamInput!]
  create: [UserTeamCreateWithoutTeamInput!]
  createMany: UserTeamCreateManyTeamInputEnvelope
  delete: [UserTeamWhereUniqueInput!]
  deleteMany: [UserTeamScalarWhereInput!]
  disconnect: [UserTeamWhereUniqueInput!]
  set: [UserTeamWhereUniqueInput!]
  update: [UserTeamUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [UserTeamUpdateManyWithWhereWithoutTeamInput!]
  upsert: [UserTeamUpsertWithWhereUniqueWithoutTeamInput!]
}

input UserTeamUncheckedUpdateManyWithoutUserInput {
  teamId: IntFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
}

input UserTeamUncheckedUpdateManyWithoutUserNestedInput {
  connect: [UserTeamWhereUniqueInput!]
  connectOrCreate: [UserTeamCreateOrConnectWithoutUserInput!]
  create: [UserTeamCreateWithoutUserInput!]
  createMany: UserTeamCreateManyUserInputEnvelope
  delete: [UserTeamWhereUniqueInput!]
  deleteMany: [UserTeamScalarWhereInput!]
  disconnect: [UserTeamWhereUniqueInput!]
  set: [UserTeamWhereUniqueInput!]
  update: [UserTeamUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserTeamUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserTeamUpsertWithWhereUniqueWithoutUserInput!]
}

input UserTeamUncheckedUpdateWithoutTeamInput {
  thumbUrl: StringFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
}

input UserTeamUncheckedUpdateWithoutUserInput {
  teamId: IntFieldUpdateOperationsInput
  thumbUrl: StringFieldUpdateOperationsInput
}

input UserTeamUpdateManyWithWhereWithoutTeamInput {
  data: UserTeamUncheckedUpdateManyWithoutTeamInput!
  where: UserTeamScalarWhereInput!
}

input UserTeamUpdateManyWithWhereWithoutUserInput {
  data: UserTeamUncheckedUpdateManyWithoutUserInput!
  where: UserTeamScalarWhereInput!
}

input UserTeamUpdateWithWhereUniqueWithoutTeamInput {
  data: UserTeamUncheckedUpdateWithoutTeamInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamUpdateWithWhereUniqueWithoutUserInput {
  data: UserTeamUncheckedUpdateWithoutUserInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamUpsertWithWhereUniqueWithoutTeamInput {
  create: UserTeamUncheckedCreateWithoutTeamInput!
  update: UserTeamUncheckedUpdateWithoutTeamInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamUpsertWithWhereUniqueWithoutUserInput {
  create: UserTeamUncheckedCreateWithoutUserInput!
  update: UserTeamUncheckedUpdateWithoutUserInput!
  where: UserTeamWhereUniqueInput!
}

input UserTeamUserUuidTeamIdCompoundUniqueInput {
  teamId: Int!
  userUuid: String!
}

input UserTeamWhereInput {
  AND: [UserTeamWhereInput!]
  NOT: [UserTeamWhereInput!]
  OR: [UserTeamWhereInput!]
  team: TeamRelationFilter
  teamId: IntFilter
  thumbUrl: StringFilter
  user: UserRelationFilter
  userUuid: UuidFilter
}

input UserTeamWhereUniqueInput {
  AND: [UserTeamWhereInput!]
  NOT: [UserTeamWhereInput!]
  OR: [UserTeamWhereInput!]
  team: TeamRelationFilter
  teamId: IntFilter
  thumbUrl: StringFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  userUuid_teamId: UserTeamUserUuidTeamIdCompoundUniqueInput
}

type UserToken {
  token: String
  user: User!
}

type UserTokenLogin {
  token: String
  user: User
}

input UserUncheckedCreateInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutArchivesInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutBoardCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutBoardUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCardAssignmentInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCardCommentInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCardCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCardMovementsInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCardUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCoardMenbershipInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutColumnCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutColumnUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutCommentProjectsInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutFieldValueCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutFieldValueCreatedInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutFieldValueUpdatedInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutGroupCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutGroupUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutGroupUserInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutHistoryFlagCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutHistoryMonthlyRecurringRevenueInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutHistoryStepCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutInvestInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutKrCommentProjectInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutKrCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutKrInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutNotfyCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutNotfyUpdateddByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutObjectiveCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutObjectiveUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutOkrObjectiveProjectInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutOkrProjectHistoryInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutOkrProjectInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutPrimitiveStreenghtCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutPrimitiveStreenghtUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutProjectCreatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutProjectUpdatedByInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutUserJobFunctionInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutUserNotfyInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutUserOrganizationInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutUserStepsInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutUserTeamInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  uuid: String
  viewedCommentProject: ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput
}

input UserUncheckedCreateWithoutViewedCommentProjectInput {
  AcessHistoryUser: AcessHistoryUserUncheckedCreateNestedManyWithoutUserInput
  active: Boolean
  archives: ArchivesUncheckedCreateNestedManyWithoutUserInput
  avatarUrl: String
  boardCreatedBy: BoardUncheckedCreateNestedManyWithoutCreatedByUserInput
  boardUpdatedBy: BoardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  cardAssignment: CardAssignmentUncheckedCreateNestedManyWithoutUserInput
  cardComment: CardCommentUncheckedCreateNestedManyWithoutUserInput
  cardCreatedBy: CardUncheckedCreateNestedManyWithoutCreatedByUserInput
  cardMovements: CardMovementUncheckedCreateNestedManyWithoutUserInput
  cardUpdatedBy: CardUncheckedCreateNestedManyWithoutUpdatedByUserInput
  client: ClientUncheckedCreateNestedManyWithoutUserInput
  coardMenbership: BoardMenbershipUncheckedCreateNestedManyWithoutUserInput
  columnCreatedBy: ColumnUncheckedCreateNestedManyWithoutCreatedByUserInput
  columnUpdatedBy: ColumnUncheckedCreateNestedManyWithoutUpdatedByUserInput
  commentProjects: CommentProjectUncheckedCreateNestedManyWithoutUserInput
  createdAt: DateTimeISO
  email: String!
  fieldValueCreated: FieldUncheckedCreateNestedManyWithoutCreatedUserInput
  fieldValueCreatedBy: FieldsValueUncheckedCreateNestedManyWithoutUserInput
  fieldValueUpdated: FieldUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupCreatedBy: GroupUncheckedCreateNestedManyWithoutCreatedUserInput
  groupUpdatedBy: GroupUncheckedCreateNestedManyWithoutUpdatedUserInput
  groupUser: GroupUserUncheckedCreateNestedManyWithoutUserInput
  historyFlagCreatedBy: HistoryFlagUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedCreateNestedManyWithoutCreatedByUserInput
  historyStepCreatedBy: HistoryStepUncheckedCreateNestedManyWithoutCreatedByUserInput
  invest: InvestUncheckedCreateNestedManyWithoutUserInput
  kr: KrUncheckedCreateNestedManyWithoutUserInput
  krCommentProject: KrCommentProjectUncheckedCreateNestedManyWithoutUserInput
  krCreatedBy: KrUncheckedCreateNestedManyWithoutCreatedByUserInput
  name: String!
  nickName: String!
  notfyCreatedBy: NotfyUncheckedCreateNestedManyWithoutCreatedByUserInput
  notfyUpdateddBy: NotfyUncheckedCreateNestedManyWithoutUpdatedByUserInput
  objectiveCreatedBy: ObjectiveUncheckedCreateNestedManyWithoutCreatedByUserInput
  objectiveUpdatedBy: ObjectiveUncheckedCreateNestedManyWithoutUpdatedByUserInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedCreateNestedManyWithoutUserInput
  okrProject: OkrProjectUncheckedCreateNestedManyWithoutUserInput
  okrProjectHistory: OkrProjectHistoryUncheckedCreateNestedManyWithoutUserInput
  password: String!
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutCreatedUserInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedCreateNestedManyWithoutUpdatedUserInput
  projectCreatedBy: ProjectUncheckedCreateNestedManyWithoutCreatedByUserInput
  projectUpdatedBy: ProjectUncheckedCreateNestedManyWithoutUpdatedByUserInput
  role: role
  selfStructure: SelfStructureUncheckedCreateNestedManyWithoutUserInput
  tokenFirebase: TokenFirebaseUncheckedCreateNestedManyWithoutUserInput
  typeUser: typeUser
  updatedAt: DateTimeISO
  userJobFunction: UserJobFunctionUncheckedCreateNestedManyWithoutUserInput
  userNotfy: UserNotfyUncheckedCreateNestedManyWithoutUserInput
  userOrganization: UserOrganizationUncheckedCreateNestedManyWithoutUserInput
  userSteps: UserStepUncheckedCreateNestedManyWithoutUserInput
  userTeam: UserTeamUncheckedCreateNestedManyWithoutUserInput
  uuid: String
}

input UserUncheckedUpdateInput {
  AcessHistoryUser: AcessHistoryUserUncheckedUpdateManyWithoutUserNestedInput
  active: BoolFieldUpdateOperationsInput
  archives: ArchivesUncheckedUpdateManyWithoutUserNestedInput
  avatarUrl: StringFieldUpdateOperationsInput
  boardCreatedBy: BoardUncheckedUpdateManyWithoutCreatedByUserNestedInput
  boardUpdatedBy: BoardUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  cardAssignment: CardAssignmentUncheckedUpdateManyWithoutUserNestedInput
  cardComment: CardCommentUncheckedUpdateManyWithoutUserNestedInput
  cardCreatedBy: CardUncheckedUpdateManyWithoutCreatedByUserNestedInput
  cardMovements: CardMovementUncheckedUpdateManyWithoutUserNestedInput
  cardUpdatedBy: CardUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  client: ClientUncheckedUpdateManyWithoutUserNestedInput
  coardMenbership: BoardMenbershipUncheckedUpdateManyWithoutUserNestedInput
  columnCreatedBy: ColumnUncheckedUpdateManyWithoutCreatedByUserNestedInput
  columnUpdatedBy: ColumnUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  commentProjects: CommentProjectUncheckedUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fieldValueCreated: FieldUncheckedUpdateManyWithoutCreatedUserNestedInput
  fieldValueCreatedBy: FieldsValueUncheckedUpdateManyWithoutUserNestedInput
  fieldValueUpdated: FieldUncheckedUpdateManyWithoutUpdatedUserNestedInput
  groupCreatedBy: GroupUncheckedUpdateManyWithoutCreatedUserNestedInput
  groupUpdatedBy: GroupUncheckedUpdateManyWithoutUpdatedUserNestedInput
  groupUser: GroupUserUncheckedUpdateManyWithoutUserNestedInput
  historyFlagCreatedBy: HistoryFlagUncheckedUpdateManyWithoutCreatedByUserNestedInput
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueUncheckedUpdateManyWithoutCreatedByUserNestedInput
  historyStepCreatedBy: HistoryStepUncheckedUpdateManyWithoutCreatedByUserNestedInput
  invest: InvestUncheckedUpdateManyWithoutUserNestedInput
  kr: KrUncheckedUpdateManyWithoutUserNestedInput
  krCommentProject: KrCommentProjectUncheckedUpdateManyWithoutUserNestedInput
  krCreatedBy: KrUncheckedUpdateManyWithoutCreatedByUserNestedInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  notfyCreatedBy: NotfyUncheckedUpdateManyWithoutCreatedByUserNestedInput
  notfyUpdateddBy: NotfyUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  objectiveCreatedBy: ObjectiveUncheckedUpdateManyWithoutCreatedByUserNestedInput
  objectiveUpdatedBy: ObjectiveUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  okrObjectiveProject: OkrObjectiveProjectUncheckedUpdateManyWithoutUserNestedInput
  okrProject: OkrProjectUncheckedUpdateManyWithoutUserNestedInput
  okrProjectHistory: OkrProjectHistoryUncheckedUpdateManyWithoutUserNestedInput
  password: StringFieldUpdateOperationsInput
  personalInfo: JSON
  primitiveStreenghtCreatedBy: PrimitiveStreenghtUncheckedUpdateManyWithoutCreatedUserNestedInput
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtUncheckedUpdateManyWithoutUpdatedUserNestedInput
  projectCreatedBy: ProjectUncheckedUpdateManyWithoutCreatedByUserNestedInput
  projectUpdatedBy: ProjectUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  role: EnumroleFieldUpdateOperationsInput
  selfStructure: SelfStructureUncheckedUpdateManyWithoutUserNestedInput
  tokenFirebase: TokenFirebaseUncheckedUpdateManyWithoutUserNestedInput
  typeUser: EnumtypeUserFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userJobFunction: UserJobFunctionUncheckedUpdateManyWithoutUserNestedInput
  userNotfy: UserNotfyUncheckedUpdateManyWithoutUserNestedInput
  userOrganization: UserOrganizationUncheckedUpdateManyWithoutUserNestedInput
  userSteps: UserStepUncheckedUpdateManyWithoutUserNestedInput
  userTeam: UserTeamUncheckedUpdateManyWithoutUserNestedInput
  uuid: StringFieldUpdateOperationsInput
  viewedCommentProject: ViewedCommentProjectUncheckedUpdateManyWithoutUserNestedInput
}

input UserUncheckedUpdateManyInput {
  active: BoolFieldUpdateOperationsInput
  avatarUrl: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  nickName: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  personalInfo: JSON
  role: EnumroleFieldUpdateOperationsInput
  typeUser: EnumtypeUserFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  uuid: StringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  AcessHistoryUser: AcessHistoryUserListRelationFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  active: BoolFilter
  archives: ArchivesListRelationFilter
  avatarUrl: StringFilter
  boardCreatedBy: BoardListRelationFilter
  boardUpdatedBy: BoardListRelationFilter
  cardAssignment: CardAssignmentListRelationFilter
  cardComment: CardCommentListRelationFilter
  cardCreatedBy: CardListRelationFilter
  cardMovements: CardMovementListRelationFilter
  cardUpdatedBy: CardListRelationFilter
  client: ClientListRelationFilter
  coardMenbership: BoardMenbershipListRelationFilter
  columnCreatedBy: ColumnListRelationFilter
  columnUpdatedBy: ColumnListRelationFilter
  commentProjects: CommentProjectListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  fieldValueCreated: FieldListRelationFilter
  fieldValueCreatedBy: FieldsValueListRelationFilter
  fieldValueUpdated: FieldListRelationFilter
  groupCreatedBy: GroupListRelationFilter
  groupUpdatedBy: GroupListRelationFilter
  groupUser: GroupUserListRelationFilter
  historyFlagCreatedBy: HistoryFlagListRelationFilter
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueListRelationFilter
  historyStepCreatedBy: HistoryStepListRelationFilter
  invest: InvestListRelationFilter
  kr: KrListRelationFilter
  krCommentProject: KrCommentProjectListRelationFilter
  krCreatedBy: KrListRelationFilter
  name: StringFilter
  nickName: StringFilter
  notfyCreatedBy: NotfyListRelationFilter
  notfyUpdateddBy: NotfyListRelationFilter
  objectiveCreatedBy: ObjectiveListRelationFilter
  objectiveUpdatedBy: ObjectiveListRelationFilter
  okrObjectiveProject: OkrObjectiveProjectListRelationFilter
  okrProject: OkrProjectListRelationFilter
  okrProjectHistory: OkrProjectHistoryListRelationFilter
  password: StringFilter
  personalInfo: JsonNullableFilter
  primitiveStreenghtCreatedBy: PrimitiveStreenghtListRelationFilter
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtListRelationFilter
  projectCreatedBy: ProjectListRelationFilter
  projectUpdatedBy: ProjectListRelationFilter
  role: EnumroleFilter
  selfStructure: SelfStructureListRelationFilter
  tokenFirebase: TokenFirebaseListRelationFilter
  typeUser: EnumtypeUserFilter
  updatedAt: DateTimeFilter
  userJobFunction: UserJobFunctionListRelationFilter
  userNotfy: UserNotfyListRelationFilter
  userOrganization: UserOrganizationListRelationFilter
  userSteps: UserStepListRelationFilter
  userTeam: UserTeamListRelationFilter
  uuid: UuidFilter
  viewedCommentProject: ViewedCommentProjectListRelationFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput!]
  AcessHistoryUser: AcessHistoryUserListRelationFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  active: BoolFilter
  archives: ArchivesListRelationFilter
  avatarUrl: StringFilter
  boardCreatedBy: BoardListRelationFilter
  boardUpdatedBy: BoardListRelationFilter
  cardAssignment: CardAssignmentListRelationFilter
  cardComment: CardCommentListRelationFilter
  cardCreatedBy: CardListRelationFilter
  cardMovements: CardMovementListRelationFilter
  cardUpdatedBy: CardListRelationFilter
  client: ClientListRelationFilter
  coardMenbership: BoardMenbershipListRelationFilter
  columnCreatedBy: ColumnListRelationFilter
  columnUpdatedBy: ColumnListRelationFilter
  commentProjects: CommentProjectListRelationFilter
  createdAt: DateTimeFilter
  email: String
  fieldValueCreated: FieldListRelationFilter
  fieldValueCreatedBy: FieldsValueListRelationFilter
  fieldValueUpdated: FieldListRelationFilter
  groupCreatedBy: GroupListRelationFilter
  groupUpdatedBy: GroupListRelationFilter
  groupUser: GroupUserListRelationFilter
  historyFlagCreatedBy: HistoryFlagListRelationFilter
  historyMonthlyRecurringRevenue: HistoryMonthlyRecurringRevenueListRelationFilter
  historyStepCreatedBy: HistoryStepListRelationFilter
  invest: InvestListRelationFilter
  kr: KrListRelationFilter
  krCommentProject: KrCommentProjectListRelationFilter
  krCreatedBy: KrListRelationFilter
  name: StringFilter
  nickName: String
  notfyCreatedBy: NotfyListRelationFilter
  notfyUpdateddBy: NotfyListRelationFilter
  objectiveCreatedBy: ObjectiveListRelationFilter
  objectiveUpdatedBy: ObjectiveListRelationFilter
  okrObjectiveProject: OkrObjectiveProjectListRelationFilter
  okrProject: OkrProjectListRelationFilter
  okrProjectHistory: OkrProjectHistoryListRelationFilter
  password: StringFilter
  personalInfo: JsonNullableFilter
  primitiveStreenghtCreatedBy: PrimitiveStreenghtListRelationFilter
  primitiveStreenghtUpdatedBy: PrimitiveStreenghtListRelationFilter
  projectCreatedBy: ProjectListRelationFilter
  projectUpdatedBy: ProjectListRelationFilter
  role: EnumroleFilter
  selfStructure: SelfStructureListRelationFilter
  tokenFirebase: TokenFirebaseListRelationFilter
  typeUser: EnumtypeUserFilter
  updatedAt: DateTimeFilter
  userJobFunction: UserJobFunctionListRelationFilter
  userNotfy: UserNotfyListRelationFilter
  userOrganization: UserOrganizationListRelationFilter
  userSteps: UserStepListRelationFilter
  userTeam: UserTeamListRelationFilter
  uuid: String
  viewedCommentProject: ViewedCommentProjectListRelationFilter
}

input UuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidFilter
  notIn: [String!]
}

input UuidNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidNullableFilter
  notIn: [String!]
}

input UuidNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidNullableWithAggregatesFilter
  notIn: [String!]
}

input UuidWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidWithAggregatesFilter
  notIn: [String!]
}

type ViewedCommentProject {
  project: Project!
  projectId: Int!
  updatedAt: DateTimeISO!
  user: User!
  userUuid: String!
  vieweds: Int!
}

type ViewedCommentProjectAvgAggregate {
  projectId: Float
  vieweds: Float
}

input ViewedCommentProjectAvgOrderByAggregateInput {
  projectId: SortOrder
  vieweds: SortOrder
}

type ViewedCommentProjectCountAggregate {
  _all: Int!
  projectId: Int!
  updatedAt: Int!
  userUuid: Int!
  vieweds: Int!
}

input ViewedCommentProjectCountOrderByAggregateInput {
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
  vieweds: SortOrder
}

input ViewedCommentProjectCreateManyInput {
  projectId: Int!
  updatedAt: DateTimeISO
  userUuid: String!
  vieweds: Int
}

input ViewedCommentProjectCreateManyProjectInput {
  updatedAt: DateTimeISO
  userUuid: String!
  vieweds: Int
}

input ViewedCommentProjectCreateManyProjectInputEnvelope {
  data: [ViewedCommentProjectCreateManyProjectInput!]!
  skipDuplicates: Boolean
}

input ViewedCommentProjectCreateManyUserInput {
  projectId: Int!
  updatedAt: DateTimeISO
  vieweds: Int
}

input ViewedCommentProjectCreateManyUserInputEnvelope {
  data: [ViewedCommentProjectCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ViewedCommentProjectCreateNestedManyWithoutProjectInput {
  connect: [ViewedCommentProjectWhereUniqueInput!]
  connectOrCreate: [ViewedCommentProjectCreateOrConnectWithoutProjectInput!]
  create: [ViewedCommentProjectCreateWithoutProjectInput!]
  createMany: ViewedCommentProjectCreateManyProjectInputEnvelope
}

input ViewedCommentProjectCreateOrConnectWithoutProjectInput {
  create: ViewedCommentProjectUncheckedCreateWithoutProjectInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectCreateOrConnectWithoutUserInput {
  create: ViewedCommentProjectUncheckedCreateWithoutUserInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectCreateWithoutProjectInput {
  updatedAt: DateTimeISO
  user: UserCreateNestedOneWithoutViewedCommentProjectInput!
  vieweds: Int
}

input ViewedCommentProjectCreateWithoutUserInput {
  project: ProjectCreateNestedOneWithoutViewedCommentProjectInput!
  updatedAt: DateTimeISO
  vieweds: Int
}

type ViewedCommentProjectGroupBy {
  _avg: ViewedCommentProjectAvgAggregate
  _count: ViewedCommentProjectCountAggregate
  _max: ViewedCommentProjectMaxAggregate
  _min: ViewedCommentProjectMinAggregate
  _sum: ViewedCommentProjectSumAggregate
  projectId: Int!
  updatedAt: DateTimeISO!
  userUuid: String!
  vieweds: Int!
}

input ViewedCommentProjectListRelationFilter {
  every: ViewedCommentProjectWhereInput
  none: ViewedCommentProjectWhereInput
  some: ViewedCommentProjectWhereInput
}

type ViewedCommentProjectMaxAggregate {
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String
  vieweds: Int
}

input ViewedCommentProjectMaxOrderByAggregateInput {
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
  vieweds: SortOrder
}

type ViewedCommentProjectMinAggregate {
  projectId: Int
  updatedAt: DateTimeISO
  userUuid: String
  vieweds: Int
}

input ViewedCommentProjectMinOrderByAggregateInput {
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
  vieweds: SortOrder
}

input ViewedCommentProjectOrderByRelationAggregateInput {
  _count: SortOrder
}

input ViewedCommentProjectOrderByWithAggregationInput {
  _avg: ViewedCommentProjectAvgOrderByAggregateInput
  _count: ViewedCommentProjectCountOrderByAggregateInput
  _max: ViewedCommentProjectMaxOrderByAggregateInput
  _min: ViewedCommentProjectMinOrderByAggregateInput
  _sum: ViewedCommentProjectSumOrderByAggregateInput
  projectId: SortOrder
  updatedAt: SortOrder
  userUuid: SortOrder
  vieweds: SortOrder
}

input ViewedCommentProjectOrderByWithRelationInput {
  project: ProjectOrderByWithRelationInput
  projectId: SortOrder
  updatedAt: SortOrder
  user: UserOrderByWithRelationInput
  userUuid: SortOrder
  vieweds: SortOrder
}

enum ViewedCommentProjectScalarFieldEnum {
  projectId
  updatedAt
  userUuid
  vieweds
}

input ViewedCommentProjectScalarWhereInput {
  AND: [ViewedCommentProjectScalarWhereInput!]
  NOT: [ViewedCommentProjectScalarWhereInput!]
  OR: [ViewedCommentProjectScalarWhereInput!]
  projectId: IntFilter
  updatedAt: DateTimeFilter
  userUuid: UuidFilter
  vieweds: IntFilter
}

input ViewedCommentProjectScalarWhereWithAggregatesInput {
  AND: [ViewedCommentProjectScalarWhereWithAggregatesInput!]
  NOT: [ViewedCommentProjectScalarWhereWithAggregatesInput!]
  OR: [ViewedCommentProjectScalarWhereWithAggregatesInput!]
  projectId: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
  userUuid: UuidWithAggregatesFilter
  vieweds: IntWithAggregatesFilter
}

type ViewedCommentProjectSumAggregate {
  projectId: Int
  vieweds: Int
}

input ViewedCommentProjectSumOrderByAggregateInput {
  projectId: SortOrder
  vieweds: SortOrder
}

input ViewedCommentProjectUncheckedCreateInput {
  projectId: Int!
  updatedAt: DateTimeISO
  userUuid: String!
  vieweds: Int
}

input ViewedCommentProjectUncheckedCreateNestedManyWithoutProjectInput {
  connect: [ViewedCommentProjectWhereUniqueInput!]
  connectOrCreate: [ViewedCommentProjectCreateOrConnectWithoutProjectInput!]
  create: [ViewedCommentProjectCreateWithoutProjectInput!]
  createMany: ViewedCommentProjectCreateManyProjectInputEnvelope
}

input ViewedCommentProjectUncheckedCreateNestedManyWithoutUserInput {
  connect: [ViewedCommentProjectWhereUniqueInput!]
  connectOrCreate: [ViewedCommentProjectCreateOrConnectWithoutUserInput!]
  create: [ViewedCommentProjectCreateWithoutUserInput!]
  createMany: ViewedCommentProjectCreateManyUserInputEnvelope
}

input ViewedCommentProjectUncheckedCreateWithoutProjectInput {
  updatedAt: DateTimeISO
  userUuid: String!
  vieweds: Int
}

input ViewedCommentProjectUncheckedCreateWithoutUserInput {
  projectId: Int!
  updatedAt: DateTimeISO
  vieweds: Int
}

input ViewedCommentProjectUncheckedUpdateInput {
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUncheckedUpdateManyInput {
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUncheckedUpdateManyWithoutProjectInput {
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUncheckedUpdateManyWithoutProjectNestedInput {
  connect: [ViewedCommentProjectWhereUniqueInput!]
  connectOrCreate: [ViewedCommentProjectCreateOrConnectWithoutProjectInput!]
  create: [ViewedCommentProjectCreateWithoutProjectInput!]
  createMany: ViewedCommentProjectCreateManyProjectInputEnvelope
  delete: [ViewedCommentProjectWhereUniqueInput!]
  deleteMany: [ViewedCommentProjectScalarWhereInput!]
  disconnect: [ViewedCommentProjectWhereUniqueInput!]
  set: [ViewedCommentProjectWhereUniqueInput!]
  update: [ViewedCommentProjectUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ViewedCommentProjectUpdateManyWithWhereWithoutProjectInput!]
  upsert: [ViewedCommentProjectUpsertWithWhereUniqueWithoutProjectInput!]
}

input ViewedCommentProjectUncheckedUpdateManyWithoutUserInput {
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUncheckedUpdateManyWithoutUserNestedInput {
  connect: [ViewedCommentProjectWhereUniqueInput!]
  connectOrCreate: [ViewedCommentProjectCreateOrConnectWithoutUserInput!]
  create: [ViewedCommentProjectCreateWithoutUserInput!]
  createMany: ViewedCommentProjectCreateManyUserInputEnvelope
  delete: [ViewedCommentProjectWhereUniqueInput!]
  deleteMany: [ViewedCommentProjectScalarWhereInput!]
  disconnect: [ViewedCommentProjectWhereUniqueInput!]
  set: [ViewedCommentProjectWhereUniqueInput!]
  update: [ViewedCommentProjectUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ViewedCommentProjectUpdateManyWithWhereWithoutUserInput!]
  upsert: [ViewedCommentProjectUpsertWithWhereUniqueWithoutUserInput!]
}

input ViewedCommentProjectUncheckedUpdateWithoutProjectInput {
  updatedAt: DateTimeFieldUpdateOperationsInput
  userUuid: StringFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUncheckedUpdateWithoutUserInput {
  projectId: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  vieweds: IntFieldUpdateOperationsInput
}

input ViewedCommentProjectUpdateManyWithWhereWithoutProjectInput {
  data: ViewedCommentProjectUncheckedUpdateManyWithoutProjectInput!
  where: ViewedCommentProjectScalarWhereInput!
}

input ViewedCommentProjectUpdateManyWithWhereWithoutUserInput {
  data: ViewedCommentProjectUncheckedUpdateManyWithoutUserInput!
  where: ViewedCommentProjectScalarWhereInput!
}

input ViewedCommentProjectUpdateWithWhereUniqueWithoutProjectInput {
  data: ViewedCommentProjectUncheckedUpdateWithoutProjectInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectUpdateWithWhereUniqueWithoutUserInput {
  data: ViewedCommentProjectUncheckedUpdateWithoutUserInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectUpsertWithWhereUniqueWithoutProjectInput {
  create: ViewedCommentProjectUncheckedCreateWithoutProjectInput!
  update: ViewedCommentProjectUncheckedUpdateWithoutProjectInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectUpsertWithWhereUniqueWithoutUserInput {
  create: ViewedCommentProjectUncheckedCreateWithoutUserInput!
  update: ViewedCommentProjectUncheckedUpdateWithoutUserInput!
  where: ViewedCommentProjectWhereUniqueInput!
}

input ViewedCommentProjectUserUuidProjectIdCompoundUniqueInput {
  projectId: Int!
  userUuid: String!
}

input ViewedCommentProjectWhereInput {
  AND: [ViewedCommentProjectWhereInput!]
  NOT: [ViewedCommentProjectWhereInput!]
  OR: [ViewedCommentProjectWhereInput!]
  project: ProjectRelationFilter
  projectId: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  vieweds: IntFilter
}

input ViewedCommentProjectWhereUniqueInput {
  AND: [ViewedCommentProjectWhereInput!]
  NOT: [ViewedCommentProjectWhereInput!]
  OR: [ViewedCommentProjectWhereInput!]
  project: ProjectRelationFilter
  projectId: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userUuid: UuidFilter
  userUuid_projectId: ViewedCommentProjectUserUuidProjectIdCompoundUniqueInput
  vieweds: IntFilter
}

input cardProps {
  action: String!
  from: String
  id: ID!
  to: String
}

type findUniqueCardInHistoryComponentOutput {
  hasHistoryModified: Boolean!
  id: String!
  moviment: [CardMovement!]!
}

enum role {
  account
  admin
  client
  cs
  financ
  head
  invest
  pep
  root
  user
}

enum typeFile {
  BOLETO
  CONTRACT
  CONTRATO
  DOCUMENT
  IMAGE
  NF
  PAYMENT
}

enum typeFlagsCommentProject {
  CHURN
  COMMENT
  DANGER
  OCCURRENCE
  SAFE
  VICTORY
}

enum typeNotfy {
  alert
  pushNotification
}

enum typeUser {
  client
  invest
}